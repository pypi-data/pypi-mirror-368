name: Post-release: Bump pyproject.toml Version

permissions:
  contents: write

on:
  push:
    tags:
      - 'v*.*.*'         # Triggers on new version tags like v1.2.3

jobs:
  bump-version:
    runs-on: self-hosted

    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Ensure gh CLI is installed
        run: |
          if ! command -v gh &> /dev/null; then
            echo "gh not found, installing..."
            # Install GitHub CLI
            if [[ "$RUNNER_OS" == "Linux" ]]; then
              type -p curl >/dev/null || sudo apt-get install curl -y
              curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
              sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
              echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
              sudo apt-get update
              sudo apt-get install gh -y
            elif [[ "$RUNNER_OS" == "macOS" ]]; then
              brew install gh
            else
              echo "Unsupported OS for automatic gh install" && exit 1
            fi
          else
            echo "gh is already installed"
          fi

      - name: Get version from tag
        id: get_tag
        run: |
          TAG=${GITHUB_REF##*/}
          VERSION=${TAG#v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Update pyproject.toml version
        run: |
          VERSION="${{ steps.get_tag.outputs.version }}"
          python3 -c "
import toml
py = 'pyproject.toml'
d = toml.load(py)
d['project']['version'] = '${VERSION}'
toml.dump(d, open(py, 'w'))
"

      - name: Create version bump branch
        run: |
          git checkout -b bump-version/v${{ steps.get_tag.outputs.version }}
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add pyproject.toml
          git commit -m "chore: bump version to v${{ steps.get_tag.outputs.version }}"
          git push origin bump-version/v${{ steps.get_tag.outputs.version }}

      - name: Create Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr create --title "chore: bump version to v${{ steps.get_tag.outputs.version }}" \
            --body "Automated version bump after release." \
            --head bump-version/v${{ steps.get_tag.outputs.version }} \
            --base main
