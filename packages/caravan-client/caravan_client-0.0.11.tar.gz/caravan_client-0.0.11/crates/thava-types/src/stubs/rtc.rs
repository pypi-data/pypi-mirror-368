// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct RtcMessage {
    #[prost(enumeration = "RtcEvent", tag = "1")]
    pub event: i32,
    #[prost(bytes = "vec", tag = "2")]
    pub message: ::prost::alloc::vec::Vec<u8>,
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum RtcEvent {
    Offer = 0,
    Answer = 1,
    AcceptAnswer = 2,
    IceCandidate = 3,
}
impl RtcEvent {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            RtcEvent::Offer => "OFFER",
            RtcEvent::Answer => "ANSWER",
            RtcEvent::AcceptAnswer => "ACCEPT_ANSWER",
            RtcEvent::IceCandidate => "ICE_CANDIDATE",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "OFFER" => Some(Self::Offer),
            "ANSWER" => Some(Self::Answer),
            "ACCEPT_ANSWER" => Some(Self::AcceptAnswer),
            "ICE_CANDIDATE" => Some(Self::IceCandidate),
            _ => None,
        }
    }
}
