name: Release

on:
  push:
    tags:
      - "yul-*.*.*"

env:
  PYTHON_VERSION: "3.13"

permissions:
  contents: write
  id-token: write

jobs:
  validate:
    name: Validate Version
    runs-on: ubuntu-latest
    outputs:
      tag_version: ${{ steps.set_vars.outputs.tag_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Hatch
        run: pip install hatch

      - name: Set up version variables
        id: set_vars
        run: |
          TAG_NAME="${{ github.ref_name }}"
          TAG_VERSION="${TAG_NAME#yul-}"
          echo "TAG_VERSION=${TAG_VERSION}" >> $GITHUB_ENV
          echo "tag_version=${TAG_VERSION}" >> $GITHUB_OUTPUT

      - name: Check package version coherence
        run: |
          PACKAGE_VERSION=$(hatch version)
          echo "INFO: Tag version is ${TAG_VERSION}, package version is ${PACKAGE_VERSION}."
          if [[ "$PACKAGE_VERSION" != "$TAG_VERSION" ]]; then
            echo "❌ Version Mismatch: Tag version (${TAG_VERSION}) does not match package version from hatch (${PACKAGE_VERSION})."
            exit 1
          fi
          echo "✅ Package version matches tag."

      - name: Check for changelog entry
        run: |
          echo "INFO: Checking for changelog entry for version ${TAG_VERSION}."
          CHANGELOG_PATTERN="^##.*ynab-unlinked.*${TAG_VERSION}"
          if ! grep -q -E "$CHANGELOG_PATTERN" CHANGELOG.md; then
            echo "❌ Changelog entry not found for version ${TAG_VERSION} in CHANGELOG.md."
            exit 1
          fi
          echo "✅ Changelog entry found."

  build-and-publish:
    name: Build and Publish to PyPI
    # This job now runs after validation
    needs: validate
    runs-on: ubuntu-latest
    environment: release
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install hatch

      - name: Build package
        run: hatch build

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@v1.12.4

  create-release:
    name: Create GitHub Release
    # This job now runs last, after the package is published
    needs: [validate, build-and-publish]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract release notes from CHANGELOG
        id: extract_notes
        run: |
          # Still gets the version from the 'validate' job's output
          VERSION_NUMBER="${{ needs.validate.outputs.tag_version }}"
          SEARCH_PATTERN="^##.*ynab-unlinked.*${VERSION_NUMBER}"

          echo "body<<EOF" >> $GITHUB_OUTPUT
          awk -v pattern="$SEARCH_PATTERN" '
            $0 ~ pattern { p=1; next }
            /^## / && p { exit }
            p { print }
          ' CHANGELOG.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        id: release
        uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          body: ${{ steps.extract_notes.outputs.body }}
          draft: false
          prerelease: false
