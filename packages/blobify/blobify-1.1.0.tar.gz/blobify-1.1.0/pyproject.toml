[build-system]
requires = [
    "setuptools>=61.0",
    "wheel",
]
build-backend = "setuptools.build_meta"

[project]
name = "blobify"
version = "1.1.0"
authors = [
    { name = "Alexander Parker", email = "pypi@parker.im" },
]
maintainers = [
    { name = "Alexander Parker", email = "pypi@parker.im" },
]
license = "MIT"
description = "Package your entire codebase into a single text file for AI consumption"
requires-python = ">=3.10"
dependencies = [
    "rich>=14.1.0",
    "scrubadub>=2.0.1",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Topic :: Software Development :: Documentation",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: General",
    "Topic :: Utilities",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
    "Environment :: Console",
    "Natural Language :: English",
    "Typing :: Typed",
]
keywords = [
    "ai",
    "llm",
    "chatgpt",
    "claude",
    "codebase",
    "code-analysis",
    "text-processing",
    "file-aggregation",
    "developer-tools",
    "automation",
    "documentation",
    "code-review",
    "refactoring",
    "context-engineering",
]

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.optional-dependencies]
dev = [
    "invoke>=2.2.0",
    "black>=25.1.0",
    "isort>=6.0.1",
    "flake8>=7.3.0",
    "Flake8-pyproject>=1.2.3",
    "flake8-bugbear>=24.12.12",
    "pep8-naming>=0.15.1",
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "pre-commit>=4.2.0",
    "unittest-xml-reporting>=3.2.0",
    "tomli-w>=1.2.0",
    "build>=1.3.0",
    "twine>=6.1.0",
]

[project.scripts]
bfy = "blobify.main:main"

[project.urls]
Author = "https://parker.im"
Documentation = "https://github.com/AlexanderParker/blobify#readme"
Repository = "https://github.com/AlexanderParker/blobify"
"Bug Reports" = "https://github.com/AlexanderParker/blobify/issues"
"Feature Requests" = "https://github.com/AlexanderParker/blobify/issues"
"VS Code Extension" = "https://marketplace.visualstudio.com/items?itemName=ShentonConsulting.blobify-format"

[tool.setuptools.packages.find]

[tool.black]
line-length = 180
target-version = [
    "py310",
]
include = "\\.pyi?$"
extend-exclude = "/(\n  \\.eggs\n  | \\.git\n  | \\.hg\n  | \\.mypy_cache\n  | \\.tox\n  | \\.venv\n  | _build\n  | buck-out\n  | build\n  | dist\n)/\n"

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 180

[tool.pytest.ini_options]
minversion = "8.4"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]
junit_family = "xunit2"
junit_suite_name = "blobify"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]
filterwarnings = [
    "ignore:invalid escape sequence.*:DeprecationWarning",
    "ignore:Filth.replace_with.*:DeprecationWarning:scrubadub.*",
]

[tool.coverage.run]
source = [
    "blobify",
]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.flake8]
max-line-length = 180
extend-ignore = [
    "E203",
    "W503",
]
