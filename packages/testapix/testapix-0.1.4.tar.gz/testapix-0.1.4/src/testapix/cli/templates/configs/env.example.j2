# Environment Variables for {{ project_name }}
# Generated on {{ created_date }} with TestAPIX v{{ testapix_version }}
#
# IMPORTANT: This is a template file showing required environment variables.
# Copy this file to .env and fill in your actual values:
#   cp .env.example .env
#
# NEVER commit .env files to version control!
# Add .env to your .gitignore file to prevent accidental commits.

# =============================================================================
# TESTAPIX CONFIGURATION
# =============================================================================

# Environment Selection
# Determines which configuration files to load (local, test, staging, production)
TESTAPIX_ENVIRONMENT=local

# Logging Level
# Control verbosity: DEBUG, INFO, WARNING, ERROR, CRITICAL
# TESTAPIX_LOG_LEVEL=INFO

# =============================================================================
# API CONFIGURATION
# =============================================================================

# Base API URL (optional - overrides configuration files)
# Useful for testing against different deployments without changing configs
# TESTAPIX_HTTP__BASE_URL=https://api.example.com

# Request Timeout (optional - in seconds)
# TESTAPIX_HTTP__TIMEOUT=30

# SSL Verification (optional - use with caution!)
# Set to false only for development with self-signed certificates
# TESTAPIX_HTTP__VERIFY_SSL=true

{% if auth_type %}
# =============================================================================
# AUTHENTICATION
# =============================================================================

{% if auth_type == 'bearer' %}
# Bearer Token Authentication
# Obtain this token from your API provider or authentication endpoint
TESTAPIX_AUTH_TOKEN=your-bearer-token-here

# Example tokens for different environments (DO NOT USE IN PRODUCTION):
# Development: dev-token-12345
# Staging: stg-token-67890
# Production: [Obtain from secure credential store]

{% elif auth_type == 'api_key' %}
# API Key Authentication
# Your API key for accessing protected endpoints
TESTAPIX_API_KEY=your-api-key-here

# API keys are typically long random strings like:
# test_sk_1234567890abcdef1234567890abcdef
# Remember to use test keys for non-production environments

{% elif auth_type == 'oauth2' %}
# OAuth2 Authentication Configuration
# Register your application to obtain these credentials

# OAuth2 Client ID (public identifier)
TESTAPIX_CLIENT_ID=your-client-id-here

# OAuth2 Client Secret (keep this SECRET!)
TESTAPIX_CLIENT_SECRET=your-client-secret-here

# OAuth2 Token Endpoint
# The URL where TestAPIX will exchange credentials for access tokens
TESTAPIX_TOKEN_URL=https://auth.example.com/oauth/token

# Additional OAuth2 settings can be configured in YAML files:
# - scope: Permissions requested (configured in base.yaml)
# - grant_type: OAuth2 flow type (defaults to client_credentials)

{% elif auth_type == 'basic' %}
# Basic Authentication
# Username and password for HTTP Basic Auth
TESTAPIX_AUTH_USERNAME=your-username-here
TESTAPIX_AUTH_PASSWORD=your-password-here

# Basic auth is less secure than token-based methods.
# Consider using it only over HTTPS connections.
{% endif %}
{% endif %}

# =============================================================================
# DATABASE CONFIGURATION (Optional)
# =============================================================================

# Database connection for test data cleanup and validation
# Uncomment and configure if using database features

# PostgreSQL example:
# TESTAPIX_DATABASE_URL=postgresql://username:password@localhost:5432/test_db

# MySQL example:
# TESTAPIX_DATABASE_URL=mysql://username:password@localhost:3306/test_db

# SQLite example (for local development):
# TESTAPIX_DATABASE_URL=sqlite:///./test_data.db

# =============================================================================
# ADVANCED CONFIGURATION
# =============================================================================

# Override ANY configuration value using environment variables
# Format: TESTAPIX_<SECTION>__<KEY>=value
# Use double underscore (__) for nested values

# Examples:
# TESTAPIX_HTTP__RETRIES=5
# TESTAPIX_HTTP__HEADERS__X_CUSTOM_HEADER=my-value
# TESTAPIX_REPORTING__OUTPUT_DIR=custom-reports
# TESTAPIX_PARALLEL_WORKERS=4

# =============================================================================
# PROJECT-SPECIFIC VARIABLES
# =============================================================================

# Add your own environment variables here for use in tests
# These don't need the TESTAPIX_ prefix

# TEST_USER_EMAIL=testuser@example.com
# TEST_USER_PASSWORD=test-password-123
# ADMIN_API_KEY=admin-key-for-special-tests

# =============================================================================
# EXTERNAL SERVICES (if applicable)
# =============================================================================

# Configuration for external services your API might depend on
# STRIPE_TEST_KEY=your-stripe-test-key-here
# SENDGRID_API_KEY=
# AWS_ACCESS_KEY_ID=
# AWS_SECRET_ACCESS_KEY=

# =============================================================================
# NOTES
# =============================================================================

# 1. Environment Variable Priority:
#    Environment variables override ALL configuration file settings.
#    This allows for easy runtime configuration without file changes.

# 2. Variable Expansion:
#    Use ${VAR_NAME} syntax in YAML files to reference environment variables.
#    TestAPIX will automatically substitute these at runtime.

# 3. Security Best Practices:
#    - Use different credentials for each environment
#    - Rotate credentials regularly
#    - Use least-privilege principles (minimal required permissions)
#    - Consider using a secrets management service for production

# 4. Debugging:
#    Set TESTAPIX_LOG_LEVEL=DEBUG to see which configuration values are being used
#    This helps troubleshoot configuration issues
