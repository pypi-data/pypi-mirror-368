[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "infralib"
version = "0.1.0"
description = "Infrastructure simulation library for reinforcement learning and optimization"
readme = "README.md"
requires-python = ">=3.12"
license = {text = "MIT"}
authors = [
    {name = "InfraLib Team", email = "contact@prny.me"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "matplotlib>=3.7.2",
    "numpy>=1.25.2",
    "seaborn>=0.12.2",
    "scipy>=1.10.0",
    "pandas>=2.0.0",
    "pyyaml>=6.0",
    "gymnasium>=1.0.0",
    "stable-baselines3>=2.0.0",
    "torch>=2.0.0",
    "tqdm>=4.60.0",
    "ipykernel>=6.20.0",
    "numba>=0.61.2",
    "tensordict>=0.9.1",
    "torchrl>=0.9.2",
    "pytest>=8.4.1",
    "networkx>=3.5",
    "pytest-cov>=6.2.1",
    "ruff>=0.12.8",
    "plotly>=6.2.0",
    "streamlit>=1.48.0",
    "osmnx>=2.0.5",
    "folium>=0.20.0",
    "geopandas>=1.1.1",
    "dash>=3.2.0",
    "wandb>=0.21.1",
    "tensorboard>=2.20.0",
    "rich>=14.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.6.0",
    "pre-commit>=3.5.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=2.0.0",
    "sphinx-autodoc-typehints>=1.24.0",
]

[project.urls]
Homepage = "https://infralib.github.io/"
Repository = "https://github.com/pthangeda/InfraLib"
Issues = "https://github.com/pthangeda/InfraLib/issues"
Documentation = "https://infralib.readthedocs.io/"

[tool.hatch.build.targets.wheel]
packages = ["infralib"]

[tool.ruff]
target-version = "py312"
line-length = 88
indent-width = 4

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by formatter
    "E741",  # ambiguous variable name
]
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--cov=infralib",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[tool.coverage.run]
source = ["infralib"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "pass",
    "except ImportError:",
]

[dependency-groups]
docs = [
    "sphinx>=8.2.3",
    "sphinx-autodoc-typehints>=3.2.0",
    "sphinx-rtd-theme>=3.0.2",
]
