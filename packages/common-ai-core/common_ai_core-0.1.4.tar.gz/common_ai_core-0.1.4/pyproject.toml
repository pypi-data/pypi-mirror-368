[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "common-ai-core"
version = "0.1.4"
description = "A flexible Python framework for building AI chat applications with support for multiple LLM providers including OpenAI, Anthropic, Gemini, DeepSeek, and local Llama models"
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
authors = [
    { name = "Helge Moden", email = "helgemod@gmail.com" }
]
maintainers = [
    { name = "Helge Moden", email = "helgemod@gmail.com" }
]
dependencies = [
    "openai>=1.0.0",
    "tiktoken>=0.3.0"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Communications :: Chat",
    "Topic :: Text Processing :: Linguistic",
    "Framework :: Pytest",
    "Typing :: Typed"
]
keywords = [
    "ai", "artificial-intelligence", "chat", "llm", "language-model",
    "openai", "anthropic", "gemini", "deepseek", "llama", "claude", "gpt",
    "streaming", "memory", "token-counting", "json-parsing", "reasoning"
]

[project.optional-dependencies]
anthropic = ["anthropic>=0.3.0"]
deepseek = ["openai>=1.0.0"]
gemini = ["google-generativeai>=0.3.0"]
llama = ["llama-cpp-python>=0.2.0"]
all-cloud = [
    "anthropic>=0.3.0",
    "openai>=1.0.0",
    "google-generativeai>=0.3.0"
]
all = [
    "anthropic>=0.3.0",
    "llama-cpp-python>=0.2.0",
    "openai>=1.0.0",
    "google-generativeai>=0.3.0"
]
dev = [
    "pytest>=7.0",
    "black>=22.0",
    "isort>=5.0"
]

[tool.hatch.build.targets.wheel]
packages = ["common_ai_core"] 