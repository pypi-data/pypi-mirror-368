[tool.poetry]
name = "pyprland"
version = "2.4.7"
description = "Hyperland plugin system - batteries included"
authors = [
    "fdev31 <fdev31@gmail.com>",
]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/hyprland-community/pyprland/"
packages = [
    { include = "pyprland" },
]

[tool.poetry.scripts]
pypr = "pyprland.command:main"

[tool.poetry.dependencies]
python = ">=3.11"
aiofiles = ">=23.2.1"

[tool.poetry.group.dev.dependencies]
black = "^24.1.1"
coverage = "^7.4.1"
flake8 = "^7.0.0"
mypy = "^1.8.0"
pdoc = "^14.4.0"
pydantic = "^2.6.1"
pylint = "^3.0.3"
pytest = "^7.4.3"
pytest-asyncio = "^0.23.2"
pytest-mock = "^3.12.0"
ruff = "^0.4.2"
vulture = "^2.11"

[tool.poetry.group.test.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.23.2"
pytest-mock = "^3.12.0"

[tool.ruff]
line-length = 140
preview = false
src = [
    "pyprland",
]
exclude = [
    "*_v?.py",
    "tests",
    "scripts",
    "sample_extension",
    ".git",
]
target-version = "py311"

[tool.ruff.lint]
fixable = [
    "ALL",
]
ignore = [
    "ANN002",
    "ANN003",
    "ANN101",
    "ANN102",
    "ANN204",
    "D105",
    "D107",
    "E203",
    "ISC001",
    "PLW0603",
    "PTH118",
    "RET503",
    "S101",
    "S311",
    "S404",
    "S602",
    "S603",
    "S605",
    "S607",
    "TID252",
]
select = [
    "A",
    "AIR",
    "ARG",
    "ASYNC",
    "B",
    "B",
    "C",
    "C4",
    "C90",
    "D",
    "D",
    "DTZ",
    "E",
    "EM",
    "EXE",
    "F",
    "FA",
    "FIX",
    "FLY",
    "I",
    "ICN",
    "INP",
    "INT",
    "ISC",
    "LOG",
    "PERF",
    "PIE",
    "PT",
    "PYI",
    "Q",
    "RET",
    "RSE",
    "S",
    "SIM",
    "SLF",
    "SLOT",
    "T10",
    "TCH",
    "TD",
    "TID",
    "ASYNC1",
    "UP",
    "W",
    "YTT",
    "ANN",
    "N",
    "G",
    "PL",
    "TRY",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
indent-style = "space"
line-ending = "auto"

[tool.pylsp-mypy]
enabled = true
live_mode = true
strict = false
exclude = [
    "tests/*",
    "scripts/*",
    "sample_extension/*",
]

[build-system]
requires = [
    "poetry-core",
]
build-backend = "poetry.core.masonry.api"

