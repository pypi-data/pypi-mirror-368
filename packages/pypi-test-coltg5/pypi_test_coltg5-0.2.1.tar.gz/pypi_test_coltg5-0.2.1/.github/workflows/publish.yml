name: Publish to PyPI (Trusted Publisher)

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write
  id-token: write # Required for PyPI Trusted Publisher (OIDC)

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Set version in pyproject.toml from tag using uv
        shell: bash
        run: |
          # Extract version from tag (e.g., refs/tags/v1.2.3 -> 1.2.3)
          TAG_VERSION=$(echo "$GITHUB_REF" | sed -E 's|refs/tags/v([0-9]+\.[0-9]+\.[0-9]+).*|\1|')
          echo "Setting version in pyproject.toml to $TAG_VERSION using uv"
          uv version "$TAG_VERSION"

      - name: Build sdist and wheel with uv
        run: uv build

      - name: Upload dist artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  publish:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Download dist artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Upload distributions to GitHub Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/*
          file_glob: true
          tag: ${{ github.ref_name }}
          release_name: "Test PyPI artifacts for ${{ github.ref_name }}"
          overwrite: true
          make_latest: true

      - name: Publish to PyPI via Trusted Publisher
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
          # repository-url: https://test.pypi.org/legacy/
