Metadata-Version: 2.4
Name: hopeit.log-streamer
Version: 0.27.0
Summary: Hopeit Engine Log Streamer Plugin
Author-email: Leo Smerling & Pablo Canto <contact@hopeit.com.ar>, Leo Smerling <contact@hopeit.com.ar>, Pablo Canto <contact@hopeit.com.ar>
License: Apache 2
Project-URL: Homepage, https://github.com/hopeit-git/hopeit.engine
Project-URL: CI: GitHub Actions, https://github.com/hopeit-git/hopeit.engine/actions?query=workflow
Project-URL: Docs: RTD, https://hopeitengine.readthedocs.io/en/latest/
Project-URL: GitHub: issues, https://github.com/hopeit-git/hopeit.engine/issues
Project-URL: GitHub: repo, https://github.com/hopeit-git/hopeit.engine
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Development Status :: 5 - Production/Stable
Classifier: Operating System :: POSIX :: Linux
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: Microsoft :: Windows
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Framework :: AsyncIO
Description-Content-Type: text/markdown
Requires-Dist: hopeit.engine>=0.27.0
Requires-Dist: watchdog>=6.0.0

# hopeit.engine log-streamer plugin


This library is part of hopeit.engine:

> check: https://github.com/hopeit-git/hopeit.engine


### Install using hopeit.engine extras [log-streamer]:

```
pip install hopeit.engine[log-streamer]
```

### Copy `config/plugin-config.json` and customize parameters to match your runtime environment. 


### Run a `hopeit_server` instance, in each node where you run your appplications:

```
hopeit_server --port=8099 --start-streams --config-files=server-config.json,customized-plugin-config.json
```

> This way log_streamer plugin process will run separately from your main application, read logs locally on each node and publish data to a stream.
