"""
    Copyright 2018 Inmanta

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Contact: code@inmanta.com
"""
import mitogen

entity Run extends std::PurgeableResource:
    """
        Run a command with almost exact semantics as the exec type of puppet

        *The command is not executed in a shell!* This means:
        
        * shell operators like `;`, `|`, `>` don't work
        * variable substitution doesn't work: `echo $PATH` will literally print `$PATH`
        * variable substitution doesn't work in environment variables either: setting `PATH` to `$PATH` will result in `command not found`

        If want to run a command in a shell, use the plugin 'in_shell':

        .. code:: inmanta
            
            exec::Run(host=host, command=exec::in_shell(command))

        If you want variable substitution on environment variables, use the export command in the shell:

        .. code:: inmanta
            
            exec::Run(host=host, command=exec::in_shell("export PATH=$PATH:/usr/local/bin; {{command}}"))

        :attr command: The actual command to execute. The command should be almost always be idempotent.
        :attr creates: A file that the command creates, when the file already exists the command will not be executed. This
                       helps to make simple commands idempotent
        :attr cwd: The directory from which to run the command. WARNING: Command is spawned in a subshell. This implies that
                   the real path of cwd is used and not a possible symlinked path.
        :attr environment: Environment variables to set before the command is executed. A dictionary of variables can be passed
                           in the form {"var": "value"}.  
        :attr onlyif: Only execute the command if this command is true (returns 0)
        :attr path: The path to search the command in
        :attr reload: The command to execute when this run needs to reload. If empty the command itself will be executed again.
        :attr reload_only: Only use this command to reload
        :attr returns: A list of valid return codes, by default this is only 0
        :attr timeout: The maximum time the command should take. If the command takes longer, the deploy agent will try to end
                        it.
        :attr unless: If this attribute is set, the command will only execute if the command in this attribute is not successful
                       (returns not 0). If the command passed to this attribute does not exist, this is interpreted as a
                       non-successful execution.
        :attr skip_on_fail: Report this resource as skipped instead of failed.
    """
    string command
    string creates=""
    string cwd=""
    dict environment={}
    string onlyif=""
    string path=""
    string reload=""
    bool reload_only = false
    int[] returns=[0]
    int timeout=300
    string unless=""
    bool skip_on_fail=false
    bool send_event=true
    bool receive_events=true
end

Run.via [0:1] -- mitogen::Context
"""
Mitogen context dedicated to this resource.  If not specified, defaults
to the one of the host.
"""

Run.host [1] -- std::Host
"""
Relation to the host on which the Run commmand is executed.
"""

# Force the command, combined with the host to make a Run unique
index Run(host, command)

implementation execHost for Run:
    self.requires = self.host.requires
end

implement Run using execHost
