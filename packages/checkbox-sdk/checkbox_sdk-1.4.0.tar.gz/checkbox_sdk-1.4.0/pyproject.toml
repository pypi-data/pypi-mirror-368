[project]
name = "checkbox-sdk"
version = "1.4.0"
description = "Ukraine checkbox api python sdk"
authors = [
    { name = "Roman Telezhynskyi", email = "dismine@gmail.com" }
]
maintainers = [
    { name = "Roman Telezhynskyi", email = "dismine@gmail.com" }
]
requires-python = ">=3.9,<4.0"
keywords = ["python", "sdk"]
readme = "README.md"
license = "MIT"
license-files = ["LICEN[CS]E.*"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "License :: OSI Approved :: MIT License"
]
dependencies = [
    "pyjwt (>=2.4.0,<3.0.0)",
    "httpx (>=0.28.1,<0.29.0)",
    "httpcore (>=1.0.7,<2.0.0)"
]

[project.urls]
Repository = "https://github.com/dismine/checkbox-sdk.git"
Documentation = "https://checkbox-sdk.readthedocs.io"
Changelog = "https://github.com/dismine/checkbox-sdk/blob/main/CHANGELOG.md"

[tool.poetry]
include = ["CHANGELOG.md"]
packages = [{ include = "checkbox_sdk" }]

# poetry add --group dev <package name>
[tool.poetry.group.dev.dependencies]
black = "^25.1.0"
flake8 = "^7.1.1"
pytz = "^2025.1"
sourcery = "^1.34.0"
pytest = "^8.3.4"
tox = "^4.24.1"
coverage = "^7.6.12"
types-pyjwt = "^1.7.1"
pydantic = { extras = ["email"], version = "^2.8.2" }
pytest-asyncio = "^0.25.3"
python-magic = "^0.4.27"
ruff = "^0.9.6"
safety = "^3.2.14"
pylint = "^3.3.4"
deptry = "^0.23.0"
mypy = "^1.15.0"
types-pytz = "^2025.1.0.20250204"

# poetry add --group docs <package name>
[tool.poetry.group.docs.dependencies]
sphinx = "^7.4"
sphinx-prompt = "^1.5.0"

[tool.black]
line-length = 119
target-version = ['py310', 'py311']
exclude = '''
(
    \.eggs
  | \.git
  | build
  | dist
)
'''

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 119
known_third_party = ["httpx", "jwt", "httpcore"]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.masonry.api"

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
]
log_cli = true
log_cli_level = "CRITICAL"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
asyncio_default_fixture_loop_scope = "function"
