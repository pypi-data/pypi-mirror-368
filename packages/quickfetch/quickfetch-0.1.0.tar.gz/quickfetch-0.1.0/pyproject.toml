[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "quickfetch"
dynamic = ["version"]
description = "Fast, simple, and beautifully minimal web scraping"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "quickfetch", email = "quickfetch@example.com"},
]
maintainers = [
    {name = "quickfetch", email = "quickfetch@example.com"},
]
keywords = ["web scraping", "http", "html", "json", "requests", "beautifulsoup", "lxml"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Markup :: HTML",
]
requires-python = ">=3.8"
dependencies = [
    "requests>=2.25.0",
    "selectolax>=0.3.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.800",
]

[project.urls]
Homepage = "https://github.com/quickfetch/quickfetch"
Documentation = "https://github.com/quickfetch/quickfetch#readme"
Repository = "https://github.com/quickfetch/quickfetch"
"Bug Tracker" = "https://github.com/quickfetch/quickfetch/issues"

[project.scripts]
quickfetch = "qfetch:get"

[tool.setuptools]
packages = ["qfetch"]

[tool.setuptools_scm]
write_to = "qfetch/_version.py"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["qfetch"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
