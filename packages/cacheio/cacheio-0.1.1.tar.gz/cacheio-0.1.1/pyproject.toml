[tool.poetry]
name = "cacheio"
version = "0.1.1"
description = "cacheio is a flexible, user-friendly Python caching interface that unifies synchronous and asynchronous caching backends. It provides a consistent API for interacting with proven libraries—cachelib for synchronous caching and aiocache for asynchronous caching—allowing seamless integration of both styles in your applications. With configurable defaults, optional backend installation, and easy-to-use decorators, cacheio simplifies caching logic while minimizing dependencies."
authors = ["Nathan Lucas <nlucas@bnlucas.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/bnlucas/cacheio"
repository = "https://github.com/bnlucas/cacheio"
keywords = [
  "cache",
  "caching",
  "asyncio",
  "synchronous",
  "aiohttp",
  "cachelib"
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: System :: Systems Administration"
]

[tool.poetry.dependencies]
python = "^3.10"

[tool.poetry.group.dev.dependencies]
black = "^25.1.0"
flake8 = "^7.3.0"
pre-commit = "^4.2.0"
pytest = "^8.4.1"
pytest-asyncio = "^1.1.0"
pytest-cov = "^6.2.1"
tox = "^4.28.4"

[tool.poetry.group.sync]
optional = true

[tool.poetry.group.sync.dependencies]
cachelib = "^0.13.0"

[tool.poetry.group.async]
optional = true

[tool.poetry.group.async.dependencies]
aiocache = "^0.12.2"

[tool.poetry.group.full]
optional = true

[tool.poetry.group.full.dependencies]
cachelib = "^0.13.0"
aiocache = "^0.12.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.flake8]
ignore = ["E203", "E266", "W503", "W504"]
max-line-length = 88
max-complexity = 12
select = ["C", "E", "F", "W", "B", "B9"]

[tool.mypy]
ignore_missing_imports = true
