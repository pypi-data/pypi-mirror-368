[build-system]
requires = ["setuptools==69.2.0", "wheel==0.43.0", "setuptools-scm==8.1.0"]
build-backend = "setuptools.build_meta"

[project]
name = "grizzly-loadtester-cli"
description = "Command line interface for grizzly-loadtester"
dynamic = ["version"]
authors = [
    {name = "biometria", email="opensource@biometria.se"}
]
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
    "behave ==1.2.6",
    "Jinja2 ==3.1.6",
    "requests ==2.32.4",
    "packaging ==24.1",
    "chardet ==5.2.0",
    "tomli ==2.0.1",
    "pyotp ==2.9.0",
    "PyYAML ==6.0.2",
    "progress ==1.6",
    "jinja2-simple-tags ==0.6.1",
    "azure-core ==1.34.0",
    "azure-keyvault-secrets ==4.10.0",
    "azure-identity ==1.23.1"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12"
]
keywords = [
    "grizzly",
    "grizzly-loadtester",
    "cli",
    "command line interface",
    "locust",
    "behave",
    "load",
    "loadtest",
    "performance",
    "traffic generator"
]

[project.urls]
Documentation = "https://biometria-se.github.io/grizzly/command-line-interface/usage/"
Code = "https://github.com/biometria-se/grizzly/"
Tracker = "https://github.com/Biometria-se/grizzly/issues"

[project.scripts]
grizzly-cli = "grizzly_cli.__main__:main"

[project.optional-dependencies]
dev = [
    "mypy ==1.11.1",
    "pytest ==8.3.2",
    "coverage[toml] ==7.6.1",
    "pytest-cov ==5.0.0",
    "pytest-mock ==3.14.0",
    "pytest-timeout ==2.3.1",
    "atomicwrites ==1.4.1",
    "requests-mock ==1.12.1",
    "pip-licenses ==4.3.4",
    "pytablewriter ==1.2.0",
    "line-profiler ==4.1.2",
    "gevent>=24.10.1,<26.0.0",
    "flask ==3.0.3",
    "types-requests >=2.27.13,<3.0.0",
    "setuptools-scm==8.1.0",
    "types-pyyaml",
    "snakeviz",
    "ruff ==0.12.1"
]
ci = [
    "build ==1.1.1",
    "twine ==5.0.0"
]

[tool.setuptools_scm]
write_to = "grizzly_cli/__version__.py"
local_scheme = "no-local-version"

[tool.setuptools.packages.find]
include = ["grizzly*"]
exclude = ["tests"]

[tool.setuptools.package-data]
grizzly_cli = [
    "py.typed",
    "static/compose.yaml",
    "static/Containerfile",
    "argparse/bashcompletion/bashcompletion.bash"
]

[tool.mypy]
exclude = ["tests/e2e/example"]
# https://github.com/python/mypy/issues/5870
#follow_missing_imports = true
show_column_numbers = true
check_untyped_defs = true
disallow_untyped_defs = true
#disallow_incomplete_defs = true
#disallow_any_generics = true
#disallow_subclassing_any = true
#disallow_untyped_calls = true
disallow_incomplete_defs = true
#disallow_untyped_decorators = true
no_implicit_optional = true
no_implicit_reexport = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "behave.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "gevent.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "setuptools_scm.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "progress.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "jinja2_simple_tags.*"
ignore_missing_imports = true

[tool.coverage.run]
omit = ["tests/*", "/tmp/*"]

[tool.pytest.ini_options]
addopts = [
    "--cov-config=pyproject.toml",
    "--cov=.",
    "--cov-report=",
    "--no-cov-on-fail"
]

[tool.ruff]
exclude = [
    ".env", ".venv", ".pytest_tmp", "build", "dist", "grizzly_cli/__version__.py"
]
line-length = 180
indent-width = 4

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "ANN401",
    "BLE001",
    "D100", "D101", "D102", "D103", "D104", "D105", "D106", "D107", "D203", "D213", "D205", "D301", "D407", "D417",
    "DTZ005",
    "E722", "E402",
    "F405", "F403",
    "N801",
    "PD011",
    "PLR2004",
    "UP007", "UP006", "UP045",
    "Q000",
    "S101", "S104", "S314", "S603", "S607", "S701",
    "SLF001",
    "T201",
    "TRY301"
]

[tool.ruff.lint.per-file-ignores]
"script/**" = ["INP001", "D100"]
"tests/unit/utils/test___init__.py" = ["W291"]
"tests/e2e/example/**" = ["ALL"]

[tool.ruff.lint.mccabe]
max-complexity = 15

[tool.ruff.lint.pylint]
max-branches = 15
max-args = 10
