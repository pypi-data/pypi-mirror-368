[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "bilateral-truth"
version = "0.1.0"
description = "Caching bilateral factuality evaluation using generalized truth values"
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
authors = [
    {name = "Bradley Allen", email = "b.p.allen@uva.nl"},
]
maintainers = [
    {name = "Bradley Allen", email = "b.p.allen@uva.nl"},
]
keywords = [
    "factuality", 
    "truth-values", 
    "bilateral-evaluation", 
    "llm", 
    "ai-safety",
    "logic",
    "verification"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    # Core dependencies - only what's absolutely required
    "requests>=2.25.0",
    "python-dotenv>=0.19.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.910",
]
openai = [
    "openai>=1.0.0",
]
anthropic = [
    "anthropic>=0.3.0",
]
all = [
    "openai>=1.0.0",
    "anthropic>=0.3.0",
]

[project.scripts]
bilateral-truth = "bilateral_truth.cli:main"

[project.urls]
Homepage = "https://github.com/bradleyallen/bilateral-truth"
Repository = "https://github.com/bradleyallen/bilateral-truth"
Documentation = "https://github.com/bradleyallen/bilateral-truth#readme"
"Bug Tracker" = "https://github.com/bradleyallen/bilateral-truth/issues"

[tool.setuptools]
packages = ["bilateral_truth"]

[tool.setuptools.package-data]
bilateral_truth = ["py.typed"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v"
markers = [
    "integration: marks tests as integration tests (may require API keys)",
]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.coverage.run]
source = ["bilateral_truth"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]