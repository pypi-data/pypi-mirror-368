{"id": "4d80c2dc-a76b-447f-bf79-e677161b6d6c", "display_name": "sakemin/musicgen-stereo-chord", "description": null, "short_desc": null, "endpoints": [{"id": "predictions", "display_name": "predictions", "description": "", "short_desc": null, "path": "/predictions", "parameters": [{"name": "bpm", "type": "number", "required": false, "default": null, "location": "body", "param_schema": {"type": "number", "title": "Bpm", "x-order": 3, "description": "BPM condition for the generated output. `text_chords` will be processed based on this value. This will be appended at the end of `prompt`."}, "description": "BPM condition for the generated output. `text_chords` will be processed based on this value. This will be appended at the end of `prompt`."}, {"name": "seed", "type": "integer", "required": false, "default": null, "location": "body", "param_schema": {"type": "integer", "title": "Seed", "x-order": 18, "description": "Seed for random number generator. If `None` or `-1`, a random seed will be used."}, "description": "Seed for random number generator. If `None` or `-1`, a random seed will be used."}, {"name": "top_k", "type": "integer", "required": false, "default": 250, "location": "body", "param_schema": {"type": "integer", "title": "Top K", "default": 250, "x-order": 13, "description": "Reduces sampling to the k most likely tokens."}, "description": "Reduces sampling to the k most likely tokens."}, {"name": "top_p", "type": "number", "required": false, "default": 0, "location": "body", "param_schema": {"type": "number", "title": "Top P", "default": 0, "x-order": 14, "description": "Reduces sampling to tokens with cumulative probability of p. When set to  `0` (default), top_k sampling is used."}, "description": "Reduces sampling to tokens with cumulative probability of p. When set to  `0` (default), top_k sampling is used."}, {"name": "prompt", "type": "string", "required": false, "default": null, "location": "body", "param_schema": {"type": "string", "title": "Prompt", "x-order": 1, "description": "A description of the music you want to generate."}, "description": "A description of the music you want to generate."}, {"name": "duration", "type": "integer", "required": false, "default": 8, "location": "body", "param_schema": {"type": "integer", "title": "Duration", "default": 8, "x-order": 8, "description": "Duration of the generated audio in seconds."}, "description": "Duration of the generated audio in seconds."}, {"name": "time_sig", "type": "string", "required": false, "default": "4/4", "location": "body", "param_schema": {"type": "string", "title": "Time Sig", "default": "4/4", "x-order": 4, "description": "Time signature value for the generate output. `text_chords` will be processed based on this value. This will be appended at the end of `prompt`."}, "description": "Time signature value for the generate output. `text_chords` will be processed based on this value. This will be appended at the end of `prompt`."}, {"name": "audio_end", "type": "integer", "required": false, "default": null, "location": "body", "param_schema": {"type": "integer", "title": "Audio End", "minimum": 0, "x-order": 7, "description": "End time of the audio file to use for chord conditioning. If None, will default to the end of the audio clip."}, "description": "End time of the audio file to use for chord conditioning. If None, will default to the end of the audio clip."}, {"name": "audio_start", "type": "integer", "required": false, "default": 0, "location": "body", "param_schema": {"type": "integer", "title": "Audio Start", "default": 0, "minimum": 0, "x-order": 6, "description": "Start time of the audio file to use for chord conditioning."}, "description": "Start time of the audio file to use for chord conditioning."}, {"name": "temperature", "type": "number", "required": false, "default": 1, "location": "body", "param_schema": {"type": "number", "title": "Temperature", "default": 1, "x-order": 15, "description": "Controls the 'conservativeness' of the sampling process. Higher temperature means more diversity."}, "description": "Controls the 'conservativeness' of the sampling process. Higher temperature means more diversity."}, {"name": "text_chords", "type": "string", "required": false, "default": null, "location": "body", "param_schema": {"type": "string", "title": "Text Chords", "x-order": 2, "description": "A text based chord progression condition. Single uppercase alphabet character(eg. `C`) is considered as a major chord. Chord attributes like(`maj`, `min`, `dim`, `aug`, `min6`, `maj6`, `min7`, `minmaj7`, `maj7`, `7`, `dim7`, `hdim7`, `sus2` and `sus4`) can be added to the root alphabet character after `:`.(eg. `A:min7`) Each chord token splitted by `SPACE` is allocated to a single bar. If more than one chord must be allocated to a single bar, cluster the chords adding with `,` without any `SPACE`.(eg. `C,C:7 G, E:min A:min`) You must choose either only one of `audio_chords` below or `text_chords`."}, "description": "A text based chord progression condition. Single uppercase alphabet character(eg. `C`) is considered as a major chord. Chord attributes like(`maj`, `min`, `dim`, `aug`, `min6`, `maj6`, `min7`, `minmaj7`, `maj7`, `7`, `dim7`, `hdim7`, `sus2` and `sus4`) can be added to the root alphabet character after `:`.(eg. `A:min7`) Each chord token splitted by `SPACE` is allocated to a single bar. If more than one chord must be allocated to a single bar, cluster the chords adding with `,` without any `SPACE`.(eg. `C,C:7 G, E:min A:min`) You must choose either only one of `audio_chords` below or `text_chords`."}, {"name": "audio_chords", "type": ["file", "string"], "required": false, "default": null, "location": "body", "param_schema": {"type": "string", "title": "Audio Chords", "format": "uri", "x-order": 5, "description": "An audio file that will condition the chord progression. You must choose only one among `audio_chords` or `text_chords` above."}, "description": "An audio file that will condition the chord progression. You must choose only one among `audio_chords` or `text_chords` above."}, {"name": "continuation", "type": "boolean", "required": false, "default": false, "location": "body", "param_schema": {"type": "boolean", "title": "Continuation", "default": false, "x-order": 9, "description": "If `True`, generated music will continue from `audio_chords`. If chord conditioning, this is only possible when the chord condition is given with `text_chords`. If `False`, generated music will mimic `audio_chords`'s chord."}, "description": "If `True`, generated music will continue from `audio_chords`. If chord conditioning, this is only possible when the chord condition is given with `text_chords`. If `False`, generated music will mimic `audio_chords`'s chord."}, {"name": "model_version", "type": "string", "required": false, "default": "stereo-chord-large", "location": "body", "param_schema": {"allOf": [{"$ref": "#/components/schemas/model_version"}], "default": "stereo-chord-large", "x-order": 0, "description": "Model type. Select `fine-tuned` if you trained the model into your own repository."}, "description": "Model type. Select `fine-tuned` if you trained the model into your own repository."}, {"name": "output_format", "type": "string", "required": false, "default": "wav", "location": "body", "param_schema": {"allOf": [{"$ref": "#/components/schemas/output_format"}], "default": "wav", "x-order": 17, "description": "Output format for generated audio."}, "description": "Output format for generated audio."}, {"name": "chroma_coefficient", "type": "number", "required": false, "default": 1, "location": "body", "param_schema": {"type": "number", "title": "Chroma Coefficient", "default": 1, "maximum": 2.5, "minimum": 0.5, "x-order": 12, "description": "Coefficient value multiplied to multi-hot chord chroma."}, "description": "Coefficient value multiplied to multi-hot chord chroma."}, {"name": "multi_band_diffusion", "type": "boolean", "required": false, "default": false, "location": "body", "param_schema": {"type": "boolean", "title": "Multi Band Diffusion", "default": false, "x-order": 10, "description": "If `True`, the EnCodec tokens will be decoded with MultiBand Diffusion. Not compatible with stereo models."}, "description": "If `True`, the EnCodec tokens will be decoded with MultiBand Diffusion. Not compatible with stereo models."}, {"name": "normalization_strategy", "type": "string", "required": false, "default": "loudness", "location": "body", "param_schema": {"allOf": [{"$ref": "#/components/schemas/normalization_strategy"}], "default": "loudness", "x-order": 11, "description": "Strategy for normalizing audio."}, "description": "Strategy for normalizing audio."}, {"name": "classifier_free_guidance", "type": "integer", "required": false, "default": 3, "location": "body", "param_schema": {"type": "integer", "title": "Classifier Free Guidance", "default": 3, "x-order": 16, "description": "Increases the influence of inputs on the output. Higher values produce lower-varience outputs that adhere more closely to inputs."}, "description": "Increases the influence of inputs on the output. Higher values produce lower-varience outputs that adhere more closely to inputs."}], "responses": {"200": {"description": "Successful prediction", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Output"}}}}}, "timeout_s": null}], "specification": "socaity", "used_models": [], "category": ["03d59d4b-1b52-4f10-a613-fe9cb7511a6d"], "family_id": "be921dbb-6aa6-4b2c-a443-cafd79860a0f", "service_address": {"url": "http://localhost:8001/v1/sakemin/musicgen-stereo-chord"}, "created_at": "2025-08-12T10:19:57.631389+00:00", "version": "ac8140b567ca7e5d26a6fcb382ba3db48b170cd6", "schemas": {"Input": {"type": "object", "title": "Input", "properties": {"bpm": {"type": "number", "title": "Bpm", "x-order": 3, "description": "BPM condition for the generated output. `text_chords` will be processed based on this value. This will be appended at the end of `prompt`."}, "seed": {"type": "integer", "title": "Seed", "x-order": 18, "description": "Seed for random number generator. If `None` or `-1`, a random seed will be used."}, "top_k": {"type": "integer", "title": "Top K", "default": 250, "x-order": 13, "description": "Reduces sampling to the k most likely tokens."}, "top_p": {"type": "number", "title": "Top P", "default": 0, "x-order": 14, "description": "Reduces sampling to tokens with cumulative probability of p. When set to  `0` (default), top_k sampling is used."}, "prompt": {"type": "string", "title": "Prompt", "x-order": 1, "description": "A description of the music you want to generate."}, "duration": {"type": "integer", "title": "Duration", "default": 8, "x-order": 8, "description": "Duration of the generated audio in seconds."}, "time_sig": {"type": "string", "title": "Time Sig", "default": "4/4", "x-order": 4, "description": "Time signature value for the generate output. `text_chords` will be processed based on this value. This will be appended at the end of `prompt`."}, "audio_end": {"type": "integer", "title": "Audio End", "minimum": 0, "x-order": 7, "description": "End time of the audio file to use for chord conditioning. If None, will default to the end of the audio clip."}, "audio_start": {"type": "integer", "title": "Audio Start", "default": 0, "minimum": 0, "x-order": 6, "description": "Start time of the audio file to use for chord conditioning."}, "temperature": {"type": "number", "title": "Temperature", "default": 1, "x-order": 15, "description": "Controls the 'conservativeness' of the sampling process. Higher temperature means more diversity."}, "text_chords": {"type": "string", "title": "Text Chords", "x-order": 2, "description": "A text based chord progression condition. Single uppercase alphabet character(eg. `C`) is considered as a major chord. Chord attributes like(`maj`, `min`, `dim`, `aug`, `min6`, `maj6`, `min7`, `minmaj7`, `maj7`, `7`, `dim7`, `hdim7`, `sus2` and `sus4`) can be added to the root alphabet character after `:`.(eg. `A:min7`) Each chord token splitted by `SPACE` is allocated to a single bar. If more than one chord must be allocated to a single bar, cluster the chords adding with `,` without any `SPACE`.(eg. `C,C:7 G, E:min A:min`) You must choose either only one of `audio_chords` below or `text_chords`."}, "audio_chords": {"type": "string", "title": "Audio Chords", "format": "uri", "x-order": 5, "description": "An audio file that will condition the chord progression. You must choose only one among `audio_chords` or `text_chords` above."}, "continuation": {"type": "boolean", "title": "Continuation", "default": false, "x-order": 9, "description": "If `True`, generated music will continue from `audio_chords`. If chord conditioning, this is only possible when the chord condition is given with `text_chords`. If `False`, generated music will mimic `audio_chords`'s chord."}, "model_version": {"allOf": [{"$ref": "#/components/schemas/model_version"}], "default": "stereo-chord-large", "x-order": 0, "description": "Model type. Select `fine-tuned` if you trained the model into your own repository."}, "output_format": {"allOf": [{"$ref": "#/components/schemas/output_format"}], "default": "wav", "x-order": 17, "description": "Output format for generated audio."}, "chroma_coefficient": {"type": "number", "title": "Chroma Coefficient", "default": 1, "maximum": 2.5, "minimum": 0.5, "x-order": 12, "description": "Coefficient value multiplied to multi-hot chord chroma."}, "multi_band_diffusion": {"type": "boolean", "title": "Multi Band Diffusion", "default": false, "x-order": 10, "description": "If `True`, the EnCodec tokens will be decoded with MultiBand Diffusion. Not compatible with stereo models."}, "normalization_strategy": {"allOf": [{"$ref": "#/components/schemas/normalization_strategy"}], "default": "loudness", "x-order": 11, "description": "Strategy for normalizing audio."}, "classifier_free_guidance": {"type": "integer", "title": "Classifier Free Guidance", "default": 3, "x-order": 16, "description": "Increases the influence of inputs on the output. Higher values produce lower-varience outputs that adhere more closely to inputs."}}}, "Output": {"type": "string", "title": "Output", "format": "uri"}, "Status": {"enum": ["starting", "processing", "succeeded", "canceled", "failed"], "type": "string", "title": "Status", "description": "An enumeration."}, "WebhookEvent": {"enum": ["start", "output", "logs", "completed"], "type": "string", "title": "WebhookEvent", "description": "An enumeration."}, "model_version": {"enum": ["chord", "chord-large", "stereo-chord", "stereo-chord-large"], "type": "string", "title": "model_version", "description": "An enumeration."}, "output_format": {"enum": ["wav", "mp3"], "type": "string", "title": "output_format", "description": "An enumeration."}, "ValidationError": {"type": "object", "title": "ValidationError", "required": ["loc", "msg", "type"], "properties": {"loc": {"type": "array", "items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "title": "Location"}, "msg": {"type": "string", "title": "Message"}, "type": {"type": "string", "title": "Error Type"}}}, "PredictionRequest": {"type": "object", "title": "PredictionRequest", "properties": {"id": {"type": "string", "title": "Id"}, "input": {"$ref": "#/components/schemas/Input"}, "webhook": {"type": "string", "title": "Webhook", "format": "uri", "maxLength": 65536, "minLength": 1}, "created_at": {"type": "string", "title": "Created At", "format": "date-time"}, "output_file_prefix": {"type": "string", "title": "Output File Prefix"}, "webhook_events_filter": {"type": "array", "items": {"$ref": "#/components/schemas/WebhookEvent"}, "default": ["start", "output", "logs", "completed"]}}}, "PredictionResponse": {"type": "object", "title": "PredictionResponse", "properties": {"id": {"type": "string", "title": "Id"}, "logs": {"type": "string", "title": "Logs", "default": ""}, "error": {"type": "string", "title": "Error"}, "input": {"$ref": "#/components/schemas/Input"}, "output": {"$ref": "#/components/schemas/Output"}, "status": {"$ref": "#/components/schemas/Status"}, "metrics": {"type": "object", "title": "Metrics"}, "version": {"type": "string", "title": "Version"}, "created_at": {"type": "string", "title": "Created At", "format": "date-time"}, "started_at": {"type": "string", "title": "Started At", "format": "date-time"}, "completed_at": {"type": "string", "title": "Completed At", "format": "date-time"}}}, "HTTPValidationError": {"type": "object", "title": "HTTPValidationError", "properties": {"detail": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail"}}}, "normalization_strategy": {"enum": ["loudness", "clip", "peak", "rms"], "type": "string", "title": "normalization_strategy", "description": "An enumeration."}}}