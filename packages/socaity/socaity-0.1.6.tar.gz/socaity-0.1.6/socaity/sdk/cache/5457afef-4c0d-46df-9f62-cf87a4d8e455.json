{"id": "5457afef-4c0d-46df-9f62-cf87a4d8e455", "display_name": "fofr/any-comfyui-workflow", "description": null, "short_desc": null, "endpoints": [{"id": "predictions", "display_name": "predictions", "description": "", "short_desc": null, "path": "/predictions", "parameters": [{"name": "input_file", "type": ["file", "string"], "required": false, "default": null, "location": "body", "param_schema": {"type": "string", "title": "Input File", "format": "uri", "x-order": 1, "description": "Input image, video, tar or zip file. Read guidance on workflows and input files here: https://github.com/replicate/cog-comfyui. Alternatively, you can replace inputs with URLs in your JSON workflow and the model will download them."}, "description": "Input image, video, tar or zip file. Read guidance on workflows and input files here: https://github.com/replicate/cog-comfyui. Alternatively, you can replace inputs with URLs in your JSON workflow and the model will download them."}, {"name": "output_format", "type": "string", "required": false, "default": "webp", "location": "body", "param_schema": {"allOf": [{"$ref": "#/components/schemas/output_format"}], "default": "webp", "x-order": 3, "description": "Format of the output images"}, "description": "Format of the output images"}, {"name": "workflow_json", "type": "string", "required": false, "default": "", "location": "body", "param_schema": {"type": "string", "title": "Workflow Json", "default": "", "x-order": 0, "description": "Your ComfyUI workflow as JSON string or URL. You must use the API version of your workflow. Get it from ComfyUI using 'Save (API format)'. Instructions here: https://github.com/replicate/cog-comfyui"}, "description": "Your ComfyUI workflow as JSON string or URL. You must use the API version of your workflow. Get it from ComfyUI using 'Save (API format)'. Instructions here: https://github.com/replicate/cog-comfyui"}, {"name": "output_quality", "type": "integer", "required": false, "default": 95, "location": "body", "param_schema": {"type": "integer", "title": "Output Quality", "default": 95, "maximum": 100, "minimum": 0, "x-order": 4, "description": "Quality of the output images, from 0 to 100. 100 is best quality, 0 is lowest quality."}, "description": "Quality of the output images, from 0 to 100. 100 is best quality, 0 is lowest quality."}, {"name": "randomise_seeds", "type": "boolean", "required": false, "default": true, "location": "body", "param_schema": {"type": "boolean", "title": "Randomise Seeds", "default": true, "x-order": 5, "description": "Automatically randomise seeds (seed, noise_seed, rand_seed)"}, "description": "Automatically randomise seeds (seed, noise_seed, rand_seed)"}, {"name": "force_reset_cache", "type": "boolean", "required": false, "default": false, "location": "body", "param_schema": {"type": "boolean", "title": "Force Reset Cache", "default": false, "x-order": 6, "description": "Force reset the ComfyUI cache before running the workflow. Useful for debugging."}, "description": "Force reset the ComfyUI cache before running the workflow. Useful for debugging."}, {"name": "return_temp_files", "type": "boolean", "required": false, "default": false, "location": "body", "param_schema": {"type": "boolean", "title": "Return Temp Files", "default": false, "x-order": 2, "description": "Return any temporary files, such as preprocessed controlnet images. Useful for debugging."}, "description": "Return any temporary files, such as preprocessed controlnet images. Useful for debugging."}], "responses": {"200": {"description": "Successful prediction", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Output"}}}}}, "timeout_s": null}], "specification": "socaity", "used_models": [], "category": ["2a455e76-d55f-44fb-895c-9b49d7f18e92"], "family_id": "8d12ffc1-3324-4f93-86f8-ebb64f60e315", "service_address": {"url": "http://localhost:8001/v1/fofr/any-comfyui-workflow"}, "created_at": "2025-08-12T10:19:51.330245+00:00", "version": "d7d7b614335587949f22f441295deb1390071f4b", "schemas": {"Input": {"type": "object", "title": "Input", "properties": {"input_file": {"type": "string", "title": "Input File", "format": "uri", "x-order": 1, "description": "Input image, video, tar or zip file. Read guidance on workflows and input files here: https://github.com/replicate/cog-comfyui. Alternatively, you can replace inputs with URLs in your JSON workflow and the model will download them."}, "output_format": {"allOf": [{"$ref": "#/components/schemas/output_format"}], "default": "webp", "x-order": 3, "description": "Format of the output images"}, "workflow_json": {"type": "string", "title": "Workflow Json", "default": "", "x-order": 0, "description": "Your ComfyUI workflow as JSON string or URL. You must use the API version of your workflow. Get it from ComfyUI using 'Save (API format)'. Instructions here: https://github.com/replicate/cog-comfyui"}, "output_quality": {"type": "integer", "title": "Output Quality", "default": 95, "maximum": 100, "minimum": 0, "x-order": 4, "description": "Quality of the output images, from 0 to 100. 100 is best quality, 0 is lowest quality."}, "randomise_seeds": {"type": "boolean", "title": "Randomise Seeds", "default": true, "x-order": 5, "description": "Automatically randomise seeds (seed, noise_seed, rand_seed)"}, "force_reset_cache": {"type": "boolean", "title": "Force Reset Cache", "default": false, "x-order": 6, "description": "Force reset the ComfyUI cache before running the workflow. Useful for debugging."}, "return_temp_files": {"type": "boolean", "title": "Return Temp Files", "default": false, "x-order": 2, "description": "Return any temporary files, such as preprocessed controlnet images. Useful for debugging."}}}, "Output": {"type": "array", "items": {"type": "string", "format": "uri"}, "title": "Output"}, "Status": {"enum": ["starting", "processing", "succeeded", "canceled", "failed"], "type": "string", "title": "Status", "description": "An enumeration."}, "WebhookEvent": {"enum": ["start", "output", "logs", "completed"], "type": "string", "title": "WebhookEvent", "description": "An enumeration."}, "TrainingInput": {"type": "object", "title": "TrainingInput", "properties": {"loras": {"type": "string", "title": "Loras", "x-order": 1, "description": "A list of HuggingFace or CivitAI download URLs (use line breaks to upload multiples)"}, "checkpoints": {"type": "string", "title": "Checkpoints", "x-order": 0, "description": "A list of HuggingFace or CivitAI download URLs (use line breaks to upload multiples)"}, "controlnets": {"type": "string", "title": "Controlnets", "x-order": 4, "description": "A list of HuggingFace or CivitAI download URLs (use line breaks to upload multiples)"}, "upscale_models": {"type": "string", "title": "Upscale Models", "x-order": 2, "description": "A list of HuggingFace or CivitAI download URLs (use line breaks to upload multiples)"}, "embedding_models": {"type": "string", "title": "Embedding Models", "x-order": 3, "description": "A list of HuggingFace or CivitAI download URLs (use line breaks to upload multiples)"}, "animatediff_loras": {"type": "string", "title": "Animatediff Loras", "x-order": 6, "description": "A list of HuggingFace or CivitAI download URLs (use line breaks to upload multiples)"}, "civitai_api_token": {"type": "string", "title": "Civitai Api Token", "format": "password", "x-order": 8, "writeOnly": true, "description": "Optional: Your CivitAI API token. Only needed if you are trying to download CivitAI weights that require authentication. You can create an API key from the bottom of https://civitai.com/user/account", "x-cog-secret": true}, "animatediff_models": {"type": "string", "title": "Animatediff Models", "x-order": 5, "description": "A list of HuggingFace or CivitAI download URLs (use line breaks to upload multiples)"}, "huggingface_read_token": {"type": "string", "title": "Huggingface Read Token", "format": "password", "x-order": 7, "writeOnly": true, "description": "Optional: Your HuggingFace read token. Only needed if you are trying to download HuggingFace weights that require authentication. You can create or get a read token from https://huggingface.co/settings/tokens", "x-cog-secret": true}}}, "output_format": {"enum": ["webp", "jpg", "png"], "type": "string", "title": "output_format", "description": "An enumeration."}, "TrainingOutput": {"type": "object", "title": "TrainingOutput", "required": ["weights"], "properties": {"weights": {"type": "string", "title": "Weights", "format": "uri"}}}, "TrainingRequest": {"type": "object", "title": "TrainingRequest", "properties": {"id": {"type": "string", "title": "Id", "nullable": true}, "input": {"$ref": "#/components/schemas/TrainingInput", "nullable": true}, "context": {"type": "object", "title": "Context", "nullable": true, "additionalProperties": {"type": "string"}}, "webhook": {"type": "string", "title": "Webhook", "format": "uri", "nullable": true, "maxLength": 65536, "minLength": 1}, "created_at": {"type": "string", "title": "Created At", "format": "date-time", "nullable": true}, "output_file_prefix": {"type": "string", "title": "Output File Prefix", "nullable": true}, "webhook_events_filter": {"type": "array", "items": {"$ref": "#/components/schemas/WebhookEvent"}, "title": "Webhook Events Filter", "default": ["start", "output", "logs", "completed"], "nullable": true}}}, "ValidationError": {"type": "object", "title": "ValidationError", "required": ["loc", "msg", "type"], "properties": {"loc": {"type": "array", "items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "title": "Location"}, "msg": {"type": "string", "title": "Message"}, "type": {"type": "string", "title": "Error Type"}}}, "TrainingResponse": {"type": "object", "title": "TrainingResponse", "properties": {"id": {"type": "string", "title": "Id", "nullable": true}, "logs": {"type": "string", "title": "Logs", "default": ""}, "error": {"type": "string", "title": "Error", "nullable": true}, "input": {"$ref": "#/components/schemas/TrainingInput", "nullable": true}, "output": {"$ref": "#/components/schemas/TrainingOutput", "nullable": true}, "status": {"$ref": "#/components/schemas/Status", "nullable": true}, "metrics": {"type": "object", "title": "Metrics", "nullable": true, "additionalProperties": true}, "version": {"type": "string", "title": "Version", "nullable": true}, "created_at": {"type": "string", "title": "Created At", "format": "date-time", "nullable": true}, "started_at": {"type": "string", "title": "Started At", "format": "date-time", "nullable": true}, "completed_at": {"type": "string", "title": "Completed At", "format": "date-time", "nullable": true}}}, "PredictionRequest": {"type": "object", "title": "PredictionRequest", "properties": {"id": {"type": "string", "title": "Id", "nullable": true}, "input": {"$ref": "#/components/schemas/Input", "nullable": true}, "context": {"type": "object", "title": "Context", "nullable": true, "additionalProperties": {"type": "string"}}, "webhook": {"type": "string", "title": "Webhook", "format": "uri", "nullable": true, "maxLength": 65536, "minLength": 1}, "created_at": {"type": "string", "title": "Created At", "format": "date-time", "nullable": true}, "output_file_prefix": {"type": "string", "title": "Output File Prefix", "nullable": true}, "webhook_events_filter": {"type": "array", "items": {"$ref": "#/components/schemas/WebhookEvent"}, "default": ["start", "output", "logs", "completed"], "nullable": true}}}, "PredictionResponse": {"type": "object", "title": "PredictionResponse", "properties": {"id": {"type": "string", "title": "Id", "nullable": true}, "logs": {"type": "string", "title": "Logs", "default": ""}, "error": {"type": "string", "title": "Error", "nullable": true}, "input": {"$ref": "#/components/schemas/Input", "nullable": true}, "output": {"$ref": "#/components/schemas/Output"}, "status": {"$ref": "#/components/schemas/Status", "nullable": true}, "metrics": {"type": "object", "title": "Metrics", "nullable": true, "additionalProperties": true}, "version": {"type": "string", "title": "Version", "nullable": true}, "created_at": {"type": "string", "title": "Created At", "format": "date-time", "nullable": true}, "started_at": {"type": "string", "title": "Started At", "format": "date-time", "nullable": true}, "completed_at": {"type": "string", "title": "Completed At", "format": "date-time", "nullable": true}}}, "HTTPValidationError": {"type": "object", "title": "HTTPValidationError", "properties": {"detail": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail"}}}}}