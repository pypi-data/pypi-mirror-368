{"id": "dc622fc4-7cb0-4029-b43f-e926eee77e6d", "display_name": "openai/gpt-4o", "description": null, "short_desc": null, "endpoints": [{"id": "predictions", "display_name": "predictions", "description": "", "short_desc": null, "path": "/predictions", "parameters": [{"name": "top_p", "type": "number", "required": false, "default": 1, "location": "body", "param_schema": {"type": "number", "title": "Top P", "default": 1, "maximum": 1, "minimum": 0, "x-order": 5, "description": "Nucleus sampling parameter - the model considers the results of the tokens with top_p probability mass. (0.1 means only the tokens comprising the top 10% probability mass are considered.)"}, "description": "Nucleus sampling parameter - the model considers the results of the tokens with top_p probability mass. (0.1 means only the tokens comprising the top 10% probability mass are considered.)"}, {"name": "prompt", "type": "string", "required": false, "default": null, "location": "body", "param_schema": {"type": "string", "title": "Prompt", "x-order": 0, "nullable": true, "description": "The prompt to send to the model. Do not use if using messages."}, "description": "The prompt to send to the model. Do not use if using messages."}, {"name": "image_input", "type": ["array", "file", "string"], "required": false, "default": [], "location": "body", "param_schema": {"type": "array", "items": {"type": "string", "format": "uri"}, "title": "Image Input", "default": [], "x-order": 2, "description": "List of images to send to the model"}, "description": "List of images to send to the model"}, {"name": "temperature", "type": "number", "required": false, "default": 1, "location": "body", "param_schema": {"type": "number", "title": "Temperature", "default": 1, "maximum": 2, "minimum": 0, "x-order": 3, "description": "Sampling temperature between 0 and 2"}, "description": "Sampling temperature between 0 and 2"}, {"name": "system_prompt", "type": "string", "required": false, "default": null, "location": "body", "param_schema": {"type": "string", "title": "System Prompt", "x-order": 1, "nullable": true, "description": "System prompt to set the assistant's behavior"}, "description": "System prompt to set the assistant's behavior"}, {"name": "presence_penalty", "type": "number", "required": false, "default": 0, "location": "body", "param_schema": {"type": "number", "title": "Presence Penalty", "default": 0, "maximum": 2, "minimum": -2, "x-order": 7, "description": "Presence penalty parameter - positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics."}, "description": "Presence penalty parameter - positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics."}, {"name": "frequency_penalty", "type": "number", "required": false, "default": 0, "location": "body", "param_schema": {"type": "number", "title": "Frequency Penalty", "default": 0, "maximum": 2, "minimum": -2, "x-order": 6, "description": "Frequency penalty parameter - positive values penalize the repetition of tokens."}, "description": "Frequency penalty parameter - positive values penalize the repetition of tokens."}, {"name": "max_completion_tokens", "type": "integer", "required": false, "default": 4096, "location": "body", "param_schema": {"type": "integer", "title": "Max Completion Tokens", "default": 4096, "x-order": 4, "description": "Maximum number of completion tokens to generate"}, "description": "Maximum number of completion tokens to generate"}], "responses": {"200": {"description": "Successful prediction", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Output"}}}}}, "timeout_s": null}], "specification": "socaity", "used_models": [], "category": ["01dd20d6-db6a-4c59-9cee-1a3860356a88"], "family_id": "1d0fe916-5283-485d-a31f-167379bcf7c3", "service_address": {"url": "http://localhost:8001/v1/openai/gpt-4o"}, "created_at": "2025-08-12T10:19:42.193619+00:00", "version": "26d8ef53c1a54ebe36fc1051033ebd4750908f51", "schemas": {"Input": {"type": "object", "title": "Input", "properties": {"top_p": {"type": "number", "title": "Top P", "default": 1, "maximum": 1, "minimum": 0, "x-order": 5, "description": "Nucleus sampling parameter - the model considers the results of the tokens with top_p probability mass. (0.1 means only the tokens comprising the top 10% probability mass are considered.)"}, "prompt": {"type": "string", "title": "Prompt", "x-order": 0, "nullable": true, "description": "The prompt to send to the model. Do not use if using messages."}, "image_input": {"type": "array", "items": {"type": "string", "format": "uri"}, "title": "Image Input", "default": [], "x-order": 2, "description": "List of images to send to the model"}, "temperature": {"type": "number", "title": "Temperature", "default": 1, "maximum": 2, "minimum": 0, "x-order": 3, "description": "Sampling temperature between 0 and 2"}, "system_prompt": {"type": "string", "title": "System Prompt", "x-order": 1, "nullable": true, "description": "System prompt to set the assistant's behavior"}, "presence_penalty": {"type": "number", "title": "Presence Penalty", "default": 0, "maximum": 2, "minimum": -2, "x-order": 7, "description": "Presence penalty parameter - positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics."}, "frequency_penalty": {"type": "number", "title": "Frequency Penalty", "default": 0, "maximum": 2, "minimum": -2, "x-order": 6, "description": "Frequency penalty parameter - positive values penalize the repetition of tokens."}, "max_completion_tokens": {"type": "integer", "title": "Max Completion Tokens", "default": 4096, "x-order": 4, "description": "Maximum number of completion tokens to generate"}}}, "Output": {"type": "array", "items": {"type": "string"}, "title": "Output", "x-cog-array-type": "iterator", "x-cog-array-display": "concatenate"}, "Status": {"enum": ["starting", "processing", "succeeded", "canceled", "failed"], "type": "string", "title": "Status", "description": "An enumeration."}, "WebhookEvent": {"enum": ["start", "output", "logs", "completed"], "type": "string", "title": "WebhookEvent", "description": "An enumeration."}, "ValidationError": {"type": "object", "title": "ValidationError", "required": ["loc", "msg", "type"], "properties": {"loc": {"type": "array", "items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "title": "Location"}, "msg": {"type": "string", "title": "Message"}, "type": {"type": "string", "title": "Error Type"}}}, "PredictionRequest": {"type": "object", "title": "PredictionRequest", "properties": {"id": {"type": "string", "title": "Id"}, "input": {"$ref": "#/components/schemas/Input"}, "context": {"type": "object", "title": "Context", "additionalProperties": {"type": "string"}}, "webhook": {"type": "string", "title": "Webhook", "format": "uri", "maxLength": 65536, "minLength": 1}, "created_at": {"type": "string", "title": "Created At", "format": "date-time"}, "output_file_prefix": {"type": "string", "title": "Output File Prefix"}, "webhook_events_filter": {"type": "array", "items": {"$ref": "#/components/schemas/WebhookEvent"}, "default": ["start", "output", "logs", "completed"]}}}, "PredictionResponse": {"type": "object", "title": "PredictionResponse", "properties": {"id": {"type": "string", "title": "Id"}, "logs": {"type": "string", "title": "Logs", "default": ""}, "error": {"type": "string", "title": "Error"}, "input": {"$ref": "#/components/schemas/Input"}, "output": {"$ref": "#/components/schemas/Output"}, "status": {"$ref": "#/components/schemas/Status"}, "metrics": {"type": "object", "title": "Metrics"}, "version": {"type": "string", "title": "Version"}, "created_at": {"type": "string", "title": "Created At", "format": "date-time"}, "started_at": {"type": "string", "title": "Started At", "format": "date-time"}, "completed_at": {"type": "string", "title": "Completed At", "format": "date-time"}}}, "HTTPValidationError": {"type": "object", "title": "HTTPValidationError", "properties": {"detail": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail"}}}}}