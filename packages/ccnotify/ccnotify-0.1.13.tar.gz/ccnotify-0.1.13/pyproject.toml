[project]
name = "ccnotify"
version = "0.1.13"
description = "Intelligent notification system for Claude Code with audio feedback"
authors = [
    {name = "Frank Helmschrott", email = "frank@helmschrott.de"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.10"
keywords = ["notifications", "tts", "claude-code", "audio", "productivity"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Multimedia :: Sound/Audio :: Speech",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Monitoring",
]

dependencies = [
    # Core notification dependencies
    "pync>=2.0.3; sys_platform == 'darwin'",        # macOS notifications
    "plyer>=2.1.0; sys_platform != 'darwin'",       # Cross-platform notifications
    "requests>=2.28.0",                             # HTTP requests for APIs
    "python-dotenv>=1.0.0",                         # Environment variable loading
    
    # TTS providers
    "kokoro-onnx>=0.3.9",                          # Kokoro TTS (local)
    
    # Audio and file processing
    "pydub>=0.25.1",                               # Audio file processing
    "soundfile>=0.12.1",                           # Audio I/O
    
    # Utilities
    "tqdm>=4.64.0",                                 # Progress bars
    "rich>=13.0.0",                                 # Interactive prompts and formatting
    "pathlib2>=2.3.7; python_version < '3.11'",    # Enhanced pathlib for older Python
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "isort>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

full = [
    "elevenlabs>=0.2.0",  # ElevenLabs TTS API (optional premium feature)
]

[project.urls]
Homepage = "https://github.com/Helmi/CCNotify"
Repository = "https://github.com/Helmi/CCNotify"
Issues = "https://github.com/Helmi/CCNotify/issues"
Documentation = "https://github.com/Helmi/CCNotify#readme"

[project.scripts]
ccnotify = "ccnotify.cli:main"
ccnotify-setup = "ccnotify.setup:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/ccnotify"]

[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "pync",
    "plyer.*",
    "pydub.*",
    "kokoro_onnx",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=src/ccnotify --cov-report=term-missing --cov-report=html"

[tool.coverage.run]
source = ["src/ccnotify"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]