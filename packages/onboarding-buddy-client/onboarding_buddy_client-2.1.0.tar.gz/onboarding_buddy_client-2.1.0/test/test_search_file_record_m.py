# coding: utf-8

"""
    Onboarding Buddy API

    This document details all the available operations in the Onboarding Buddy API specification

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from onboarding_buddy_client.models.search_file_record_m import SearchFileRecordM

class TestSearchFileRecordM(unittest.TestCase):
    """SearchFileRecordM unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SearchFileRecordM:
        """Test SearchFileRecordM
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SearchFileRecordM`
        """
        model = SearchFileRecordM()
        if include_optional:
            return SearchFileRecordM(
                global_id = '',
                organisation_global_id = '',
                application_global_id = '',
                file_name = '',
                mime_type = '',
                origin_type = '',
                original_file_name = '',
                file_size = 56,
                file_status = '',
                title = '',
                description = '',
                tags = '',
                reasoning = '',
                created_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                distance = 1.337,
                document = '',
                meta_data = onboarding_buddy_client.models.file_record_meta_data_m.FileRecordMetaDataM(
                    chunk_index = 56, 
                    document = '', 
                    source = '', )
            )
        else:
            return SearchFileRecordM(
        )
        """

    def testSearchFileRecordM(self):
        """Test SearchFileRecordM"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
