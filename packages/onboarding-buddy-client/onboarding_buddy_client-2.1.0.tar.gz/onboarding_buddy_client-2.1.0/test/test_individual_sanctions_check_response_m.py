# coding: utf-8

"""
    Onboarding Buddy API

    This document details all the available operations in the Onboarding Buddy API specification

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from onboarding_buddy_client.models.individual_sanctions_check_response_m import IndividualSanctionsCheckResponseM

class TestIndividualSanctionsCheckResponseM(unittest.TestCase):
    """IndividualSanctionsCheckResponseM unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IndividualSanctionsCheckResponseM:
        """Test IndividualSanctionsCheckResponseM
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IndividualSanctionsCheckResponseM`
        """
        model = IndividualSanctionsCheckResponseM()
        if include_optional:
            return IndividualSanctionsCheckResponseM(
                message_id = '',
                correlation_id = '',
                idempotency_key = '',
                in_error = True,
                error_type = '',
                messages = [
                    ''
                    ],
                matched = True,
                results = [
                    onboarding_buddy_client.models.individual_sanction_record_m.IndividualSanctionRecordM(
                        full_name = '', 
                        first_name = '', 
                        last_name = '', 
                        program = '', 
                        title = '', 
                        additional_info = [
                            ''
                            ], 
                        alias_list = [
                            onboarding_buddy_client.models.individual_alias_m.IndividualAliasM(
                                full_name = '', 
                                first_name = '', 
                                last_name = '', 
                                remarks = '', )
                            ], 
                        address_list = [
                            onboarding_buddy_client.models.individual_address_m.IndividualAddressM(
                                address = '', 
                                city_state_province_postal_code = '', 
                                country = '', 
                                address_remarks = '', )
                            ], 
                        date_of_birth = '', 
                        birth_year = '', 
                        nationality = '', 
                        gender = '', 
                        linked_to = '', 
                        place_of_birth = '', 
                        passport = '', 
                        citizen = '', 
                        national_id_number = '', 
                        secondary_sanctions_risk = '', 
                        digital_currency_address = [
                            onboarding_buddy_client.models.digital_currency_address_m.DigitalCurrencyAddressM(
                                instrument = '', 
                                address = '', )
                            ], 
                        websites = [
                            ''
                            ], 
                        email_address = [
                            ''
                            ], 
                        also_known_as = [
                            ''
                            ], )
                    ]
            )
        else:
            return IndividualSanctionsCheckResponseM(
        )
        """

    def testIndividualSanctionsCheckResponseM(self):
        """Test IndividualSanctionsCheckResponseM"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
