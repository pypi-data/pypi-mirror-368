{# scheduled_monitor.html.j2 #}

{# Helper functions for pagination and filtering #}
{% macro _build_pagination_url(params, page_num) %}
{% set url_parts = [] %}
{% if params.task_name %}{% set _ = url_parts.append('task_name=' + params.task_name) %}{% endif %}
{% if params.start_time %}{% set _ = url_parts.append('start_time=' + params.start_time) %}{% endif %}
{% if params.end_time %}{% set _ = url_parts.append('end_time=' + params.end_time) %}{% endif %}
{% if params.max_reports_per_task %}{% set _ = url_parts.append('max_reports_per_task=' + params.max_reports_per_task|string) %}{% endif %}
{% if params.page_size %}{% set _ = url_parts.append('page_size=' + params.page_size|string) %}{% endif %}
{% set _ = url_parts.append('page=' + page_num|string) %}
{{ url_parts|join('&') }}
{% endmacro %}

{% macro _build_filter_url(params, filter_value) %}
{% set url_parts = [] %}
{% if filter_value != 'all' %}{% set _ = url_parts.append('task_name=' + filter_value) %}
{% elif params.task_name %}{% set _ = url_parts.append('task_name=' + params.task_name) %}{% endif %}
{% if params.start_time %}{% set _ = url_parts.append('start_time=' + params.start_time) %}{% endif %}
{% if params.end_time %}{% set _ = url_parts.append('end_time=' + params.end_time) %}{% endif %}
{% if params.max_reports_per_task %}{% set _ = url_parts.append('max_reports_per_task=' + params.max_reports_per_task|string) %}{% endif %}
{% if params.page_size %}{% set _ = url_parts.append('page_size=' + params.page_size|string) %}{% endif %}
{% set _ = url_parts.append('page=1') %}
{{ url_parts|join('&') }}
{% endmacro %}

{# Macro for task status card #}
{# scheduled_monitor.html.j2 #}

{# … keep all the existing macros above … #}

{# Revised “task_status_card” so that it uses a task-run timeline instead of incident history #}
{% macro task_status_card(task) %}
    <div class="card task-status-card status-{{ task.status }} mb-3">
        <div class="card-body">
            <div class="row">
                <div class="col">
                    <div class="d-flex align-items-center mb-2">
                        <span class="status-indicator {{ task.status_indicator_class }}"></span>
                        <h4 class="mb-0">{{ task.name }}</h4>
                        <span class="badge bg-{{ task.card_badge_color }} ms-2">{{ task.status|title }}</span>
                    </div>
                    <p class="text-muted mb-2">{{ task.description }}</p>
                    <div class="d-flex align-items-center">
                        <span class="cron-expression me-3">{{ task.schedule }}</span>
                        <span class="text-muted">{{ task.schedule_text }}</span>
                    </div>
                </div>
                <div class="col-auto text-end">
                    <div class="h3 mb-1">{{ task.uptime }}%</div>
                    <div class="text-muted small">Uptime</div>
                    <div class="last-execution mt-2">
                        {% if task.last_run %}
                            Last: {{ task.last_run.strftime('%b %d, %H:%M') }}<br>
                        {% else %}
                            Last: Never<br>
                        {% endif %}
                        <strong>{{ task.execution_time }}</strong>
                    </div>
                </div>
            </div>

            {# --- START OF “TASK-RUN TIMELINE” (replaces the old incident-timeline) --- #}

            {# Updated task timeline section in the task_status_card macro #}
            <div class="task-timeline">
                {% for run in task.runs %}
                    {# Now run is an ActivityData object with rich information #}
                    <div
                            class="run-item {{ 'run-success' if run.type == 'success'
                              else ('run-warning' if run.type == 'warning'
                                    else 'run-failure') }}"
                            title="{{ run.timestamp.strftime('%b %d, %H:%M') }} » {{ run.message | e }}"
                    ></div>
                {% endfor %}

                {# If you need to pad to 30 items for UI consistency: #}
                {% set remaining_slots = widget.current_params.max_reports_per_task - task.runs|length %}
                {% if remaining_slots > 0 %}
                    {% for i in range(remaining_slots) %}
                        <div class="run-item run-empty" title="No data"></div>
                    {% endfor %}
                {% endif %}
            </div>
            {# --- END OF “TASK-RUN TIMELINE” --- #}

            <div class="d-flex justify-content-between align-items-center mt-2">
                <span class="text-muted small">Last {{ task.runs|length }} runs</span>
                <div class="btn-list">
                    <button class="btn btn-sm btn-outline-secondary" onclick="runTaskNow('{{ task.last_task_id }}')">Run Now
                    </button>
                </div>
            </div>
        </div>
    </div>
{% endmacro %}


{# Macro for detailed task table row #}
{% macro detailed_task_row(task) %}
    <tr>
        <td>
            <div class="d-flex align-items-center">
                <span class="status-indicator {{ task.status_indicator_class }}"></span>
                <div>
                    <strong>{{ task.name }}</strong>
                    <div class="text-muted small">{{ task.description }}</div>
                </div>
            </div>
        </td>
        <td>
            <span class="badge bg-{{ task.card_badge_color }}">{{ task.status|title }}</span>
        </td>
        <td>
            <code>{{ task.schedule }}</code>
            <div class="text-muted small">{{ task.schedule_text }}</div>
        </td>
        <td>
            <div class="h4 mb-0">{{ task.uptime }}%</div>
        </td>
        <td>
            {% if task.last_run %}
                <div>{{ task.last_run.strftime('%b %d, %H:%M') }}</div>
            {% else %}
                <div class="text-muted">Never</div>
            {% endif %}
            <div class="text-muted small">{{ task.execution_time }}</div>
        </td>
        <td>
            {% if task.next_run %}
                {{ task.next_run.strftime('%b %d, %H:%M') }}
            {% else %}
                <span class="text-muted">—</span>
            {% endif %}
        </td>
        <td>
            <div class="btn-list">
                <button class="btn btn-sm btn-outline-primary" onclick="viewTaskLogs({{ task.id }})">Logs</button>
                <button class="btn btn-sm btn-outline-secondary" onclick="runTaskNow('{{ task.last_task_id }}')">Run</button>
            </div>
        </td>
    </tr>
{% endmacro %}

{# Macro for activity timeline item #}
{% macro activity_item(activity) %}
    <div class="timeline-item">
        {% set icon_class = 'bg-success' if activity.type == 'success' else ('bg-warning' if activity.type == 'warning' else 'bg-danger') %}
        <div class="timeline-badge {{ icon_class }}"></div>
        <div class="timeline-content">
            <div class="timeline-time">{{ activity.timestamp.strftime('%b %d, %H:%M UTC') }}</div>
            <div class="timeline-title"><a href="{{ widget.url_task_details.replace("TASK_ID_REPLACE", activity.task_id) }}">{{ activity.task_name }}</a></div>
            <div class="timeline-body text-muted">{{ activity.message }}</div>
        </div>
    </div>
{% endmacro %}


<style>
    .status-indicator {
        width: 12px;
        height: 12px;
        border-radius: 50%;
        display: inline-block;
        margin-right: 8px;
    }

    .status-up {
        background-color: #2fb344;
        box-shadow: 0 0 0 3px rgba(47, 179, 68, 0.2);
    }

    .status-down {
        background-color: #d63384;
        box-shadow: 0 0 0 3px rgba(214, 51, 132, 0.2);
    }

    .status-warning {
        background-color: #f76707;
        box-shadow: 0 0 0 3px rgba(247, 103, 7, 0.2);
    }

    .status-maintenance {
        background-color: #868e96;
        box-shadow: 0 0 0 3px rgba(134, 142, 150, 0.2);
    }

    .task-status-card {
        transition: all 0.3s ease;
        border-left: 4px solid transparent;
    }

    .task-status-card.status-operational {
        border-left-color: #2fb344;
    }

    .task-status-card.status-issues {
        border-left-color: #d63384;
    }

    .task-status-card.status-degraded {
        border-left-color: #f76707;
    }

    .task-status-card.status-maintenance {
        border-left-color: #868e96;
    }

    .task-status-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

    .uptime-bar {
        height: 4px;
        background: #e9ecef;
        border-radius: 2px;
        overflow: hidden;
        margin: 8px 0;
    }

    .uptime-fill {
        height: 100%;
        transition: width 0.3s ease;
    }

    .uptime-fill.high {
        background: linear-gradient(90deg, #2fb344, #51cf66);
    }

    .uptime-fill.medium {
        background: linear-gradient(90deg, #f76707, #ff8c42);
    }

    .uptime-fill.low {
        background: linear-gradient(90deg, #d63384, #e64980);
    }

    .incident-timeline {
        display: flex;
        gap: 2px;
        height: 20px;
        margin: 8px 0;
    }

    .incident-day {
        flex: 1;
        border-radius: 2px;
        min-width: 3px;
    }

    .incident-day.good {
        background: #2fb344;
    }

    .incident-day.minor {
        background: #f76707;
    }

    .incident-day.major {
        background: #d63384;
    }

    .incident-day.maintenance {
        background: #868e96;
    }

    .metric-big {
        font-size: 2.5rem;
        font-weight: 300;
        line-height: 1.2;
    }

    .overall-status {
        padding: 1rem;
        border-radius: 8px;
        margin-bottom: 2rem;
    }

    .overall-status.operational {
        background: linear-gradient(135deg, rgba(47, 179, 68, 0.1), rgba(47, 179, 68, 0.05));
        border: 1px solid rgba(47, 179, 68, 0.2);
    }

    .overall-status.issues {
        background: linear-gradient(135deg, rgba(214, 51, 132, 0.1), rgba(214, 51, 132, 0.05));
        border: 1px solid rgba(214, 51, 132, 0.2);
    }

    .cron-expression {
        font-family: 'JetBrains Mono', 'Courier New', monospace;
        background: rgba(0, 0, 0, 0.05);
        padding: 2px 6px;
        border-radius: 4px;
        font-size: 0.85rem;
    }

    .last-execution {
        font-size: 0.9rem;
        color: #666;
    }

    .timeline {
        position: relative;
    }

    .timeline-item {
        position: relative;
        padding-left: 2rem;
        padding-bottom: 1rem;
    }

    .timeline-item:not(:last-child)::before {
        content: '';
        position: absolute;
        left: 0.5rem;
        top: 1.5rem;
        bottom: -1rem;
        width: 2px;
        background: #e9ecef;
    }

    .timeline-badge {
        position: absolute;
        left: 0;
        top: 0;
        width: 1rem;
        height: 1rem;
        border-radius: 50%;
        border: 2px solid #fff;
    }

    .timeline-time {
        font-size: 0.75rem;
        color: #6c757d;
        margin-bottom: 0.25rem;
    }

    .timeline-title {
        font-weight: 600;
        margin-bottom: 0.25rem;
    }

    .timeline-body {
        font-size: 0.875rem;
    }
    /* Add to your existing CSS */
.task-timeline {
    display: flex;
    gap: 2px;
    height: 20px;
    margin: 8px 0;
}

.run-item {
    flex: 1;
    border-radius: 2px;
    min-width: 3px;
}

.run-success {
    background: #2fb344;
}

.run-warning {
    background: #f76707;
}

.run-failure {
    background: #d63384;
}

.run-empty {
    background: #e9ecef;
    opacity: 0.5;
}
</style>

<div class="page">
    <div class="page-wrapper">
        <!-- Header -->
        <div class="page-header d-print-none">
            <div class="container-xl">
                <div class="row g-2 align-items-center">
                    <div class="col">
                        <div class="d-flex align-items-center">
                            <span class="status-indicator {{ 'status-down' if widget.monitor_data.overall_status_class == 'issues' else 'status-up' }}"></span>
                            <h2 class="page-title">Cron Task Status</h2>
                        </div>
                        <div class="text-muted">
                            Monitoring {{ widget.monitor_data.cron_tasks | length }} scheduled tasks &bull;
                            Updated {{ widget.monitor_data.last_update }}
                        </div>
                    </div>
                    <div class="col-auto">
                        <div class="btn-list">
                            <button class="btn btn-primary" onclick="location.reload()">
                                <svg xmlns="http://www.w3.org/2000/svg" class="icon" width="24" height="24"
                                     viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none">
                                    <path d="M20 11a8.1 8.1 0 0 0 -15.5 -2m-.5 -4v4h4m0 6a8.1 8.1 0 0 0 15.5 2m.5 4v-4h-4"/>
                                </svg>
                                Refresh
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Page body -->
        <div class="page-body">
            <div class="container-xl">

                <!-- Filter Form -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h3 class="card-title">Filter Tasks</h3>
                    </div>
                    <div class="card-body">
                        <form method="get" action="">
                            <div class="row g-3">
                                <div class="col-md-3">
                                    <label class="form-label">Task Name</label>
                                    <input type="text" class="form-control" name="task_name" value="{{ widget.current_params.task_name or '' }}" placeholder="Filter by name">
                                </div>
                                <div class="col-md-3">
                                    <label class="form-label">Start Time</label>
                                    <input type="text" class="form-control" name="start_time" value="{{ widget.current_params.start_time or '' }}" placeholder="e.g., 1d, 7d, 2025-01-01">
                                </div>
                                <div class="col-md-3">
                                    <label class="form-label">End Time</label>
                                    <input type="text" class="form-control" name="end_time" value="{{ widget.current_params.end_time or '' }}" placeholder="e.g., now, 2025-01-31">
                                </div>
                                <div class="col-md-2">
                                    <label class="form-label">Reports Per Task</label>
                                    <select class="form-select" name="max_reports_per_task">
                                        {% for n in [5, 10, 25, 50] %}
                                            <option value="{{ n }}" {% if widget.current_params.max_reports_per_task|int == n %}selected{% endif %}>{{ n }}</option>
                                        {% endfor %}
                                    </select>
                                </div>
                                <div class="col-md-1 d-flex align-items-end">
                                    <button type="submit" class="btn btn-primary w-100">Apply</button>
                                </div>
                            </div>
                        </form>
                    </div>
                    {% if widget.filter_info and widget.filter_info.has_filters %}
                    <div class="card-footer">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <span class="text-muted">Filters: </span>
                                {% for filter in widget.filter_info.active_filters %}
                                    <span class="badge bg-primary me-1">{{ filter }}</span>
                                {% endfor %}
                            </div>
                            <a href="?" class="btn btn-sm btn-outline-secondary">Clear Filters</a>
                        </div>
                    </div>
                    {% endif %}
                </div>

                <!-- Overall Status -->
                <div class="overall-status {{ widget.monitor_data.overall_status_class }}" id="overall-status">
                    <div class="row align-items-center">
                        <div class="col">
                            <h3 class="mb-1" id="status-title">{{ widget.monitor_data.overall_title }}</h3>
                            <p class="text-muted mb-0"
                               id="status-description">{{ widget.monitor_data.overall_description }}</p>
                        </div>
                        <div class="col-auto">
                            <div class="metric-big">{{ widget.monitor_data.overall_uptime }}</div>
                            <div class="text-muted">Overall Uptime</div>
                        </div>
                    </div>
                </div>

                <!-- Task Status Cards -->
                <div class="row mb-4">
                    <div class="col-12">
                        <h4 class="mb-3">Task Status</h4>
                        <div id="task-status-container">
                            {% for task in widget.monitor_data.cron_tasks %}
                                {{ task_status_card(task) }}
                            {% endfor %}
                        </div>
                    </div>
                </div>

                <!-- Detailed Task List -->
                <div class="row">
                    <div class="col-12">
                        <div class="card">
                            <div class="card-header">
                                <h3 class="card-title">Task Details</h3>
                                <div class="card-actions">
                                    <div class="dropdown">
                                        <button class="btn btn-outline-secondary dropdown-toggle"
                                                data-bs-toggle="dropdown">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="icon" width="24" height="24"
                                                 viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none">
                                                <path d="M3 6h18M7 12h10m-7 6h4"/>
                                            </svg>
                                            Filter
                                        </button>
                                        <div class="dropdown-menu">
                                            <a class="dropdown-item" href="?{{ _build_filter_url(widget.current_params, 'all') }}">All Tasks</a>
                                            <a class="dropdown-item" href="?{{ _build_filter_url(widget.current_params, 'operational') }}">Operational</a>
                                            <a class="dropdown-item" href="?{{ _build_filter_url(widget.current_params, 'issues') }}">Issues</a>
                                            <a class="dropdown-item" href="?{{ _build_filter_url(widget.current_params, 'maintenance') }}">Maintenance</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="table-responsive">
                                <table class="table table-vcenter">
                                    <thead>
                                    <tr>
                                        <th>Task</th>
                                        <th>Status</th>
                                        <th>Schedule</th>
                                        <th>Uptime</th>
                                        <th>Last Execution</th>
                                        <th>Next Run</th>
                                        <th>Actions</th>
                                    </tr>
                                    </thead>
                                    <tbody id="detailed-tasks-table">
                                    {% for task in widget.monitor_data.cron_tasks %}
                                        {{ detailed_task_row(task) }}
                                    {% endfor %}
                                    </tbody>
                                </table>
                            </div>

                            <!-- Pagination Controls -->
                            {% if widget.pagination and widget.pagination.total_pages > 1 %}
                            <div class="card-footer">
                                <div class="d-flex justify-content-between align-items-center">
                                    <div class="text-muted">
                                        Showing {{ (widget.pagination.current_page - 1) * widget.pagination.page_size + 1 }} 
                                        to {{ [widget.pagination.current_page * widget.pagination.page_size, widget.pagination.total_items] | min }} 
                                        of {{ widget.pagination.total_items }} tasks
                                    </div>
                                    <ul class="pagination m-0">
                                        <li class="page-item {% if not widget.pagination.has_previous %}disabled{% endif %}">
                                            <a class="page-link" href="?{{ _build_pagination_url(widget.current_params, 1) }}" aria-label="First">
                                                <span aria-hidden="true">&laquo;&laquo;</span>
                                            </a>
                                        </li>
                                        <li class="page-item {% if not widget.pagination.has_previous %}disabled{% endif %}">
                                            <a class="page-link" href="?{{ _build_pagination_url(widget.current_params, widget.pagination.previous_page or 1) }}" aria-label="Previous">
                                                <span aria-hidden="true">&laquo;</span>
                                            </a>
                                        </li>

                                        {% set start_page = [widget.pagination.current_page - 2, 1] | max %}
                                        {% set end_page = [start_page + 4, widget.pagination.total_pages] | min %}
                                        {% set start_page = [end_page - 4, 1] | max %}

                                        {% for page_num in range(start_page, end_page + 1) %}
                                        <li class="page-item {% if page_num == widget.pagination.current_page %}active{% endif %}">
                                            <a class="page-link" href="?{{ _build_pagination_url(widget.current_params, page_num) }}">{{ page_num }}</a>
                                        </li>
                                        {% endfor %}

                                        <li class="page-item {% if not widget.pagination.has_next %}disabled{% endif %}">
                                            <a class="page-link" href="?{{ _build_pagination_url(widget.current_params, widget.pagination.next_page or widget.pagination.total_pages) }}" aria-label="Next">
                                                <span aria-hidden="true">&raquo;</span>
                                            </a>
                                        </li>
                                        <li class="page-item {% if not widget.pagination.has_next %}disabled{% endif %}">
                                            <a class="page-link" href="?{{ _build_pagination_url(widget.current_params, widget.pagination.total_pages) }}" aria-label="Last">
                                                <span aria-hidden="true">&raquo;&raquo;</span>
                                            </a>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                            {% endif %}
                        </div>
                    </div>
                </div>

                <!-- Recent Activity -->
                <div class="row mt-4">
                    <div class="col-12">
                        <div class="card">
                            <div class="card-header">
                                <h3 class="card-title">Recent Activity</h3>
                            </div>
                            <div class="card-body">
                                <div class="timeline" id="activity-timeline">
                                    {% for activity in widget.monitor_data.activities %}
                                        {{ activity_item(activity) }}
                                    {% endfor %}
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>

<script>
    function viewTaskLogs(taskId) {
        const url = "{{ widget.url_task_details }}".replace("TASK_ID_REPLACE", taskId);

        // You can implement this to redirect to a logs page or open a modal
        window.location.href = url;
    }

    function runTaskNow(taskId) {
        if (confirm('Run this task immediately?')) {
            const url = "{{ widget.url_retry_task }}".replace("TASK_ID_REPLACE", taskId);
            fetch(url, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                }
            })
                .then(response => response.json())
                .then(data => {
                    alert('Task execution initiated. Check the activity timeline for updates.');
                    // Optionally refresh the page after a delay
                    setTimeout(() => location.reload(), 2000);
                })
                .catch(error => {
                    alert('Error running task: ' + error.message);
                });
        }
    }
</script>
