Metadata-Version: 2.4
Name: sagebox
Version: 0.1.0
Summary: Sagebox Procedural GUI for Python
Author-email: Your Name <rob@sagebox.org>
License: MIT
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Operating System :: Microsoft :: Windows
Classifier: License :: OSI Approved :: MIT License
Requires-Python: <3.13,>=3.7
Description-Content-Type: text/markdown
Requires-Dist: numpy


# A High-Performance, Procedural GUI Designed for Rapid, Creative Development

### Write plain linear, procedural code with no boilerplate.

Sagebox (aka Pybox-Gui) is a GUI architecture and toolset for Python that lets you add windows, GUI controls, and graphical output using simple linear, procedural code, without any boilerplate or the overhead of an event-driven framework.

Sagebox was created to bring back the simplicity of creating fun-with-graphics programs, while providing the power and scalability to build full-scale applications with advanced GUI controls.


[Sagebox Github Project](https://github.com/Sagebox/pybox) — Click to see the Github Page where there are many examples and the future roadmap. 

[YouTube Examples](https://www.youtube.com/@projectsagebox) — These examples are for the Rust version, but most work in Python already. See the ][github page](https://github.com/Sagebox/pybox)


### Features
- Procedural, linear programming style
- No macros or boilerplate
- Console-mode support with add-on GUI-Control integration
- Compatible with other GUI libraries
- Accepts all Python native types for all functions
- Designed to stay out of the way of your existing Python code

## Installation

You can install the package directly with pip:

```bash
pip install sagebox
```

## importing pybox-gui

import sagebox

## Dependencies

```
numpy (any version)
```
