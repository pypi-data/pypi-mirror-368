Metadata-Version: 2.4
Name: autoaicluster
Version: 0.2.0
Summary: Auto AI Clustering: end-to-end segmentation via Python API or local web UI.
Author: Enterprise Cluster Team
License: MIT
Project-URL: Homepage, https://example.com/autoaicluster
Keywords: clustering,automl,segmentation,fastapi,pipeline,visualization
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Framework :: FastAPI
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Requires-Python: >=3.9
Description-Content-Type: text/markdown
Requires-Dist: fastapi>=0.110
Requires-Dist: uvicorn[standard]>=0.22
Requires-Dist: pandas>=2.0
Requires-Dist: numpy>=1.24
Requires-Dist: scikit-learn>=1.3
Requires-Dist: scikit-learn-extra>=0.3.0
Requires-Dist: plotly>=5.20
Requires-Dist: pydantic>=2.5
Requires-Dist: python-multipart>=0.0.9
Requires-Dist: umap-learn>=0.5.6

# Auto AI Cluster

End-to-end clustering (segmentation) via Python API or local web UI.

## Install

```bash
pip install autoaicluster
```

## One-liner usage

```python
from autoaicluster import autoaicluster

# Launch web UI
url = autoaicluster(ui=True)
print(url)

# Or run AutoML clustering directly on a DataFrame or CSV path
import pandas as pd

df = pd.DataFrame({
    'age':[25,37,29,41,33,52,47,23,39,31],
    'income':[40,72,50,90,60,120,95,35,70,55],
    'city':['A','B','A','B','A','B','B','A','B','A']
})
res = autoaicluster(df)
print(res['algorithm'], res['silhouette'], res['label_counts'])
```

## Advanced (Python API)
- Full control via `enterprise_cluster_solution.auto_segment` and `run_pipeline` for preprocessing and algorithm selection.

## Notes
- To access UI from other machines, set env vars before launching: `ECS_HOST=0.0.0.0 ECS_PORT=8000`.

## License
MIT
