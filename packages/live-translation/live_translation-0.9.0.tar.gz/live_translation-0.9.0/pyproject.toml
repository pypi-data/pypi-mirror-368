[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.dynamic]
version = {attr = "live_translation.__version__"}

[tool.setuptools.packages.find]
include = ["live_translation*"]

[project]
name = "live-translation"
dynamic = ["version"]
description = "A real-time translation tool using Whisper & Opus-MT"
authors = [
    { name = "Abdullah Hendy", email = "abdullah.a.hendy@gmail.com" }
]
license = "MIT"
license-files = ["LICENSE"]
readme = "README.md"
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 4 - Beta",

    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",

    "Natural Language :: English",

    "Topic :: Multimedia :: Sound/Audio :: Analysis",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries",
    "Topic :: Utilities",

    "Environment :: Console",

    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "torch==2.8.0",
    "torchaudio==2.8.0",
    "transformers==4.55.0",
    "numpy==2.2.3",
    "pyaudio==0.2.14",
    "websockets==15.0.1",
    "huggingface_hub==0.34.4",
    "sacremoses==0.1.1",
    "faster-whisper==1.2.0",
    "sentencepiece==0.2.1",
    "opuslib==3.0.1",
]
keywords = ["translation", "transcription", "speech-to-text", "real-time translation", "whisper", "marianMT", "Opus-MT", "live transcription"]

[project.urls]
Homepage = "https://github.com/AbdullahHendy/live-translation"
Repository = "https://github.com/AbdullahHendy/live-translation"

[project.scripts]
live-translate-server = "live_translation.server.cli:main"
live-translate-client = "live_translation.client.cli:main"
live-translate-demo = "live_translation.tools.demo:main"

[project.optional-dependencies]
dev = [
    "psutil==7.0.0",
    "ruff==0.12.8",
    "pytest==8.4.1",
    "coverage==7.10.3",
    "pytest-asyncio==1.1.0",
    "soundfile==0.13.1",
    "build==1.3.0",
    "twine==6.1.0"
]
examples = [
    "opencv-python==4.12.0.88",
    "pillow==11.3.0"
]

[tool.coverage.run]
branch = true
parallel = true
concurrency = ["multiprocessing", "thread"]
sigterm = true
source = ["live_translation"]

[tool.coverage.report]
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
]
omit = [
    "*/__init__.py",
    "*/tests/*",
    "*/tools/*",
    "*/audio_samples/*",
    "*/conftest.py"
]
ignore_errors = true
show_missing = true
precision = 2
fail_under = 85

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"