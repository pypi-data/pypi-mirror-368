import{O as l}from"./MoMhNtwQ.js";const s=async(e="",i={})=>{let o=null;const n=await fetch(`${l}/verify`,{method:"POST",headers:{Accept:"application/json",Authorization:`Bearer ${e}`,"Content-Type":"application/json"},body:JSON.stringify({...i})}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>{var a;return o=`Ollama: ${((a=t==null?void 0:t.error)==null?void 0:a.message)??"Network Problem"}`,[]});if(o)throw o;return n},h=async(e="")=>{let i=null;const o=await fetch(`${l}/config`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.error(n),"detail"in n?i=n.detail:i="Server connection failed",null));if(i)throw i;return o},u=async(e="",i)=>{let o=null;const n=await fetch(`${l}/config/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify({...i})}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.error(t),"detail"in t?o=t.detail:o="Server connection failed",null));if(o)throw o;return n},p=async(e,i)=>{let o=null;const n=await fetch(`${l}/api/version`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.error(t),"detail"in t?o=t.detail:o="Server connection failed",null));if(o)throw o;return(n==null?void 0:n.version)??!1},d=async(e="",i=null)=>{let o=null;const n=await fetch(`${l}/api/tags${i!==null?`/${i}`:""}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.error(t),"detail"in t?o=t.detail:o="Server connection failed",null));if(o)throw o;return((n==null?void 0:n.models)??[]).map(t=>({id:t.model,name:t.name??t.model,...t})).sort((t,a)=>t.name.localeCompare(a.name))},f=async(e,i)=>{let o=null;const n=await fetch(`${l}/api/unload`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify({model:i})}).catch(t=>(o=t,null));if(o)throw o;return n},y=async(e,i,o=null)=>{let n=null;const t=await fetch(`${l}/api/create${o!==null?`/${o}`:""}`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify(i)}).catch(a=>(n=a,null));if(n)throw n;return t},w=async(e,i,o=null)=>{let n=null;const t=await fetch(`${l}/api/delete${o!==null?`/${o}`:""}`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify({model:i})}).then(async a=>{if(!a.ok)throw await a.json();return a.json()}).then(a=>!0).catch(a=>(console.error(a),n=a,"detail"in a&&(n=a.detail),null));if(n)throw n;return t},$=async(e,i,o=null)=>{let n=null;const t=new AbortController,a=await fetch(`${l}/api/pull${o!==null?`/${o}`:""}`,{signal:t.signal,method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify({name:i})}).catch(r=>(console.error(r),n=r,"detail"in r&&(n=r.detail),null));if(n)throw n;return[a,t]},m=async(e,i,o=null)=>{let n=null;const t=await fetch(`${l}/models/download${o!==null?`/${o}`:""}`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify({url:i})}).catch(a=>(console.error(a),n=a,"detail"in a&&(n=a.detail),null));if(n)throw n;return t},j=async(e,i,o=null)=>{let n=null;const t=new FormData;t.append("file",i);const a=await fetch(`${l}/models/upload${o!==null?`/${o}`:""}`,{method:"POST",headers:{Authorization:`Bearer ${e}`},body:t}).catch(r=>(console.error(r),n=r,"detail"in r&&(n=r.detail),null));if(n)throw n;return a};export{d as a,j as b,y as c,w as d,m as e,h as f,p as g,u as h,$ as p,f as u,s as v};
//# sourceMappingURL=D3n4WpyB.js.map
