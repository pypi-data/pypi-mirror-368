name: Release Aegis

on:
  push:
    tags:
      - "aegis-v*.*.*"
      - "aegis-v*.*.*-*"
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag to release (e.g., aegis-v1.2.3 or aegis-v1.2.3-rc1). If empty, uses current ref name when it's a tag."
        required: false
        default: ""

permissions:
  id-token: write
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Build distributions
        run: uv build

      - name: Upload dist as artifact
        uses: actions/upload-artifact@v4
        with:
          name: pypi-dist
          path: dist/**
          if-no-files-found: error

  publish:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Resolve release tag
        id: resolve
        run: |
          if [ "${{ github.ref_type }}" = "tag" ]; then
            RAW_TAG="${{ github.ref_name }}"
          else
            RAW_TAG="${{ inputs.tag }}"
          fi
          if [ -z "${RAW_TAG}" ]; then
            echo "No tag provided" >&2
            exit 1
          fi
          echo "tag=${RAW_TAG}" >> $GITHUB_OUTPUT

      - name: Detect prerelease
        id: pre
        run: |
          TAG='${{ steps.resolve.outputs.tag }}'
          if echo "$TAG" | grep -Ei -- '-(rc|alpha|beta|pre|preview|dev)' >/dev/null; then
            echo "prerelease=true" >> $GITHUB_OUTPUT
          else
            echo "prerelease=false" >> $GITHUB_OUTPUT
          fi

      - name: Download dist
        uses: actions/download-artifact@v4
        with:
          name: pypi-dist
          path: ./dist
          # repository-url: https://test.pypi.org/legacy/

      - name: Upload distributions to GitHub Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/*
          file_glob: true
          tag: ${{ steps.resolve.outputs.tag }}
          release_name: "Aegis Release ${{ steps.resolve.outputs.tag }}"
          overwrite: true
          make_latest: true
          prerelease: ${{ steps.pre.outputs.prerelease }}

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
          # repository-url: https://test.pypi.org/legacy/
          # comment line above to publish to normal pypi
