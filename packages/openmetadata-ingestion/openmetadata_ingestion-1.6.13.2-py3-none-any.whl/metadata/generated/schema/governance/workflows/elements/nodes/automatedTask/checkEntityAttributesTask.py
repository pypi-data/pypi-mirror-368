# generated by datamodel-codegen:
#   filename:  governance/workflows/elements/nodes/automatedTask/checkEntityAttributesTask.json
#   timestamp: 2025-08-12T13:13:31+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import ConfigDict, Field
from typing_extensions import Annotated

from metadata.ingestion.models.custom_pydantic import BaseModel

from ......type import basic


class Config(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    rules: Optional[str] = None


class CheckEntityAttributesTaskDefinition(BaseModel):
    type: Optional[str] = 'automatedTask'
    subType: Optional[str] = 'checkEntityAttributesTask'
    name: Annotated[
        Optional[basic.EntityName],
        Field(None, description='Name that identifies this Node.'),
    ]
    displayName: Annotated[
        Optional[str],
        Field(None, description='Display Name that identifies this Node.'),
    ]
    description: Annotated[
        Optional[basic.Markdown], Field(None, description='Description of the Node.')
    ]
    config: Optional[Config] = None
    input: Annotated[
        Optional[List[str]], Field(['relatedEntity'], max_length=1, min_length=1)
    ]
    output: Annotated[
        Optional[List[str]], Field(['result'], max_length=1, min_length=1)
    ]
