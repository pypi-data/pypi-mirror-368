# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml
image: nfruitwala/cocotb-verilator:latest
#image: verilator/verilator:4.106


variables:
  PROC_DRIVER_PATH: ./python
  DRIVER_TEST_PATH: python/test
  PROC_TEST_PATH: cocotb/proc
  FPROC_LUT_TEST_PATH: cocotb/fproc_lut
  FPROC_MEAS_TEST_PATH: cocotb/fproc_meas
  PULSE_REG_TEST_PATH: cocotb/pulse_reg

stages:          # List of stages for jobs, and their order of execution
  - test
  - deploy

before_script:
    - pip install -e $PROC_DRIVER_PATH
    - pip install pytest
    - pip install parse
    - pip install attrs

test-compiler:
  stage: test
  script:
    - pip install git+https://gitlab.com/LBL-QubiC/experiments/qubitconfig.git
    - cd $DRIVER_TEST_PATH 
    - pytest

test-proc:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - cd $PROC_TEST_PATH
    - make
    - /usr/bin/python3 ../.check_xml.py results.xml

test-fproc-lut:
  stage: test
  script:
    - cd $FPROC_LUT_TEST_PATH
    - make
    - /usr/bin/python3 ../.check_xml.py results.xml

test-fproc-meas:
  stage: test
  script:
    - cd $FPROC_MEAS_TEST_PATH
    - make
    - /usr/bin/python3 ../.check_xml.py results.xml

test-pulse-reg:
  stage: test
  script:
    - cd $PULSE_REG_TEST_PATH
    - make
    - /usr/bin/python3 ../.check_xml.py results.xml

pages:
  stage: deploy
  script:
    - pip install -U pytz
    - pip install mkdocs
    - pip install mkdocs-material
    - pip install mkdocstrings
    - pip install mkdocstrings-python
    - cd python/docs
    - mkdocs build
    - mv site ../../public
  artifacts:
    paths:
      # The folder that contains the files to be exposed at the Page URL
      - public
  rules:
    # This ensures that only pushes to the default branch will trigger
    # a pages deploy
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH

pypi:
  stage: deploy
  id_tokens:
    PYPI_ID_TOKEN:
      # Use "testpypi" if uploading to TestPyPI
      aud: pypi
  script:
    - cd $PROC_DRIVER_PATH
    - pip install build
    - pip install twine
    - pip install --upgrade urllib3
    - pip install --upgrade chardet
    - python -m build
    - python -m twine upload --repository pypi dist/*
  environment:
    name: release
  rules:
    # This ensures that only pushes to the default branch will trigger
    # a pages deploy
    - if: $CI_COMMIT_TAG
    

