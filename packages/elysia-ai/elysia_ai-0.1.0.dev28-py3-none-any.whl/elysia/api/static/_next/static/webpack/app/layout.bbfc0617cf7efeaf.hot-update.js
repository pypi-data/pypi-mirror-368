"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./app/globals.css":
/*!*************************!*\
  !*** ./app/globals.css ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"7810602faf5f\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9nbG9iYWxzLmNzcyIsIm1hcHBpbmdzIjoiO0FBQUEsK0RBQWUsY0FBYztBQUM3QixJQUFJLElBQVUsSUFBSSxpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vYXBwL2dsb2JhbHMuY3NzP2I5YWIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCI3ODEwNjAyZmFmNWZcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/globals.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/components/contexts/CollectionContext.tsx":
/*!*******************************************************!*\
  !*** ./app/components/contexts/CollectionContext.tsx ***!
  \*******************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CollectionContext: function() { return /* binding */ CollectionContext; },\n/* harmony export */   CollectionProvider: function() { return /* binding */ CollectionProvider; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _app_api_getCollections__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/app/api/getCollections */ \"(app-pages-browser)/./app/api/getCollections.ts\");\n/* harmony import */ var _SessionContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./SessionContext */ \"(app-pages-browser)/./app/components/contexts/SessionContext.tsx\");\n/* harmony import */ var _app_api_deleteCollectionMetadata__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/app/api/deleteCollectionMetadata */ \"(app-pages-browser)/./app/api/deleteCollectionMetadata.ts\");\n/* harmony import */ var _ToastContext__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ToastContext */ \"(app-pages-browser)/./app/components/contexts/ToastContext.tsx\");\n/* __next_internal_client_entry_do_not_use__ CollectionContext,CollectionProvider auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\nconst CollectionContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({\n    collections: [],\n    fetchCollections: ()=>{},\n    loadingCollections: false,\n    deleteCollection: ()=>{},\n    getRandomPrompts: ()=>[]\n});\nconst CollectionProvider = (param)=>{\n    let { children } = param;\n    _s();\n    const { id, fetchCollectionFlag, initialized } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(_SessionContext__WEBPACK_IMPORTED_MODULE_3__.SessionContext);\n    const { showErrorToast, showSuccessToast } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(_ToastContext__WEBPACK_IMPORTED_MODULE_5__.ToastContext);\n    const [collections, setCollections] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [loadingCollections, setLoadingCollections] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const idRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(id);\n    const initialFetch = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (initialFetch.current || !id || !initialized) return;\n        initialFetch.current = true;\n        idRef.current = id;\n        fetchCollections();\n    }, [\n        id,\n        initialized\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        fetchCollections();\n    }, [\n        fetchCollectionFlag\n    ]);\n    const fetchCollections = async ()=>{\n        if (!idRef.current) return;\n        setCollections([]);\n        setLoadingCollections(true);\n        const collections = await (0,_app_api_getCollections__WEBPACK_IMPORTED_MODULE_2__.getCollections)(idRef.current);\n        setCollections(collections);\n        setLoadingCollections(false);\n        showSuccessToast(\"\".concat(collections.length, \" Collections Loaded\"));\n    };\n    const deleteCollection = async (collection_name)=>{\n        if (!idRef.current) return;\n        const result = await (0,_app_api_deleteCollectionMetadata__WEBPACK_IMPORTED_MODULE_4__.deleteCollectionMetadata)(idRef.current, collection_name);\n        if (result.error) {\n            showErrorToast(\"Failed to Remove Analysis\", result.error);\n        } else {\n            showSuccessToast(\"Analysis Removed\", 'Analysis for \"'.concat(collection_name, '\" has been removed successfully.'));\n            fetchCollections();\n        }\n    };\n    const getRandomPrompts = function() {\n        let amount = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 4;\n        // Merge all prompts from all collections into a single array\n        const allPrompts = collections.reduce((acc, collection)=>{\n            return acc.concat(collection.prompts || []);\n        }, []);\n        // Shuffle the array and return requested amount\n        const shuffled = allPrompts.sort(()=>0.5 - Math.random());\n        return shuffled.slice(0, amount);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(CollectionContext.Provider, {\n        value: {\n            collections,\n            fetchCollections,\n            loadingCollections,\n            deleteCollection,\n            getRandomPrompts\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/danny/Documents/Work/Projects/elysia/elysia-frontend/app/components/contexts/CollectionContext.tsx\",\n        lineNumber: 88,\n        columnNumber: 5\n    }, undefined);\n};\n_s(CollectionProvider, \"pND3qNQ4IE+rI9c25Cz2yBTDzq0=\");\n_c = CollectionProvider;\nvar _c;\n$RefreshReg$(_c, \"CollectionProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9jb21wb25lbnRzL2NvbnRleHRzL0NvbGxlY3Rpb25Db250ZXh0LnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUUrRTtBQUVyQjtBQUNSO0FBQzRCO0FBQ2hDO0FBRXZDLE1BQU1TLGtDQUFvQlQsb0RBQWFBLENBTTNDO0lBQ0RVLGFBQWEsRUFBRTtJQUNmQyxrQkFBa0IsS0FBTztJQUN6QkMsb0JBQW9CO0lBQ3BCQyxrQkFBa0IsS0FBTztJQUN6QkMsa0JBQWtCLElBQU0sRUFBRTtBQUM1QixHQUFHO0FBRUksTUFBTUMscUJBQXFCO1FBQUMsRUFDakNDLFFBQVEsRUFHVDs7SUFDQyxNQUFNLEVBQUVDLEVBQUUsRUFBRUMsbUJBQW1CLEVBQUVDLFdBQVcsRUFBRSxHQUFHbEIsaURBQVVBLENBQUNLLDJEQUFjQTtJQUMxRSxNQUFNLEVBQUVjLGNBQWMsRUFBRUMsZ0JBQWdCLEVBQUUsR0FBR3BCLGlEQUFVQSxDQUFDTyx1REFBWUE7SUFDcEUsTUFBTSxDQUFDRSxhQUFhWSxlQUFlLEdBQUdsQiwrQ0FBUUEsQ0FBZSxFQUFFO0lBQy9ELE1BQU0sQ0FBQ1Esb0JBQW9CVyxzQkFBc0IsR0FBR25CLCtDQUFRQSxDQUFDO0lBRTdELE1BQU1vQixRQUFRckIsNkNBQU1BLENBQUNjO0lBQ3JCLE1BQU1RLGVBQWV0Qiw2Q0FBTUEsQ0FBQztJQUU1QkQsZ0RBQVNBLENBQUM7UUFDUixJQUFJdUIsYUFBYUMsT0FBTyxJQUFJLENBQUNULE1BQU0sQ0FBQ0UsYUFBYTtRQUNqRE0sYUFBYUMsT0FBTyxHQUFHO1FBQ3ZCRixNQUFNRSxPQUFPLEdBQUdUO1FBQ2hCTjtJQUNGLEdBQUc7UUFBQ007UUFBSUU7S0FBWTtJQUVwQmpCLGdEQUFTQSxDQUFDO1FBQ1JTO0lBQ0YsR0FBRztRQUFDTztLQUFvQjtJQUV4QixNQUFNUCxtQkFBbUI7UUFDdkIsSUFBSSxDQUFDYSxNQUFNRSxPQUFPLEVBQUU7UUFDcEJKLGVBQWUsRUFBRTtRQUNqQkMsc0JBQXNCO1FBQ3RCLE1BQU1iLGNBQTRCLE1BQU1MLHVFQUFjQSxDQUFDbUIsTUFBTUUsT0FBTztRQUNwRUosZUFBZVo7UUFDZmEsc0JBQXNCO1FBQ3RCRixpQkFBaUIsR0FBc0IsT0FBbkJYLFlBQVlpQixNQUFNLEVBQUM7SUFDekM7SUFFQSxNQUFNZCxtQkFBbUIsT0FBT2U7UUFDOUIsSUFBSSxDQUFDSixNQUFNRSxPQUFPLEVBQUU7UUFDcEIsTUFBTUcsU0FBUyxNQUFNdEIsMkZBQXdCQSxDQUMzQ2lCLE1BQU1FLE9BQU8sRUFDYkU7UUFHRixJQUFJQyxPQUFPQyxLQUFLLEVBQUU7WUFDaEJWLGVBQWUsNkJBQTZCUyxPQUFPQyxLQUFLO1FBQzFELE9BQU87WUFDTFQsaUJBQ0Usb0JBQ0EsaUJBQWlDLE9BQWhCTyxpQkFBZ0I7WUFFbkNqQjtRQUNGO0lBQ0Y7SUFFQSxNQUFNRyxtQkFBbUI7WUFBQ2lCLDBFQUFpQjtRQUN6Qyw2REFBNkQ7UUFDN0QsTUFBTUMsYUFBYXRCLFlBQVl1QixNQUFNLENBQUMsQ0FBQ0MsS0FBZUM7WUFDcEQsT0FBT0QsSUFBSUUsTUFBTSxDQUFDRCxXQUFXRSxPQUFPLElBQUksRUFBRTtRQUM1QyxHQUFHLEVBQUU7UUFFTCxnREFBZ0Q7UUFDaEQsTUFBTUMsV0FBV04sV0FBV08sSUFBSSxDQUFDLElBQU0sTUFBTUMsS0FBS0MsTUFBTTtRQUN4RCxPQUFPSCxTQUFTSSxLQUFLLENBQUMsR0FBR1g7SUFDM0I7SUFFQSxxQkFDRSw4REFBQ3RCLGtCQUFrQmtDLFFBQVE7UUFDekJDLE9BQU87WUFDTGxDO1lBQ0FDO1lBQ0FDO1lBQ0FDO1lBQ0FDO1FBQ0Y7a0JBRUNFOzs7Ozs7QUFHUCxFQUFFO0dBNUVXRDtLQUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9hcHAvY29tcG9uZW50cy9jb250ZXh0cy9Db2xsZWN0aW9uQ29udGV4dC50c3g/YmRhNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcblxuaW1wb3J0IHsgY3JlYXRlQ29udGV4dCwgdXNlQ29udGV4dCwgdXNlRWZmZWN0LCB1c2VSZWYsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBDb2xsZWN0aW9uIH0gZnJvbSBcIkAvYXBwL3R5cGVzL29iamVjdHNcIjtcbmltcG9ydCB7IGdldENvbGxlY3Rpb25zIH0gZnJvbSBcIkAvYXBwL2FwaS9nZXRDb2xsZWN0aW9uc1wiO1xuaW1wb3J0IHsgU2Vzc2lvbkNvbnRleHQgfSBmcm9tIFwiLi9TZXNzaW9uQ29udGV4dFwiO1xuaW1wb3J0IHsgZGVsZXRlQ29sbGVjdGlvbk1ldGFkYXRhIH0gZnJvbSBcIkAvYXBwL2FwaS9kZWxldGVDb2xsZWN0aW9uTWV0YWRhdGFcIjtcbmltcG9ydCB7IFRvYXN0Q29udGV4dCB9IGZyb20gXCIuL1RvYXN0Q29udGV4dFwiO1xuXG5leHBvcnQgY29uc3QgQ29sbGVjdGlvbkNvbnRleHQgPSBjcmVhdGVDb250ZXh0PHtcbiAgY29sbGVjdGlvbnM6IENvbGxlY3Rpb25bXTtcbiAgZmV0Y2hDb2xsZWN0aW9uczogKCkgPT4gdm9pZDtcbiAgbG9hZGluZ0NvbGxlY3Rpb25zOiBib29sZWFuO1xuICBkZWxldGVDb2xsZWN0aW9uOiAoY29sbGVjdGlvbl9uYW1lOiBzdHJpbmcpID0+IHZvaWQ7XG4gIGdldFJhbmRvbVByb21wdHM6IChhbW91bnQ6IG51bWJlcikgPT4gc3RyaW5nW107XG59Pih7XG4gIGNvbGxlY3Rpb25zOiBbXSxcbiAgZmV0Y2hDb2xsZWN0aW9uczogKCkgPT4ge30sXG4gIGxvYWRpbmdDb2xsZWN0aW9uczogZmFsc2UsXG4gIGRlbGV0ZUNvbGxlY3Rpb246ICgpID0+IHt9LFxuICBnZXRSYW5kb21Qcm9tcHRzOiAoKSA9PiBbXSxcbn0pO1xuXG5leHBvcnQgY29uc3QgQ29sbGVjdGlvblByb3ZpZGVyID0gKHtcbiAgY2hpbGRyZW4sXG59OiB7XG4gIGNoaWxkcmVuOiBSZWFjdC5SZWFjdE5vZGU7XG59KSA9PiB7XG4gIGNvbnN0IHsgaWQsIGZldGNoQ29sbGVjdGlvbkZsYWcsIGluaXRpYWxpemVkIH0gPSB1c2VDb250ZXh0KFNlc3Npb25Db250ZXh0KTtcbiAgY29uc3QgeyBzaG93RXJyb3JUb2FzdCwgc2hvd1N1Y2Nlc3NUb2FzdCB9ID0gdXNlQ29udGV4dChUb2FzdENvbnRleHQpO1xuICBjb25zdCBbY29sbGVjdGlvbnMsIHNldENvbGxlY3Rpb25zXSA9IHVzZVN0YXRlPENvbGxlY3Rpb25bXT4oW10pO1xuICBjb25zdCBbbG9hZGluZ0NvbGxlY3Rpb25zLCBzZXRMb2FkaW5nQ29sbGVjdGlvbnNdID0gdXNlU3RhdGUoZmFsc2UpO1xuXG4gIGNvbnN0IGlkUmVmID0gdXNlUmVmKGlkKTtcbiAgY29uc3QgaW5pdGlhbEZldGNoID0gdXNlUmVmKGZhbHNlKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChpbml0aWFsRmV0Y2guY3VycmVudCB8fCAhaWQgfHwgIWluaXRpYWxpemVkKSByZXR1cm47XG4gICAgaW5pdGlhbEZldGNoLmN1cnJlbnQgPSB0cnVlO1xuICAgIGlkUmVmLmN1cnJlbnQgPSBpZDtcbiAgICBmZXRjaENvbGxlY3Rpb25zKCk7XG4gIH0sIFtpZCwgaW5pdGlhbGl6ZWRdKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGZldGNoQ29sbGVjdGlvbnMoKTtcbiAgfSwgW2ZldGNoQ29sbGVjdGlvbkZsYWddKTtcblxuICBjb25zdCBmZXRjaENvbGxlY3Rpb25zID0gYXN5bmMgKCkgPT4ge1xuICAgIGlmICghaWRSZWYuY3VycmVudCkgcmV0dXJuO1xuICAgIHNldENvbGxlY3Rpb25zKFtdKTtcbiAgICBzZXRMb2FkaW5nQ29sbGVjdGlvbnModHJ1ZSk7XG4gICAgY29uc3QgY29sbGVjdGlvbnM6IENvbGxlY3Rpb25bXSA9IGF3YWl0IGdldENvbGxlY3Rpb25zKGlkUmVmLmN1cnJlbnQpO1xuICAgIHNldENvbGxlY3Rpb25zKGNvbGxlY3Rpb25zKTtcbiAgICBzZXRMb2FkaW5nQ29sbGVjdGlvbnMoZmFsc2UpO1xuICAgIHNob3dTdWNjZXNzVG9hc3QoYCR7Y29sbGVjdGlvbnMubGVuZ3RofSBDb2xsZWN0aW9ucyBMb2FkZWRgKTtcbiAgfTtcblxuICBjb25zdCBkZWxldGVDb2xsZWN0aW9uID0gYXN5bmMgKGNvbGxlY3Rpb25fbmFtZTogc3RyaW5nKSA9PiB7XG4gICAgaWYgKCFpZFJlZi5jdXJyZW50KSByZXR1cm47XG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgZGVsZXRlQ29sbGVjdGlvbk1ldGFkYXRhKFxuICAgICAgaWRSZWYuY3VycmVudCxcbiAgICAgIGNvbGxlY3Rpb25fbmFtZVxuICAgICk7XG5cbiAgICBpZiAocmVzdWx0LmVycm9yKSB7XG4gICAgICBzaG93RXJyb3JUb2FzdChcIkZhaWxlZCB0byBSZW1vdmUgQW5hbHlzaXNcIiwgcmVzdWx0LmVycm9yKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc2hvd1N1Y2Nlc3NUb2FzdChcbiAgICAgICAgXCJBbmFseXNpcyBSZW1vdmVkXCIsXG4gICAgICAgIGBBbmFseXNpcyBmb3IgXCIke2NvbGxlY3Rpb25fbmFtZX1cIiBoYXMgYmVlbiByZW1vdmVkIHN1Y2Nlc3NmdWxseS5gXG4gICAgICApO1xuICAgICAgZmV0Y2hDb2xsZWN0aW9ucygpO1xuICAgIH1cbiAgfTtcblxuICBjb25zdCBnZXRSYW5kb21Qcm9tcHRzID0gKGFtb3VudDogbnVtYmVyID0gNCkgPT4ge1xuICAgIC8vIE1lcmdlIGFsbCBwcm9tcHRzIGZyb20gYWxsIGNvbGxlY3Rpb25zIGludG8gYSBzaW5nbGUgYXJyYXlcbiAgICBjb25zdCBhbGxQcm9tcHRzID0gY29sbGVjdGlvbnMucmVkdWNlKChhY2M6IHN0cmluZ1tdLCBjb2xsZWN0aW9uKSA9PiB7XG4gICAgICByZXR1cm4gYWNjLmNvbmNhdChjb2xsZWN0aW9uLnByb21wdHMgfHwgW10pO1xuICAgIH0sIFtdKTtcblxuICAgIC8vIFNodWZmbGUgdGhlIGFycmF5IGFuZCByZXR1cm4gcmVxdWVzdGVkIGFtb3VudFxuICAgIGNvbnN0IHNodWZmbGVkID0gYWxsUHJvbXB0cy5zb3J0KCgpID0+IDAuNSAtIE1hdGgucmFuZG9tKCkpO1xuICAgIHJldHVybiBzaHVmZmxlZC5zbGljZSgwLCBhbW91bnQpO1xuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPENvbGxlY3Rpb25Db250ZXh0LlByb3ZpZGVyXG4gICAgICB2YWx1ZT17e1xuICAgICAgICBjb2xsZWN0aW9ucyxcbiAgICAgICAgZmV0Y2hDb2xsZWN0aW9ucyxcbiAgICAgICAgbG9hZGluZ0NvbGxlY3Rpb25zLFxuICAgICAgICBkZWxldGVDb2xsZWN0aW9uLFxuICAgICAgICBnZXRSYW5kb21Qcm9tcHRzLFxuICAgICAgfX1cbiAgICA+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9Db2xsZWN0aW9uQ29udGV4dC5Qcm92aWRlcj5cbiAgKTtcbn07XG4iXSwibmFtZXMiOlsiY3JlYXRlQ29udGV4dCIsInVzZUNvbnRleHQiLCJ1c2VFZmZlY3QiLCJ1c2VSZWYiLCJ1c2VTdGF0ZSIsImdldENvbGxlY3Rpb25zIiwiU2Vzc2lvbkNvbnRleHQiLCJkZWxldGVDb2xsZWN0aW9uTWV0YWRhdGEiLCJUb2FzdENvbnRleHQiLCJDb2xsZWN0aW9uQ29udGV4dCIsImNvbGxlY3Rpb25zIiwiZmV0Y2hDb2xsZWN0aW9ucyIsImxvYWRpbmdDb2xsZWN0aW9ucyIsImRlbGV0ZUNvbGxlY3Rpb24iLCJnZXRSYW5kb21Qcm9tcHRzIiwiQ29sbGVjdGlvblByb3ZpZGVyIiwiY2hpbGRyZW4iLCJpZCIsImZldGNoQ29sbGVjdGlvbkZsYWciLCJpbml0aWFsaXplZCIsInNob3dFcnJvclRvYXN0Iiwic2hvd1N1Y2Nlc3NUb2FzdCIsInNldENvbGxlY3Rpb25zIiwic2V0TG9hZGluZ0NvbGxlY3Rpb25zIiwiaWRSZWYiLCJpbml0aWFsRmV0Y2giLCJjdXJyZW50IiwibGVuZ3RoIiwiY29sbGVjdGlvbl9uYW1lIiwicmVzdWx0IiwiZXJyb3IiLCJhbW91bnQiLCJhbGxQcm9tcHRzIiwicmVkdWNlIiwiYWNjIiwiY29sbGVjdGlvbiIsImNvbmNhdCIsInByb21wdHMiLCJzaHVmZmxlZCIsInNvcnQiLCJNYXRoIiwicmFuZG9tIiwic2xpY2UiLCJQcm92aWRlciIsInZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/components/contexts/CollectionContext.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/components/contexts/ConversationContext.tsx":
/*!*********************************************************!*\
  !*** ./app/components/contexts/ConversationContext.tsx ***!
  \*********************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConversationContext: function() { return /* binding */ ConversationContext; },\n/* harmony export */   ConversationProvider: function() { return /* binding */ ConversationProvider; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../types */ \"(app-pages-browser)/./app/components/types.ts\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! uuid */ \"(app-pages-browser)/./node_modules/uuid/dist/esm-browser/v4.js\");\n/* harmony import */ var _CollectionContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./CollectionContext */ \"(app-pages-browser)/./app/components/contexts/CollectionContext.tsx\");\n/* harmony import */ var _SessionContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./SessionContext */ \"(app-pages-browser)/./app/components/contexts/SessionContext.tsx\");\n/* harmony import */ var _app_api_loadConversations__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/app/api/loadConversations */ \"(app-pages-browser)/./app/api/loadConversations.ts\");\n/* harmony import */ var _app_api_loadConversation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/app/api/loadConversation */ \"(app-pages-browser)/./app/api/loadConversation.ts\");\n/* harmony import */ var _app_api_InitializeTree__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @/app/api/InitializeTree */ \"(app-pages-browser)/./app/api/InitializeTree.ts\");\n/* harmony import */ var _app_api_getSuggestions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @/app/api/getSuggestions */ \"(app-pages-browser)/./app/api/getSuggestions.ts\");\n/* harmony import */ var _app_api_deleteConversation__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @/app/api/deleteConversation */ \"(app-pages-browser)/./app/api/deleteConversation.ts\");\n/* harmony import */ var _app_api_addFeedback__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @/app/api/addFeedback */ \"(app-pages-browser)/./app/api/addFeedback.ts\");\n/* harmony import */ var _app_api_deleteFeedback__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @/app/api/deleteFeedback */ \"(app-pages-browser)/./app/api/deleteFeedback.ts\");\n/* harmony import */ var _RouterContext__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./RouterContext */ \"(app-pages-browser)/./app/components/contexts/RouterContext.tsx\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/dist/api/navigation.js\");\n/* __next_internal_client_entry_do_not_use__ ConversationContext,ConversationProvider auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst ConversationContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({\n    conversations: [],\n    setConversations: ()=>{},\n    currentConversation: null,\n    setCurrentConversation: ()=>{},\n    creatingNewConversation: false,\n    setCreatingNewConversation: ()=>{},\n    loadingConversations: false,\n    loadingConversation: false,\n    startNewConversation: ()=>{},\n    conversationPreviews: {},\n    addConversation: ()=>Promise.resolve(null),\n    removeConversation: ()=>{},\n    selectConversation: ()=>{},\n    setConversationStatus: ()=>{},\n    setAllConversationStatuses: ()=>{},\n    addMessageToConversation: ()=>{},\n    initializeEnabledCollections: ()=>{},\n    handleConversationError: ()=>{},\n    toggleCollectionEnabled: ()=>{},\n    handleWebsocketMessage: ()=>{},\n    updateTree: ()=>{},\n    addTreeToConversation: ()=>{},\n    changeBaseToQuery: ()=>{},\n    addQueryToConversation: ()=>{},\n    finishQuery: ()=>{},\n    updateNERForQuery: ()=>{},\n    updateFeedbackForQuery: ()=>{},\n    triggerAllCollections: ()=>{},\n    handleAllConversationsError: ()=>{},\n    addSuggestionToConversation: ()=>{},\n    getAllEnabledCollections: ()=>[],\n    loadConversationsFromDB: ()=>{}\n});\nconst ConversationProvider = (param)=>{\n    let { children } = param;\n    _s();\n    const { collections } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(_CollectionContext__WEBPACK_IMPORTED_MODULE_3__.CollectionContext);\n    const { id, enableRateLimitDialog, initialized, fetchConversationFlag } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(_SessionContext__WEBPACK_IMPORTED_MODULE_4__.SessionContext);\n    const { changePage, currentPage } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(_RouterContext__WEBPACK_IMPORTED_MODULE_12__.RouterContext);\n    const searchParams = (0,next_navigation__WEBPACK_IMPORTED_MODULE_13__.useSearchParams)();\n    const pathname = (0,next_navigation__WEBPACK_IMPORTED_MODULE_13__.usePathname)();\n    const initial_ref = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    const [conversations, setConversations] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [conversationPreviews, setConversationPreviews] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({});\n    const [currentConversation, setCurrentConversation] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [loadingConversations, setLoadingConversations] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [creatingNewConversation, setCreatingNewConversation] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [loadingConversation, setLoadingConversation] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const getDecisionTree = async (user_id, conversation_id)=>{\n        if (user_id === \"\") return null;\n        const data = await (0,_app_api_InitializeTree__WEBPACK_IMPORTED_MODULE_7__.initializeTree)(user_id, conversation_id);\n        return data;\n    };\n    const loadConversationsFromDB = async ()=>{\n        if (!id) return;\n        setLoadingConversations(true);\n        const data = await (0,_app_api_loadConversations__WEBPACK_IMPORTED_MODULE_5__.loadConversations)(id || \"\");\n        let hasConversations = false;\n        for (const [key, value] of Object.entries(data.trees)){\n            if (value && value.title && value.last_update_time) {\n                setConversationPreviews((prev)=>({\n                        ...prev,\n                        [key]: value\n                    }));\n                hasConversations = true;\n            }\n        }\n        setLoadingConversations(false);\n        // If no conversations were loaded, automatically create a new one\n        if (!hasConversations && !creatingNewConversation) {\n            console.log(\"No conversations found, creating new one automatically\");\n            await startNewConversation();\n        }\n    };\n    const retrieveConversation = async (conversationId, conversationName, timestamp)=>{\n        setLoadingConversation(true);\n        const conversation = conversations.find((c)=>c.id === conversationId);\n        if (conversation) {\n            setCurrentConversation(conversationId);\n        } else {\n            const data = await (0,_app_api_loadConversation__WEBPACK_IMPORTED_MODULE_6__.loadConversation)(id || \"\", conversationId);\n            setCreatingNewConversation(true);\n            const tree = await getDecisionTree(id || \"\", conversationId);\n            if (tree != null && collections != null && tree.tree != null) {\n                const queries = data.rebuild.filter((m)=>m && m.type === \"user_prompt\");\n                const prebuiltQueries = {};\n                for (const query of queries){\n                    const newQuery = createNewQuery(conversationId, query.payload.prompt, query.query_id, conversations);\n                    prebuiltQueries[query.query_id] = newQuery;\n                }\n                const newConversation = {\n                    enabled_collections: collections.reduce((acc, c)=>({\n                            ...acc,\n                            [c.name]: true\n                        }), {}),\n                    id: conversationId,\n                    name: conversationName,\n                    tree_updates: [],\n                    // Create a new tree for each query with the query name, plus one base tree\n                    tree: tree.tree ? [\n                        ...queries.map((query)=>({\n                                ...tree.tree,\n                                name: query.payload.prompt\n                            })),\n                        tree.tree\n                    ] : [],\n                    base_tree: tree.tree || null,\n                    queries: prebuiltQueries,\n                    current: \"\",\n                    initialized: true,\n                    error: false,\n                    timestamp: timestamp\n                };\n                // Set tree names to match the user prompts for each query\n                queries.forEach((query)=>{\n                    const prompt = query.payload.prompt;\n                    changeBaseToQuery(conversationId, prompt);\n                });\n                setConversations((prevConversations)=>[\n                        ...prevConversations,\n                        newConversation\n                    ]);\n                for (const message of data.rebuild){\n                    handleWebsocketMessage(message);\n                }\n            }\n            setCreatingNewConversation(false);\n        }\n        setLoadingConversation(false);\n    };\n    const addConversation = async (user_id)=>{\n        if (!(user_id === null || user_id === void 0 ? void 0 : user_id.trim())) {\n            return null;\n        }\n        if (creatingNewConversation) return null;\n        const conversation_id = (0,uuid__WEBPACK_IMPORTED_MODULE_14__[\"default\"])();\n        setCreatingNewConversation(true);\n        const [tree] = await Promise.all([\n            getDecisionTree(user_id, conversation_id)\n        ]);\n        if (tree === null || collections === null || tree.tree === null) {\n            setCreatingNewConversation(false);\n            return null;\n        }\n        const newConversation = {\n            ..._types__WEBPACK_IMPORTED_MODULE_2__.initialConversation,\n            id: conversation_id,\n            timestamp: new Date(),\n            tree: [\n                tree.tree\n            ],\n            base_tree: tree.tree,\n            enabled_collections: collections.reduce((acc, c)=>({\n                    ...acc,\n                    [c.name]: true\n                }), {})\n        };\n        setConversations([\n            ...conversations || [],\n            newConversation\n        ]);\n        setCurrentConversation(conversation_id);\n        setCreatingNewConversation(false);\n        setConversationPreviews((prev)=>({\n                ...prev,\n                [conversation_id]: {\n                    title: newConversation.name,\n                    last_update_time: new Date().toISOString()\n                }\n            }));\n        if (currentPage === \"chat\") {\n            changePage(\"chat\", {\n                conversation: conversation_id\n            }, true);\n        }\n        return newConversation;\n    };\n    const removeConversation = (conversation_id)=>{\n        if (currentConversation === conversation_id) {\n            setCurrentConversation(null);\n        }\n        setConversations([]);\n        setConversationPreviews({});\n        (0,_app_api_deleteConversation__WEBPACK_IMPORTED_MODULE_9__.deleteConversation)(id || \"\", conversation_id);\n        loadConversationsFromDB();\n    };\n    const selectConversation = (id)=>{\n        changePage(\"chat\", {\n            conversation: id\n        }, true);\n    };\n    const setConversationStatus = (status, conversationId)=>{\n        setConversations((prevConversations)=>prevConversations.map((c)=>{\n                if (c.id === conversationId) {\n                    return {\n                        ...c,\n                        current: status\n                    };\n                }\n                return c;\n            }));\n    };\n    const setConversationTitle = async (title, conversationId)=>{\n        setConversations((prevConversations)=>prevConversations.map((c)=>{\n                if (c.id === conversationId) {\n                    return {\n                        ...c,\n                        name: title\n                    };\n                }\n                return c;\n            }));\n        setConversationPreviews((prev)=>({\n                ...prev,\n                [conversationId]: {\n                    title: title,\n                    last_update_time: new Date().toISOString()\n                }\n            }));\n    };\n    const setAllConversationStatuses = (status)=>{\n        setConversations((prevConversations)=>prevConversations.map((c)=>({\n                    ...c,\n                    current: status\n                })));\n    };\n    const addSuggestionToConversation = async (conversationId, queryId, user_id)=>{\n        if (!user_id) return;\n        const auth_key = \"\";\n        const data = await (0,_app_api_getSuggestions__WEBPACK_IMPORTED_MODULE_8__.getSuggestions)(user_id, conversationId, auth_key);\n        const newMessage = {\n            type: \"suggestion\",\n            id: (0,uuid__WEBPACK_IMPORTED_MODULE_14__[\"default\"])(),\n            conversation_id: conversationId,\n            query_id: queryId,\n            user_id: user_id,\n            payload: {\n                error: \"\",\n                suggestions: data.suggestions\n            }\n        };\n        addMessageToConversation([\n            newMessage\n        ], conversationId, queryId);\n    };\n    const addMessageToConversation = (messages, conversationId, queryId)=>{\n        setConversations((prevConversations)=>prevConversations.map((c)=>{\n                if (c.id === conversationId) {\n                    if (!c.queries[queryId]) {\n                        console.warn(\"Query \".concat(queryId, \" not found in conversation \").concat(conversationId, \" \").concat(JSON.stringify(Object.keys(c.queries))));\n                        return c;\n                    }\n                    return {\n                        ...c,\n                        initialized: true,\n                        queries: {\n                            ...c.queries,\n                            [queryId]: {\n                                ...c.queries[queryId],\n                                messages: [\n                                    ...c.queries[queryId].messages,\n                                    ...messages\n                                ]\n                            }\n                        }\n                    };\n                }\n                return c;\n            }));\n    };\n    const getAllEnabledCollections = ()=>{\n        return conversations.reduce((acc, c)=>{\n            const enabledCollectionNames = Object.entries(c.enabled_collections || {})// eslint-disable-next-line @typescript-eslint/no-unused-vars\n            .filter((param)=>{\n                let [key, value] = param;\n                return value === true;\n            })// eslint-disable-next-line @typescript-eslint/no-unused-vars\n            .map((param)=>{\n                let [key, value] = param;\n                return key;\n            });\n            return [\n                ...acc,\n                ...enabledCollectionNames\n            ];\n        }, []);\n    };\n    const initializeEnabledCollections = (collections, collection_id)=>{\n        setConversations((prevConversations)=>prevConversations.map((c)=>{\n                if (c.id === collection_id) {\n                    return {\n                        ...c,\n                        enabled_collections: collections\n                    };\n                }\n                return c;\n            }));\n    };\n    const toggleCollectionEnabled = (collection_id, conversationId)=>{\n        setConversations((prevConversations)=>prevConversations.map((c)=>{\n                if (c.id === conversationId) {\n                    const new_enabled_collections = {\n                        ...c.enabled_collections,\n                        [collection_id]: !c.enabled_collections[collection_id]\n                    };\n                    return {\n                        ...c,\n                        enabled_collections: new_enabled_collections\n                    };\n                }\n                return c;\n            }));\n    };\n    const triggerAllCollections = (conversationId, enable)=>{\n        setConversations((prevConversations)=>prevConversations.map((c)=>{\n                if (c.id === conversationId) {\n                    const new_enabled_collections = Object.keys(c.enabled_collections).reduce((acc, key)=>{\n                        acc[key] = enable;\n                        return acc;\n                    }, {});\n                    return {\n                        ...c,\n                        enabled_collections: new_enabled_collections\n                    };\n                }\n                return c;\n            }));\n    };\n    const updateTree = (tree_update_message)=>{\n        const _payload = tree_update_message.payload;\n        const findAndUpdateNode = (tree, base_tree, payload)=>{\n            if (!tree) {\n                return null;\n            }\n            // If this is the node we're looking for\n            if (tree.id === payload.node && !tree.blocked) {\n                // Update the specific option within tree.options where option.name === payload.decision\n                const updatedOptions = Object.entries(tree.options).reduce((acc, param)=>{\n                    let [key, option] = param;\n                    if (key === payload.decision) {\n                        acc[key] = {\n                            ...option,\n                            choosen: true,\n                            reasoning: payload.reasoning,\n                            options: payload.reset ? base_tree ? {\n                                base: base_tree\n                            } : {} : option.options || {}\n                        };\n                    } else {\n                        acc[key] = option;\n                    }\n                    return acc;\n                }, {});\n                return {\n                    ...tree,\n                    options: updatedOptions,\n                    blocked: true\n                };\n            } else if (tree.options && Object.keys(tree.options).length > 0) {\n                // Recurse into options\n                const updatedOptions = Object.entries(tree.options).reduce((acc, param)=>{\n                    let [key, option] = param;\n                    const updatedNode = findAndUpdateNode(option, base_tree, _payload);\n                    if (updatedNode) {\n                        acc[key] = updatedNode;\n                    }\n                    return acc;\n                }, {});\n                return {\n                    ...tree,\n                    options: updatedOptions,\n                    blocked: true\n                };\n            } else {\n                return tree;\n            }\n        };\n        setConversations((prevConversations)=>prevConversations.map((c)=>{\n                if (c.id === tree_update_message.conversation_id) {\n                    const trees = c.tree;\n                    const tree = trees[_payload.tree_index];\n                    const updatedTree = findAndUpdateNode(tree, c.base_tree, _payload);\n                    const newTrees = [\n                        ...c.tree || []\n                    ];\n                    if (updatedTree) {\n                        newTrees[_payload.tree_index] = updatedTree;\n                    }\n                    return {\n                        ...c,\n                        tree: newTrees,\n                        tree_updates: [\n                            ...c.tree_updates,\n                            _payload\n                        ]\n                    };\n                }\n                return c;\n            }));\n    };\n    const addTreeToConversation = (conversationId)=>{\n        setConversations((prevConversations)=>prevConversations.map((c)=>{\n                if (c.id === conversationId && c.base_tree) {\n                    return {\n                        ...c,\n                        tree: [\n                            ...c.tree,\n                            {\n                                ...c.base_tree\n                            }\n                        ]\n                    };\n                }\n                return c;\n            }));\n    };\n    const changeBaseToQuery = (conversationId, query)=>{\n        var _conversations_find_tree, _conversations_find;\n        const treeIndex = ((_conversations_find = conversations.find((c)=>c.id === conversationId)) === null || _conversations_find === void 0 ? void 0 : (_conversations_find_tree = _conversations_find.tree) === null || _conversations_find_tree === void 0 ? void 0 : _conversations_find_tree.length) || 1;\n        setConversations((prevConversations)=>prevConversations.map((c)=>{\n                if (c.id === conversationId) {\n                    const newTrees = [\n                        ...c.tree\n                    ];\n                    if (newTrees[treeIndex - 1]) {\n                        newTrees[treeIndex - 1] = {\n                            ...newTrees[treeIndex - 1],\n                            name: query\n                        };\n                    }\n                    return {\n                        ...c,\n                        tree: newTrees\n                    };\n                }\n                return c;\n            }));\n    };\n    const createNewQuery = function(conversationId, query, query_id, prevConversations) {\n        let messages = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : [];\n        var _prevConversations_find_queries_query_id, _prevConversations_find;\n        const newMessage = {\n            type: \"User\",\n            id: (0,uuid__WEBPACK_IMPORTED_MODULE_14__[\"default\"])(),\n            query_id: query_id,\n            conversation_id: conversationId,\n            user_id: id || \"\",\n            payload: {\n                type: \"text\",\n                metadata: {},\n                code: {\n                    language: \"\",\n                    title: \"\",\n                    text: \"\"\n                },\n                objects: [\n                    query\n                ]\n            }\n        };\n        const newQuery = {\n            id: query_id,\n            query: query,\n            finished: false,\n            query_start: new Date(),\n            query_end: null,\n            feedback: null,\n            NER: null,\n            index: ((_prevConversations_find = prevConversations.find((c)=>c.id === conversationId)) === null || _prevConversations_find === void 0 ? void 0 : (_prevConversations_find_queries_query_id = _prevConversations_find.queries[query_id]) === null || _prevConversations_find_queries_query_id === void 0 ? void 0 : _prevConversations_find_queries_query_id.index) || 0,\n            messages: [\n                newMessage,\n                ...messages\n            ]\n        };\n        return newQuery;\n    };\n    const addQueryToConversation = (conversationId, query, query_id)=>{\n        setConversations((prevConversations)=>prevConversations.map((c)=>{\n                const newQuery = createNewQuery(conversationId, query, query_id, prevConversations);\n                if (c.id === conversationId) {\n                    return {\n                        ...c,\n                        queries: {\n                            ...c.queries,\n                            [query_id]: newQuery\n                        }\n                    };\n                }\n                return c;\n            }));\n    };\n    const finishQuery = (conversationId, queryId)=>{\n        setConversations((prevConversations)=>prevConversations.map((c)=>{\n                if (c.id === conversationId && c.queries[queryId]) {\n                    return {\n                        ...c,\n                        queries: {\n                            ...c.queries,\n                            [queryId]: {\n                                ...c.queries[queryId],\n                                finished: true,\n                                query_end: new Date()\n                            }\n                        }\n                    };\n                }\n                return c;\n            }));\n    };\n    const updateNERForQuery = (conversationId, queryId, NER)=>{\n        setConversations((prevConversations)=>prevConversations.map((c)=>{\n                if (c.id === conversationId && c.queries[queryId]) {\n                    return {\n                        ...c,\n                        queries: {\n                            ...c.queries,\n                            [queryId]: {\n                                ...c.queries[queryId],\n                                NER: NER\n                            }\n                        }\n                    };\n                }\n                return c;\n            }));\n    };\n    const updateFeedbackForQuery = async (conversationId, queryId, feedback)=>{\n        const conversation = conversations.find((c)=>c.id === conversationId);\n        if (!conversation || conversation.error) return;\n        if (conversation.queries[queryId].feedback === feedback) {\n            await (0,_app_api_deleteFeedback__WEBPACK_IMPORTED_MODULE_11__.deleteFeedback)(id || \"\", conversationId, queryId);\n            setConversations((prevConversations)=>{\n                const newConversations = prevConversations.map((c)=>{\n                    if (c.id === conversationId && c.queries[queryId]) {\n                        return {\n                            ...c,\n                            queries: {\n                                ...c.queries,\n                                [queryId]: {\n                                    ...c.queries[queryId],\n                                    feedback: null\n                                }\n                            }\n                        };\n                    }\n                    return c;\n                });\n                return newConversations;\n            });\n        } else {\n            handleAddFeedback(id || \"\", conversationId, queryId, feedback);\n            setConversations((prevConversations)=>{\n                const newConversations = prevConversations.map((c)=>{\n                    if (c.id === conversationId && c.queries[queryId]) {\n                        return {\n                            ...c,\n                            queries: {\n                                ...c.queries,\n                                [queryId]: {\n                                    ...c.queries[queryId],\n                                    feedback\n                                }\n                            }\n                        };\n                    }\n                    return c;\n                });\n                return newConversations;\n            });\n        }\n    };\n    const handleAddFeedback = async (user_id, conversation_id, query_id, feedback)=>{\n        const data = await (0,_app_api_addFeedback__WEBPACK_IMPORTED_MODULE_10__.addFeedback)(user_id, conversation_id, query_id, feedback);\n        return data;\n    };\n    const handleAllConversationsError = ()=>{\n        setConversations((prevConversations)=>prevConversations.map((c)=>({\n                    ...c,\n                    error: true\n                })));\n    };\n    const handleConversationError = (conversationId)=>{\n        setConversations((prevConversations)=>prevConversations.map((c)=>{\n                if (c.id === conversationId) {\n                    return {\n                        ...c,\n                        error: true\n                    };\n                }\n                return c;\n            }));\n    };\n    const handleWebsocketMessage = (message)=>{\n        if (true) {\n            console.log(\"Handling message type:\", message.type);\n        }\n        if (message.type === \"status\") {\n            const payload = message.payload;\n            setConversationStatus(payload.text, message.conversation_id);\n        } else if (message.type === \"title\") {\n            const payload = message.payload;\n            setConversationTitle(payload.title, message.conversation_id);\n        } else if (message.type === \"ner\") {\n            const payload = message.payload;\n            updateNERForQuery(message.conversation_id, message.query_id, payload);\n        } else if (message.type === \"completed\") {\n            setConversationStatus(\"\", message.conversation_id);\n            finishQuery(message.conversation_id, message.query_id);\n            addSuggestionToConversation(message.conversation_id, message.query_id, message.user_id);\n        } else if (message.type === \"tree_update\") {\n            updateTree(message);\n        } else {\n            if ([\n                \"error\",\n                \"tree_timeout_error\",\n                \"rate_limit_error\",\n                \"authentication_error\"\n            ].includes(message.type)) {\n                handleConversationError(message.conversation_id);\n                finishQuery(message.conversation_id, message.query_id);\n                setConversationStatus(\"\", message.conversation_id);\n            }\n            if (message.type === \"rate_limit_error\") {\n                enableRateLimitDialog();\n            }\n            addMessageToConversation([\n                message\n            ], message.conversation_id, message.query_id);\n        }\n    };\n    const startNewConversation = async ()=>{\n        if (id) {\n            const newConversation = await addConversation(id);\n            if (newConversation) {\n                setCurrentConversation(newConversation.id);\n            }\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!collections) return;\n        setConversations((prevConversations)=>prevConversations.map((c)=>{\n                if (!c.enabled_collections || Object.keys(c.enabled_collections).length === 0) {\n                    return {\n                        ...c,\n                        enabled_collections: collections.reduce((acc, c)=>({\n                                ...acc,\n                                [c.name]: true\n                            }), {})\n                    };\n                }\n                return c;\n            }));\n    }, [\n        collections\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (id && !initial_ref.current && initialized) {\n            initial_ref.current = true;\n            loadConversationsFromDB();\n        }\n    }, [\n        id,\n        initialized\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        loadConversationsFromDB();\n    }, [\n        fetchConversationFlag\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const pageParam = searchParams.get(\"page\");\n        const isChatPageOrRoot = pathname === \"/\" && (pageParam === \"chat\" || pageParam === null);\n        if (true) {\n            console.log(\"Conversation selection logic:\", {\n                isChatPageOrRoot,\n                initial_ref: initial_ref.current,\n                conversationPreviews: Object.keys(conversationPreviews).length,\n                id: !!id,\n                currentConversation\n            });\n        }\n        if (isChatPageOrRoot && initial_ref.current && id && Object.keys(conversationPreviews).length > 0) {\n            const conversationId = searchParams.get(\"conversation\");\n            if (conversationId) {\n                // Handle specific conversation ID in URL\n                if (conversationId === currentConversation) {\n                    return;\n                }\n                if (!conversationPreviews[conversationId]) {\n                    // Conversation not found - select latest existing one\n                    const latestConversationId = Object.entries(conversationPreviews).sort((param, param1)=>{\n                        let [, a] = param, [, b] = param1;\n                        return new Date(b.last_update_time).getTime() - new Date(a.last_update_time).getTime();\n                    })[0][0];\n                    console.log(\"Invalid conversation ID, redirecting to latest:\", latestConversationId);\n                    changePage(\"chat\", {\n                        conversation: latestConversationId\n                    }, true);\n                    return;\n                }\n                const conversation = conversations.find((c)=>c.id === conversationId);\n                const conversationName = conversationPreviews[conversationId].title;\n                if (!conversation) {\n                    retrieveConversation(conversationId, conversationName, new Date(conversationPreviews[conversationId].last_update_time));\n                }\n                setCurrentConversation(conversationId);\n            } else {\n                // No conversation ID in URL - auto-select latest\n                const latestConversationId = Object.entries(conversationPreviews).sort((param, param1)=>{\n                    let [, a] = param, [, b] = param1;\n                    return new Date(b.last_update_time).getTime() - new Date(a.last_update_time).getTime();\n                })[0][0];\n                if (latestConversationId !== currentConversation) {\n                    console.log(\"No conversation in URL, redirecting to latest:\", latestConversationId);\n                    changePage(\"chat\", {\n                        conversation: latestConversationId\n                    }, true);\n                }\n            }\n        }\n    }, [\n        searchParams,\n        pathname,\n        conversationPreviews,\n        id,\n        currentConversation\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ConversationContext.Provider, {\n        value: {\n            setConversations,\n            setCurrentConversation,\n            conversations,\n            currentConversation,\n            addConversation,\n            removeConversation,\n            selectConversation,\n            setConversationStatus,\n            setAllConversationStatuses,\n            addMessageToConversation,\n            initializeEnabledCollections,\n            toggleCollectionEnabled,\n            updateTree,\n            addTreeToConversation,\n            startNewConversation,\n            changeBaseToQuery,\n            addQueryToConversation,\n            creatingNewConversation,\n            conversationPreviews,\n            loadingConversations,\n            setCreatingNewConversation,\n            finishQuery,\n            updateNERForQuery,\n            updateFeedbackForQuery,\n            triggerAllCollections,\n            handleConversationError,\n            handleAllConversationsError,\n            addSuggestionToConversation,\n            getAllEnabledCollections,\n            loadConversationsFromDB,\n            handleWebsocketMessage,\n            loadingConversation\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/danny/Documents/Work/Projects/elysia/elysia-frontend/app/components/contexts/ConversationContext.tsx\",\n        lineNumber: 956,\n        columnNumber: 5\n    }, undefined);\n};\n_s(ConversationProvider, \"+9gxcmKei+0H1XtMDQaEDfQ/fro=\", false, function() {\n    return [\n        next_navigation__WEBPACK_IMPORTED_MODULE_13__.useSearchParams,\n        next_navigation__WEBPACK_IMPORTED_MODULE_13__.usePathname\n    ];\n});\n_c = ConversationProvider;\nvar _c;\n$RefreshReg$(_c, \"ConversationProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/components/contexts/ConversationContext.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/components/navigation/HomeSubMenu.tsx":
/*!***************************************************!*\
  !*** ./app/components/navigation/HomeSubMenu.tsx ***!
  \***************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _barrel_optimize_names_FaCircle_react_icons_fa__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! __barrel_optimize__?names=FaCircle!=!react-icons/fa */ \"(app-pages-browser)/./node_modules/react-icons/fa/index.mjs\");\n/* harmony import */ var _contexts_ConversationContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../contexts/ConversationContext */ \"(app-pages-browser)/./app/components/contexts/ConversationContext.tsx\");\n/* harmony import */ var _barrel_optimize_names_FaPlus_react_icons_fa6__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! __barrel_optimize__?names=FaPlus!=!react-icons/fa6 */ \"(app-pages-browser)/./node_modules/react-icons/fa6/index.mjs\");\n/* harmony import */ var _barrel_optimize_names_GoTrash_react_icons_go__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! __barrel_optimize__?names=GoTrash!=!react-icons/go */ \"(app-pages-browser)/./node_modules/react-icons/go/index.mjs\");\n/* harmony import */ var _components_ui_sidebar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/components/ui/sidebar */ \"(app-pages-browser)/./components/ui/sidebar.tsx\");\n/* harmony import */ var _components_ui_dropdown_menu__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/components/ui/dropdown-menu */ \"(app-pages-browser)/./components/ui/dropdown-menu.tsx\");\n/* harmony import */ var _barrel_optimize_names_SlOptionsVertical_react_icons_sl__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! __barrel_optimize__?names=SlOptionsVertical!=!react-icons/sl */ \"(app-pages-browser)/./node_modules/react-icons/sl/index.mjs\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\nconst HomeSubMenu = ()=>{\n    var _Object_entries;\n    _s();\n    const { startNewConversation, currentConversation, removeConversation, selectConversation, conversationPreviews, loadingConversations, creatingNewConversation, loadingConversation } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(_contexts_ConversationContext__WEBPACK_IMPORTED_MODULE_2__.ConversationContext);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_sidebar__WEBPACK_IMPORTED_MODULE_3__.SidebarGroup, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex items-center justify-between\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_sidebar__WEBPACK_IMPORTED_MODULE_3__.SidebarGroupLabel, {\n                        className: \"flex items-center\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex items-center \".concat(loadingConversations || creatingNewConversation || loadingConversation ? \"shine\" : \"\"),\n                            children: [\n                                creatingNewConversation && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_FaCircle_react_icons_fa__WEBPACK_IMPORTED_MODULE_5__.FaCircle, {\n                                    className: \"text-secondary pulsing mr-2\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/danny/Documents/Work/Projects/elysia/elysia-frontend/app/components/navigation/HomeSubMenu.tsx\",\n                                    lineNumber: 50,\n                                    columnNumber: 15\n                                }, undefined),\n                                loadingConversations || loadingConversation && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                    children: \"Loading conversations...\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/danny/Documents/Work/Projects/elysia/elysia-frontend/app/components/navigation/HomeSubMenu.tsx\",\n                                    lineNumber: 53,\n                                    columnNumber: 39\n                                }, undefined),\n                                !loadingConversations && !loadingConversation && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                    children: creatingNewConversation ? \"Initializing conversation...\" : \"Conversations\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/danny/Documents/Work/Projects/elysia/elysia-frontend/app/components/navigation/HomeSubMenu.tsx\",\n                                    lineNumber: 55,\n                                    columnNumber: 15\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/danny/Documents/Work/Projects/elysia/elysia-frontend/app/components/navigation/HomeSubMenu.tsx\",\n                            lineNumber: 46,\n                            columnNumber: 11\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/Users/danny/Documents/Work/Projects/elysia/elysia-frontend/app/components/navigation/HomeSubMenu.tsx\",\n                        lineNumber: 45,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_sidebar__WEBPACK_IMPORTED_MODULE_3__.SidebarGroupAction, {\n                        title: \"Add Conversation\",\n                        onClick: ()=>startNewConversation(),\n                        disabled: creatingNewConversation,\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_FaPlus_react_icons_fa6__WEBPACK_IMPORTED_MODULE_6__.FaPlus, {}, void 0, false, {\n                                fileName: \"/Users/danny/Documents/Work/Projects/elysia/elysia-frontend/app/components/navigation/HomeSubMenu.tsx\",\n                                lineNumber: 68,\n                                columnNumber: 11\n                            }, undefined),\n                            \" \",\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                className: \"sr-only\",\n                                children: \"Add Conversation\"\n                            }, void 0, false, {\n                                fileName: \"/Users/danny/Documents/Work/Projects/elysia/elysia-frontend/app/components/navigation/HomeSubMenu.tsx\",\n                                lineNumber: 68,\n                                columnNumber: 22\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/danny/Documents/Work/Projects/elysia/elysia-frontend/app/components/navigation/HomeSubMenu.tsx\",\n                        lineNumber: 63,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/danny/Documents/Work/Projects/elysia/elysia-frontend/app/components/navigation/HomeSubMenu.tsx\",\n                lineNumber: 44,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_sidebar__WEBPACK_IMPORTED_MODULE_3__.SidebarGroupContent, {\n                children: (_Object_entries = Object.entries(conversationPreviews)) === null || _Object_entries === void 0 ? void 0 : _Object_entries.sort((param, param1)=>{\n                    let [, a] = param, [, b] = param1;\n                    return new Date(b.last_update_time).getTime() - new Date(a.last_update_time).getTime();\n                }).map((param)=>{\n                    let [key, value] = param;\n                    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_sidebar__WEBPACK_IMPORTED_MODULE_3__.SidebarMenuItem, {\n                        className: \"list-none fade-in\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_sidebar__WEBPACK_IMPORTED_MODULE_3__.SidebarMenuButton, {\n                                variant: currentConversation === key ? \"active\" : \"default\",\n                                onClick: ()=>selectConversation(key),\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                    className: \"truncate max-w-[13rem]\",\n                                    children: value.title\n                                }, void 0, false, {\n                                    fileName: \"/Users/danny/Documents/Work/Projects/elysia/elysia-frontend/app/components/navigation/HomeSubMenu.tsx\",\n                                    lineNumber: 85,\n                                    columnNumber: 17\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"/Users/danny/Documents/Work/Projects/elysia/elysia-frontend/app/components/navigation/HomeSubMenu.tsx\",\n                                lineNumber: 81,\n                                columnNumber: 15\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_dropdown_menu__WEBPACK_IMPORTED_MODULE_4__.DropdownMenu, {\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_dropdown_menu__WEBPACK_IMPORTED_MODULE_4__.DropdownMenuTrigger, {\n                                        asChild: true,\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_sidebar__WEBPACK_IMPORTED_MODULE_3__.SidebarMenuAction, {\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_SlOptionsVertical_react_icons_sl__WEBPACK_IMPORTED_MODULE_7__.SlOptionsVertical, {}, void 0, false, {\n                                                fileName: \"/Users/danny/Documents/Work/Projects/elysia/elysia-frontend/app/components/navigation/HomeSubMenu.tsx\",\n                                                lineNumber: 90,\n                                                columnNumber: 21\n                                            }, undefined)\n                                        }, void 0, false, {\n                                            fileName: \"/Users/danny/Documents/Work/Projects/elysia/elysia-frontend/app/components/navigation/HomeSubMenu.tsx\",\n                                            lineNumber: 89,\n                                            columnNumber: 19\n                                        }, undefined)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/danny/Documents/Work/Projects/elysia/elysia-frontend/app/components/navigation/HomeSubMenu.tsx\",\n                                        lineNumber: 88,\n                                        columnNumber: 17\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_dropdown_menu__WEBPACK_IMPORTED_MODULE_4__.DropdownMenuContent, {\n                                        side: \"right\",\n                                        align: \"start\",\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_dropdown_menu__WEBPACK_IMPORTED_MODULE_4__.DropdownMenuItem, {\n                                            onClick: ()=>removeConversation(key),\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_GoTrash_react_icons_go__WEBPACK_IMPORTED_MODULE_8__.GoTrash, {\n                                                    className: \"text-error\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/danny/Documents/Work/Projects/elysia/elysia-frontend/app/components/navigation/HomeSubMenu.tsx\",\n                                                    lineNumber: 95,\n                                                    columnNumber: 21\n                                                }, undefined),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    className: \"text-error\",\n                                                    children: \"Delete\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/danny/Documents/Work/Projects/elysia/elysia-frontend/app/components/navigation/HomeSubMenu.tsx\",\n                                                    lineNumber: 96,\n                                                    columnNumber: 21\n                                                }, undefined)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/danny/Documents/Work/Projects/elysia/elysia-frontend/app/components/navigation/HomeSubMenu.tsx\",\n                                            lineNumber: 94,\n                                            columnNumber: 19\n                                        }, undefined)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/danny/Documents/Work/Projects/elysia/elysia-frontend/app/components/navigation/HomeSubMenu.tsx\",\n                                        lineNumber: 93,\n                                        columnNumber: 17\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/danny/Documents/Work/Projects/elysia/elysia-frontend/app/components/navigation/HomeSubMenu.tsx\",\n                                lineNumber: 87,\n                                columnNumber: 15\n                            }, undefined)\n                        ]\n                    }, key, true, {\n                        fileName: \"/Users/danny/Documents/Work/Projects/elysia/elysia-frontend/app/components/navigation/HomeSubMenu.tsx\",\n                        lineNumber: 80,\n                        columnNumber: 13\n                    }, undefined);\n                })\n            }, void 0, false, {\n                fileName: \"/Users/danny/Documents/Work/Projects/elysia/elysia-frontend/app/components/navigation/HomeSubMenu.tsx\",\n                lineNumber: 71,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/danny/Documents/Work/Projects/elysia/elysia-frontend/app/components/navigation/HomeSubMenu.tsx\",\n        lineNumber: 43,\n        columnNumber: 5\n    }, undefined);\n};\n_s(HomeSubMenu, \"FGhFE9N08rVZqNlz5+7Ufan8GAU=\");\n_c = HomeSubMenu;\n/* harmony default export */ __webpack_exports__[\"default\"] = (HomeSubMenu);\nvar _c;\n$RefreshReg$(_c, \"HomeSubMenu\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/components/navigation/HomeSubMenu.tsx\n"));

/***/ })

});