# Generated by ariadne-codegen
# Source: src/veri_agents_aiware/aiware_client/graphql/operations

from typing import Any, Dict

from .base_client import BaseClient
from .rag_get_tdo_content import RAGGetTDOContent
from .rag_get_tdo_meta import RAGGetTDOMeta


def gql(q: str) -> str:
    return q


class AiwareGraphQL(BaseClient):
    def rag_get_tdo_content(self, id: str, **kwargs: Any) -> RAGGetTDOContent:
        query = gql(
            """
            query RAG_GetTDO_Content($id: ID!) {
              temporalDataObject(id: $id) {
                id
                createdDateTime
                modifiedDateTime
                name
                ...TDO_Content
              }
            }

            fragment TDO_Content on TemporalDataObject {
              assets {
                records {
                  name
                  contentType
                  assetType
                  signedUri
                  uri
                  sourceData {
                    name
                    engine {
                      category {
                        name
                      }
                    }
                  }
                }
              }
            }
            """
        )
        variables: Dict[str, object] = {"id": id}
        response = self.execute(
            query=query,
            operation_name="RAG_GetTDO_Content",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return RAGGetTDOContent.model_validate(data)

    def rag_get_tdo_meta(self, id: str, **kwargs: Any) -> RAGGetTDOMeta:
        query = gql(
            """
            query RAG_GetTDO_Meta($id: ID!) {
              temporalDataObject(id: $id) {
                id
                createdDateTime
                modifiedDateTime
                name
                description
              }
            }
            """
        )
        variables: Dict[str, object] = {"id": id}
        response = self.execute(
            query=query, operation_name="RAG_GetTDO_Meta", variables=variables, **kwargs
        )
        data = self.get_data(response)
        return RAGGetTDOMeta.model_validate(data)
