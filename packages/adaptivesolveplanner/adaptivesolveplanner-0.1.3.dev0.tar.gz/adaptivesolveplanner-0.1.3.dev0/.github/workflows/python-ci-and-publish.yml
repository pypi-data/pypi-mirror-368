name: Python CI and Publish

on:
  push:
    branches: [ main ]
    tags:
      - 'v*.*.*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    name: Test (pytest)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install package & test tools
        run: |
          python -m pip install --upgrade pip
          # install the package (editable so local code is imported)
          pip install -e .
          # install test/build tools
          pip install pytest build

      - name: Run tests
        run: python -m pytest -q

  publish-testpypi:
    name: Publish to TestPyPI
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Ensure TEST_PYPI_API_TOKEN is set
        run: |
          if [ -z "${{ secrets.TEST_PYPI_API_TOKEN }}" ]; then
            echo "ERROR: TEST_PYPI_API_TOKEN secret is not set"; exit 1
          else
            echo "TEST_PYPI_API_TOKEN found (value hidden)"
          fi

      - name: Install build & twine
        run: python -m pip install --upgrade pip && pip install build twine

      - name: Clean previous builds
        run: rm -rf dist build *.egg-info || true

      - name: Build package (omit local version metadata)
        env:
          SETUPTOOLS_SCM_LOCAL_SCHEME: no-local-version
        run: |
          python -m build

      - name: Show built artifacts
        run: ls -l dist || true

      - name: Upload to TestPyPI (verbose)
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
        run: |
          python -m twine upload --repository-url https://test.pypi.org/legacy/ dist/* --skip-existing --verbose

  publish-pypi:
    name: Publish to PyPI
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Ensure PYPI_API_TOKEN is set
        run: |
          if [ -z "${{ secrets.PYPI_API_TOKEN }}" ]; then
            echo "ERROR: PYPI_API_TOKEN secret is not set"; exit 1
          else
            echo "PYPI_API_TOKEN found (value hidden)"
          fi

      - name: Install build & twine
        run: python -m pip install --upgrade pip && pip install build twine

      - name: Clean previous builds
        run: rm -rf dist build *.egg-info || true

      - name: Build package (omit local version metadata)
        env:
          SETUPTOOLS_SCM_LOCAL_SCHEME: no-local-version
        run: |
          python -m build

      - name: Show built artifacts
        run: ls -l dist || true

      - name: Upload to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          python -m twine upload dist/* --skip-existing --verbose
