Metadata-Version: 2.1
Name: lowLevelDataTransformation
Version: 0.0.5
Summary: The package will change the world of data transformation by utilizing/modifying the low-level stuff.
Home-page: https://github.com/mdAshif1998/lowLevelDataTransformation/tree/master
Author: Md Ashif Ali
Author-email: mdashifali.dml25@iiitb.net
License: UNKNOWN
Keywords: python,data,transformation,cython
Platform: UNKNOWN
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Topic :: Utilities
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE.txt
Requires-Dist: Cython
Requires-Dist: numpy
Requires-Dist: pandas

# lowLevelDataTransformation

The package will change the world of data transformation by utilizing/modifying the low-level stuff.

Developed by Md Ashif Ali (c) 2025

## Features

- High-performance data transformation.
- Utilizes Cython for speed and efficiency.
- Modular design with separate functionalities for different tasks.

## Installation

You can install the package using `pip`:

```sh
pip install lowLevelDataTransformation
```

```python
from lowLevelDataTransformation.df_to_list_of_dictionary.df_to_list_of_dict import df_to_list_of_dictionary
from lowLevelDataTransformation.df_to_string.df_to_string import df_to_string
from lowLevelDataTransformation.string_to_df.string_to_df import string_to_df
import pandas as pd

sample_dataframe = pd.DataFrame({'col_1': [10, 12, 14], 'col_2': ['a', 'b', 'c']})
sample_string = 'col_1__=__10__$$__col_2__=__a__::__col_1__=__12__$$__col_2__=__b__::__col_1__=__14__$$__col_2__=__c__$$____::__'
output_list = df_to_list_of_dictionary(sample_dataframe)
output_string = df_to_string(sample_dataframe)
output_dataframe = string_to_df(sample_string)

```

