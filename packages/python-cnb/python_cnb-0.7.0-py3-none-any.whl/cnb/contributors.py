# Code generated by cnb.cool/cnb/sdk/cnb-sdk-generator. DO NOT EDIT.
# versions:
#    cnb-sdk-generator: 1.0.2
# source: https://api.cnb.cool/swagger.json

from typing import Optional
from .models import dto
class ContributorsService:    
	def __init__(self, client):
		self._client = client

	# 获取指定组织或仓库内, 访问成员在当前层级内的权限信息。Get permission information for accessing members at current level.
	def get_member_access_level_of_group(self,
		group: str,
	    include_inherit: Optional[bool] = None,
		) -> dto.MemberAccessLevelInSlugUnion:
		u = "/%s/-/members/access-level" % (group, )

		query_params = {
			"include_inherit": include_inherit,
			}
		data = self._client.request(
			method="GET", 
			endpoint=u,
			params=query_params,
			)
		return dto.MemberAccessLevelInSlugUnion.safe_parse(data)
		
	# 获取指定组织或仓库内, 访问成员在当前层级内的权限信息。Get permission information for accessing members at current level.
	def get_member_access_level_of_repo(self,
		repo: str,
	    include_inherit: Optional[bool] = None,
		) -> dto.MemberAccessLevelInSlugUnion:
		u = "/%s/-/members/access-level" % (repo, )

		query_params = {
			"include_inherit": include_inherit,
			}
		data = self._client.request(
			method="GET", 
			endpoint=u,
			params=query_params,
			)
		return dto.MemberAccessLevelInSlugUnion.safe_parse(data)
		
	# 获取指定组织或仓库内指定成员的权限信息, 结果按组织层级来展示, 包含上层组织的权限继承信息。Get specified member's permissions with organizational hierarchy.
	def list_member_access_level_of_group(self,
		group: str,
		username: str,
	    ) -> list[dto.MemberAccessLevel]:
		u = "/%s/-/members/%s/access-level" % (group, username, )

		data = self._client.request(
			method="GET", 
			endpoint=u,
			)
		return [dto.MemberAccessLevel.safe_parse(item) for item in data]
		
	# 获取指定组织或仓库内指定成员的权限信息, 结果按组织层级来展示, 包含上层组织的权限继承信息。Get specified member's permissions with organizational hierarchy.
	def list_member_access_level_of_repo(self,
		repo: str,
		username: str,
	    ) -> list[dto.MemberAccessLevel]:
		u = "/%s/-/members/%s/access-level" % (repo, username, )

		data = self._client.request(
			method="GET", 
			endpoint=u,
			)
		return [dto.MemberAccessLevel.safe_parse(item) for item in data]
		
	