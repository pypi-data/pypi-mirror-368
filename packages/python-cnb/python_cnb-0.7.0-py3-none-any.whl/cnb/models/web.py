# Code generated by cnb.cool/cnb/sdk/cnb-sdk-generator. DO NOT EDIT.
# versions:
#    cnb-sdk-generator: 1.0.2
# source: https://api.cnb.cool/swagger.json

from pydantic import Field
from enum import Enum
from typing import Optional, Dict
from .models import CNBBaseModel
from . import dto
from . import git_woa_com_cnb_monorepo_git_internal_app_git_service_bff_web
from . import git_woa_com_cnb_monorepo_git_internal_app_vcs_service_bff_web
from . import git_woa_com_cnb_monorepo_git_internal_dto_web
from . import git_woa_com_cnb_monorepo_mission_mission_resource_dto_web
from . import label
class AddGPGKeyForm(CNBBaseModel):
	armoredPublicKey: Optional[str] = Field(alias="armoredPublicKey", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	pass
class AheadBehind(CNBBaseModel):
	ahead: Optional[int] = Field(alias="ahead", default=None)
	behind: Optional[int] = Field(alias="behind", default=None)
	local_oid: Optional[str] = Field(alias="local_oid", default=None)
	state: Optional[str] = Field(alias="state", default=None)
	upstream_oid: Optional[str] = Field(alias="upstream_oid", default=None)
	pass
class Author(CNBBaseModel):
	email: Optional[str] = Field(alias="email", default=None)
	user_name: Optional[str] = Field(alias="user_name", default=None)
	pass
class BlameRange(CNBBaseModel):
	age: Optional[int] = Field(alias="age", default=None)
	commit: Optional['Commit'] = Field(alias="commit", default=None)
	ending_line: Optional[int] = Field(alias="ending_line", default=None)
	starting_line: Optional[int] = Field(alias="starting_line", default=None)
	pass
class Blames(CNBBaseModel):
	file_size: Optional[int] = Field(alias="file_size", default=None)
	file_size_exceeded: Optional[bool] = Field(alias="file_size_exceeded", default=None)
	file_size_limit: Optional[int] = Field(alias="file_size_limit", default=None)
	ranges: Optional[list['BlameRange']] = Field(alias="ranges", default=None)
	pass
class Branch(CNBBaseModel):
	commit: Optional['Commit'] = Field(alias="commit", default=None)
	is_protected: Optional[bool] = Field(alias="is_protected", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	pass
class BranchListItem(CNBBaseModel):
	ahead: Optional[int] = Field(alias="ahead", default=None)
	ahead_behind: Optional['AheadBehind'] = Field(alias="ahead_behind", default=None)
	associated_pull_request: Optional['BranchPullRequest'] = Field(alias="associated_pull_request", default=None)
	behind: Optional[int] = Field(alias="behind", default=None)
	commit: Optional['Commit'] = Field(alias="commit", default=None)
	dev_meta: Optional[list[int]] = Field(alias="dev_meta", default=None)
	is_head: Optional[bool] = Field(alias="is_head", default=None)
	is_protected: Optional[bool] = Field(alias="is_protected", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	pass
class BranchProtection(CNBBaseModel):
	allow_assignee_manual_merge: Optional[bool] = Field(alias="allow_assignee_manual_merge", default=None)
	allow_creation: Optional[bool] = Field(alias="allow_creation", default=None)
	allow_deletions: Optional[bool] = Field(alias="allow_deletions", default=None)
	allow_force_pushes: Optional[bool] = Field(alias="allow_force_pushes", default=None)
	allow_master_creation: Optional[bool] = Field(alias="allow_master_creation", default=None)
	allow_master_deletions: Optional[bool] = Field(alias="allow_master_deletions", default=None)
	allow_master_force_pushes: Optional[bool] = Field(alias="allow_master_force_pushes", default=None)
	allow_master_manual_merge: Optional[bool] = Field(alias="allow_master_manual_merge", default=None)
	allow_master_pushes: Optional[bool] = Field(alias="allow_master_pushes", default=None)
	allow_pushes: Optional[bool] = Field(alias="allow_pushes", default=None)
	id: Optional[str] = Field(alias="id", default=None)
	match_count: Optional[int] = Field(alias="match_count", default=None)
	required_approved_review_count: Optional[int] = Field(alias="required_approved_review_count", default=None)
	required_approved_review_ratio: Optional[int] = Field(alias="required_approved_review_ratio", default=None)
	required_commit_signatures: Optional[bool] = Field(alias="required_commit_signatures", default=None)
	required_linear_history: Optional[bool] = Field(alias="required_linear_history", default=None)
	required_master_approve: Optional[bool] = Field(alias="required_master_approve", default=None)
	required_must_auto_merge: Optional[bool] = Field(alias="required_must_auto_merge", default=None)
	required_must_push_via_pull_request: Optional[bool] = Field(alias="required_must_push_via_pull_request", default=None)
	required_pull_request_reviews: Optional[bool] = Field(alias="required_pull_request_reviews", default=None)
	required_status_checks: Optional[bool] = Field(alias="required_status_checks", default=None)
	rule: Optional[str] = Field(alias="rule", default=None)
	pass
class BranchPullRequest(CNBBaseModel):
	is_merged: Optional[bool] = Field(alias="is_merged", default=None)
	mergeable_state: Optional[str] = Field(alias="mergeable_state", default=None)
	number: Optional[str] = Field(alias="number", default=None)
	state: Optional[str] = Field(alias="state", default=None)
	pass
class CSDetail(CNBBaseModel):
	display_name: Optional[str] = Field(alias="display_name", default=None)
	field: Optional[str] = Field(alias="field", default=None)
	value: Optional[str] = Field(alias="value", default=None)
	pass
class CodeSensitiveDetail(CNBBaseModel):
	created_at: Optional[str] = Field(alias="created_at", default=None)
	cs_sub_type: Optional['IssueType'] = Field(alias="cs_sub_type", default=None)
	cs_type: Optional['IssueType'] = Field(alias="cs_type", default=None)
	file_name: Optional[str] = Field(alias="file_name", default=None)
	file_path: Optional[str] = Field(alias="file_path", default=None)
	handler: Optional['git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo'] = Field(alias="handler", default=None)
	id: Optional[str] = Field(alias="id", default=None)
	ignore_reason: Optional[str] = Field(alias="ignore_reason", default=None)
	ignored_at: Optional[str] = Field(alias="ignored_at", default=None)
	issue_detail: Optional[list['CSDetail']] = Field(alias="issue_detail", default=None)
	line_no: Optional[list[int]] = Field(alias="line_no", default=None)
	occur_version: Optional[str] = Field(alias="occur_version", default=None)
	owner: Optional['git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo'] = Field(alias="owner", default=None)
	raw_author: Optional['RawAuthor'] = Field(alias="raw_author", default=None)
	reopen_at: Optional[str] = Field(alias="reopen_at", default=None)
	reopen_handler: Optional['git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo'] = Field(alias="reopen_handler", default=None)
	revision: Optional[str] = Field(alias="revision", default=None)
	risk_level: Optional[str] = Field(alias="risk_level", default=None)
	state: Optional[str] = Field(alias="state", default=None)
	tool: Optional[str] = Field(alias="tool", default=None)
	pass
class CodeSensitiveInfo(CNBBaseModel):
	created_at: Optional[str] = Field(alias="created_at", default=None)
	file_name: Optional[str] = Field(alias="file_name", default=None)
	file_path: Optional[str] = Field(alias="file_path", default=None)
	id: Optional[str] = Field(alias="id", default=None)
	issue_type: Optional[str] = Field(alias="issue_type", default=None)
	occur_version: Optional[str] = Field(alias="occur_version", default=None)
	owner: Optional['git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo'] = Field(alias="owner", default=None)
	raw_author: Optional['RawAuthor'] = Field(alias="raw_author", default=None)
	repo_id: Optional[str] = Field(alias="repo_id", default=None)
	revision: Optional[str] = Field(alias="revision", default=None)
	risk_level: Optional[str] = Field(alias="risk_level", default=None)
	state: Optional[str] = Field(alias="state", default=None)
	tool: Optional[str] = Field(alias="tool", default=None)
	pass
class CodeSensitiveSummary(CNBBaseModel):
	ignored: Optional[int] = Field(alias="ignored", default=None)
	open: Optional[int] = Field(alias="open", default=None)
	pass
class Commit(CNBBaseModel):
	author: Optional['git_woa_com_cnb_monorepo_git_internal_app_git_service_bff_web.UserInfo'] = Field(alias="author", default=None)
	commit: Optional['CommitObject'] = Field(alias="commit", default=None)
	commit_statuses: Optional['CommitStatuses'] = Field(alias="commit_statuses", default=None)
	committer: Optional['git_woa_com_cnb_monorepo_git_internal_app_git_service_bff_web.UserInfo'] = Field(alias="committer", default=None)
	files: Optional['CommitFiles'] = Field(alias="files", default=None)
	parents: Optional[list['CommitParent']] = Field(alias="parents", default=None)
	sha: Optional[str] = Field(alias="sha", default=None)
	pass
class CommitAnnotation(CNBBaseModel):
	key: Optional[str] = Field(alias="key", default=None)
	meta: Optional[Dict[str, 'object']] = Field(alias="meta", default=None)
	value: Optional[str] = Field(alias="value", default=None)
	pass
class CommitAnnotationInBatch(CNBBaseModel):
	annotations: Optional[list['CommitAnnotation']] = Field(alias="annotations", default=None)
	commit_hash: Optional[str] = Field(alias="commit_hash", default=None)
	pass
class CommitAsset(CNBBaseModel):
	author: Optional['git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo'] = Field(alias="author", default=None)
	content_type: Optional[str] = Field(alias="content_type", default=None)
	created_at: Optional[str] = Field(alias="created_at", default=None)
	id: Optional[str] = Field(alias="id", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	path: Optional[str] = Field(alias="path", default=None)
	size_in_byte: Optional[int] = Field(alias="size_in_byte", default=None)
	updated_at: Optional[str] = Field(alias="updated_at", default=None)
	pass
class CommitCherryPick(CNBBaseModel):
	cherry_pick_commit: Optional['Commit'] = Field(alias="cherry_pick_commit", default=None)
	cherry_pick_ref: Optional[str] = Field(alias="cherry_pick_ref", default=None)
	has_conflicts: Optional[bool] = Field(alias="has_conflicts", default=None)
	pull_request_number: Optional[str] = Field(alias="pull_request_number", default=None)
	pass
class CommitFiles(CNBBaseModel):
	base_commit: Optional[str] = Field(alias="base_commit", default=None)
	diff: Optional['Diff'] = Field(alias="diff", default=None)
	head_commit: Optional[str] = Field(alias="head_commit", default=None)
	straight: Optional[bool] = Field(alias="straight", default=None)
	pass
class CommitObject(CNBBaseModel):
	author: Optional['Signature'] = Field(alias="author", default=None)
	comment_count: Optional[int] = Field(alias="comment_count", default=None)
	committer: Optional['Signature'] = Field(alias="committer", default=None)
	message: Optional[str] = Field(alias="message", default=None)
	tree: Optional['CommitObjectTree'] = Field(alias="tree", default=None)
	verification: Optional['CommitObjectVerification'] = Field(alias="verification", default=None)
	pass
class CommitObjectTree(CNBBaseModel):
	sha: Optional[str] = Field(alias="sha", default=None)
	pass
class CommitObjectVerification(CNBBaseModel):
	has_signature: Optional[bool] = Field(alias="has_signature", default=None)
	key_id: Optional[str] = Field(alias="key_id", default=None)
	reason: Optional[str] = Field(alias="reason", default=None)
	signed_by_cnb: Optional[bool] = Field(alias="signed_by_cnb", default=None)
	signer: Optional[str] = Field(alias="signer", default=None)
	verified: Optional[bool] = Field(alias="verified", default=None)
	verified_at: Optional[str] = Field(alias="verified_at", default=None)
	pass
class CommitParent(CNBBaseModel):
	sha: Optional[str] = Field(alias="sha", default=None)
	pass
class CommitRefs(CNBBaseModel):
	has_more: Optional[bool] = Field(alias="has_more", default=None)
	refs: Optional[list[str]] = Field(alias="refs", default=None)
	pass
class CommitRevert(CNBBaseModel):
	has_conflicts: Optional[bool] = Field(alias="has_conflicts", default=None)
	pull_request_number: Optional[str] = Field(alias="pull_request_number", default=None)
	revert_commit: Optional['Commit'] = Field(alias="revert_commit", default=None)
	revert_ref: Optional[str] = Field(alias="revert_ref", default=None)
	pass
class CommitStatus(CNBBaseModel):
	context: Optional[str] = Field(alias="context", default=None)
	created_at: Optional[str] = Field(alias="created_at", default=None)
	description: Optional[str] = Field(alias="description", default=None)
	state: Optional[str] = Field(alias="state", default=None)
	target_url: Optional[str] = Field(alias="target_url", default=None)
	updated_at: Optional[str] = Field(alias="updated_at", default=None)
	pass
class CommitStatuses(CNBBaseModel):
	sha: Optional[str] = Field(alias="sha", default=None)
	state: Optional[str] = Field(alias="state", default=None)
	statuses: Optional[list['CommitStatus']] = Field(alias="statuses", default=None)
	pass
class ComparedCommits(CNBBaseModel):
	base_commit: Optional[str] = Field(alias="base_commit", default=None)
	commit_count: Optional[int] = Field(alias="commit_count", default=None)
	commits: Optional[list['Commit']] = Field(alias="commits", default=None)
	head_commit: Optional[str] = Field(alias="head_commit", default=None)
	merge_base_commit: Optional[str] = Field(alias="merge_base_commit", default=None)
	straight: Optional[bool] = Field(alias="straight", default=None)
	pass
class ComparedFiles(CNBBaseModel):
	base_commit: Optional[str] = Field(alias="base_commit", default=None)
	diff: Optional['Diff'] = Field(alias="diff", default=None)
	head_commit: Optional[str] = Field(alias="head_commit", default=None)
	merge_base_commit: Optional[str] = Field(alias="merge_base_commit", default=None)
	straight: Optional[bool] = Field(alias="straight", default=None)
	pass
class ComparedOverview(CNBBaseModel):
	base_commit: Optional[str] = Field(alias="base_commit", default=None)
	commit_count: Optional[int] = Field(alias="commit_count", default=None)
	file_count: Optional[int] = Field(alias="file_count", default=None)
	head_commit: Optional[str] = Field(alias="head_commit", default=None)
	merge_base_commit: Optional[str] = Field(alias="merge_base_commit", default=None)
	straight: Optional[bool] = Field(alias="straight", default=None)
	pass
class ComparedRawDiff(CNBBaseModel):
	base_commit: Optional[str] = Field(alias="base_commit", default=None)
	diff: Optional[str] = Field(alias="diff", default=None)
	head_commit: Optional[str] = Field(alias="head_commit", default=None)
	merge_base_commit: Optional[str] = Field(alias="merge_base_commit", default=None)
	straight: Optional[bool] = Field(alias="straight", default=None)
	pass
class ContributorTrend(CNBBaseModel):
	author: Optional['Author'] = Field(alias="author", default=None)
	commit_count: Optional[int] = Field(alias="commit_count", default=None)
	weeks: Optional[list['Week']] = Field(alias="weeks", default=None)
	pass
class CustomerField(CNBBaseModel):
	name: Optional[str] = Field(alias="name", default=None)
	type: Optional[str] = Field(alias="type", default=None)
	value: Optional[str] = Field(alias="value", default=None)
	pass
class DeferredBranch(CNBBaseModel):
	ahead_behind: Optional['AheadBehind'] = Field(alias="ahead_behind", default=None)
	oid: Optional[str] = Field(alias="oid", default=None)
	pass
class DeferredBranches(CNBBaseModel):
	pass
class DeferredBranchesForm(CNBBaseModel):
	branches: Optional[list[str]] = Field(alias="branches", default=None)
	pass
class DeferredCommit(CNBBaseModel):
	oid: Optional[str] = Field(alias="oid", default=None)
	signature_information: Optional['SignatureInformation'] = Field(alias="signature_information", default=None)
	status_check_statuses: Optional['CommitStatuses'] = Field(alias="status_check_statuses", default=None)
	verified_status: Optional[str] = Field(alias="verified_status", default=None)
	pass
class Diff(CNBBaseModel):
	base_commit: Optional[str] = Field(alias="base_commit", default=None)
	file_exceeded: Optional[bool] = Field(alias="file_exceeded", default=None)
	file_limit: Optional[int] = Field(alias="file_limit", default=None)
	files: Optional[list['DiffFile']] = Field(alias="files", default=None)
	head_commit: Optional[str] = Field(alias="head_commit", default=None)
	stat: Optional['DiffStat'] = Field(alias="stat", default=None)
	pass
class DiffEntry(CNBBaseModel):
	change_type: Optional[str] = Field(alias="change_type", default=None)
	deletions: Optional[int] = Field(alias="deletions", default=None)
	file_index: Optional[int] = Field(alias="file_index", default=None)
	insertions: Optional[int] = Field(alias="insertions", default=None)
	is_bin: Optional[bool] = Field(alias="is_bin", default=None)
	new_file: Optional['DiffEntryFile'] = Field(alias="new_file", default=None)
	old_file: Optional['DiffEntryFile'] = Field(alias="old_file", default=None)
	old_path: Optional[str] = Field(alias="old_path", default=None)
	path: Optional[str] = Field(alias="path", default=None)
	pass
class DiffEntryFile(CNBBaseModel):
	is_binary: Optional[bool] = Field(alias="is_binary", default=None)
	mode: Optional[str] = Field(alias="mode", default=None)
	oid: Optional[str] = Field(alias="oid", default=None)
	path: Optional[str] = Field(alias="path", default=None)
	size: Optional[str] = Field(alias="size", default=None)
	pass
class DiffFile(CNBBaseModel):
	change_type: Optional[str] = Field(alias="change_type", default=None)
	deletions: Optional[int] = Field(alias="deletions", default=None)
	file_index: Optional[int] = Field(alias="file_index", default=None)
	insertions: Optional[int] = Field(alias="insertions", default=None)
	is_bin: Optional[bool] = Field(alias="is_bin", default=None)
	new_file: Optional['DiffEntryFile'] = Field(alias="new_file", default=None)
	old_file: Optional['DiffEntryFile'] = Field(alias="old_file", default=None)
	old_path: Optional[str] = Field(alias="old_path", default=None)
	path: Optional[str] = Field(alias="path", default=None)
	sections: Optional[list['DiffSection']] = Field(alias="sections", default=None)
	pass
class DiffLine(CNBBaseModel):
	content: Optional[str] = Field(alias="content", default=None)
	left_line_number: Optional[int] = Field(alias="left_line_number", default=None)
	prefix: Optional[str] = Field(alias="prefix", default=None)
	right_line_number: Optional[int] = Field(alias="right_line_number", default=None)
	type: Optional[str] = Field(alias="type", default=None)
	pass
class DiffSection(CNBBaseModel):
	lines: Optional[list['DiffLine']] = Field(alias="lines", default=None)
	pass
class DiffStat(CNBBaseModel):
	deletions: Optional[int] = Field(alias="deletions", default=None)
	entry_exceeded: Optional[bool] = Field(alias="entry_exceeded", default=None)
	entry_limit: Optional[int] = Field(alias="entry_limit", default=None)
	insertions: Optional[int] = Field(alias="insertions", default=None)
	paths: Optional[list['DiffEntry']] = Field(alias="paths", default=None)
	pass
class Entry(CNBBaseModel):
	entries: Optional[list['SubEntry']] = Field(alias="entries", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	path: Optional[str] = Field(alias="path", default=None)
	type: Optional[str] = Field(alias="type", default=None)
	pass
class ExpandBlob(CNBBaseModel):
	lines: Optional[list[str]] = Field(alias="lines", default=None)
	pass
class FieldInfo(CNBBaseModel):
	priority: Optional['FieldInfoPriority'] = Field(alias="priority", default=None)
	status: Optional['FieldInfoStatus'] = Field(alias="status", default=None)
	pass
class FieldInfoPriority(CNBBaseModel):
	color_options: Optional[list['FieldInfoPriorityColorOption']] = Field(alias="color_options", default=None)
	html_type: Optional[str] = Field(alias="html_type", default=None)
	label: Optional[str] = Field(alias="label", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	pass
class FieldInfoPriorityColorOption(CNBBaseModel):
	color: Optional[str] = Field(alias="color", default=None)
	label: Optional[str] = Field(alias="label", default=None)
	value: Optional[str] = Field(alias="value", default=None)
	pass
class FieldInfoStatus(CNBBaseModel):
	html_type: Optional[str] = Field(alias="html_type", default=None)
	label: Optional[str] = Field(alias="label", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	options: Optional[Dict[str, 'str']] = Field(alias="options", default=None)
	pass
class FieldInfos(CNBBaseModel):
	bug: Optional['FieldInfo'] = Field(alias="bug", default=None)
	stories: Optional['FieldInfo'] = Field(alias="stories", default=None)
	task: Optional['FieldInfo'] = Field(alias="task", default=None)
	pass
class FileContent(CNBBaseModel):
	branch_count: Optional[int] = Field(alias="branch_count", default=None)
	cnb_settings: Optional['PreloadFile'] = Field(alias="cnb_settings", default=None)
	commit_count: Optional[int] = Field(alias="commit_count", default=None)
	commit_count_exceeded: Optional[bool] = Field(alias="commit_count_exceeded", default=None)
	content: Optional[str] = Field(alias="content", default=None)
	encoding: Optional[str] = Field(alias="encoding", default=None)
	file_size_exceeded: Optional[bool] = Field(alias="file_size_exceeded", default=None)
	file_size_limit: Optional[int] = Field(alias="file_size_limit", default=None)
	file_stat: Optional['FileStat'] = Field(alias="file_stat", default=None)
	initialized: Optional[bool] = Field(alias="initialized", default=None)
	is_lfs: Optional[bool] = Field(alias="is_lfs", default=None)
	is_protected: Optional[bool] = Field(alias="is_protected", default=None)
	last_commit: Optional['Commit'] = Field(alias="last_commit", default=None)
	lfs_hash_algorithm: Optional[str] = Field(alias="lfs_hash_algorithm", default=None)
	lfs_oid: Optional[str] = Field(alias="lfs_oid", default=None)
	lfs_size_in_byte: Optional[str] = Field(alias="lfs_size_in_byte", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	path: Optional[str] = Field(alias="path", default=None)
	repository: Optional['Repository'] = Field(alias="repository", default=None)
	size: Optional[int] = Field(alias="size", default=None)
	tag_count: Optional[int] = Field(alias="tag_count", default=None)
	type: Optional[str] = Field(alias="type", default=None)
	pass
class FileStat(CNBBaseModel):
	mime_type: Optional['MIMEType'] = Field(alias="mime_type", default=None)
	pass
class ForkSyncStatus(CNBBaseModel):
	ahead: Optional[int] = Field(alias="ahead", default=None)
	behind: Optional[int] = Field(alias="behind", default=None)
	upstream_ref: Optional[str] = Field(alias="upstream_ref", default=None)
	upstream_slug: Optional[str] = Field(alias="upstream_slug", default=None)
	pass
class GPGEmail(CNBBaseModel):
	email: Optional[str] = Field(alias="email", default=None)
	verified: Optional[bool] = Field(alias="verified", default=None)
	pass
class GPGPublicKey(CNBBaseModel):
	created_at: Optional[str] = Field(alias="created_at", default=None)
	emails: Optional[list['GPGEmail']] = Field(alias="emails", default=None)
	expired_at: Optional[str] = Field(alias="expired_at", default=None)
	fingerprint: Optional[str] = Field(alias="fingerprint", default=None)
	id: Optional[str] = Field(alias="id", default=None)
	key_creation_time: Optional[str] = Field(alias="key_creation_time", default=None)
	key_id: Optional[str] = Field(alias="key_id", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	public_key: Optional[str] = Field(alias="public_key", default=None)
	subkeys: Optional[list['GPGSubkey']] = Field(alias="subkeys", default=None)
	user_id: Optional[str] = Field(alias="user_id", default=None)
	pass
class GPGSubkey(CNBBaseModel):
	created_at: Optional[str] = Field(alias="created_at", default=None)
	expired_at: Optional[str] = Field(alias="expired_at", default=None)
	fingerprint: Optional[str] = Field(alias="fingerprint", default=None)
	id: Optional[str] = Field(alias="id", default=None)
	key_creation_time: Optional[str] = Field(alias="key_creation_time", default=None)
	key_id: Optional[str] = Field(alias="key_id", default=None)
	primary_key_id: Optional[str] = Field(alias="primary_key_id", default=None)
	pass
class GetCommitAnnotationsInBatchForm(CNBBaseModel):
	commit_hashes: Optional[list[str]] = Field(alias="commit_hashes", default=None)
	keys: Optional[list[str]] = Field(alias="keys", default=None)
	pass
class GitGcStat(CNBBaseModel):
	gc_stat: Optional[str] = Field(alias="gc_stat", default=None)
	pass
class GitHead(CNBBaseModel):
	branch: Optional[str] = Field(alias="branch", default=None)
	pass
class GitUsage(CNBBaseModel):
	git_object_size_limit_in_kib: Optional[str] = Field(alias="git_object_size_limit_in_kib", default=None)
	git_quota_in_kib: Optional[str] = Field(alias="git_quota_in_kib", default=None)
	git_used_in_kib: Optional[str] = Field(alias="git_used_in_kib", default=None)
	lfs_limit_in_kib: Optional[str] = Field(alias="lfs_limit_in_kib", default=None)
	lfs_object_size_limit_in_kib: Optional[str] = Field(alias="lfs_object_size_limit_in_kib", default=None)
	lfs_quota_in_kib: Optional[str] = Field(alias="lfs_quota_in_kib", default=None)
	lfs_used_in_kib: Optional[str] = Field(alias="lfs_used_in_kib", default=None)
	limit_in_kib: Optional[str] = Field(alias="limit_in_kib", default=None)
	logical_lfs_used_in_kib: Optional[str] = Field(alias="logical_lfs_used_in_kib", default=None)
	max_git_object_size_limit_in_kib: Optional[str] = Field(alias="max_git_object_size_limit_in_kib", default=None)
	max_lfs_object_size_limit_in_kib: Optional[str] = Field(alias="max_lfs_object_size_limit_in_kib", default=None)
	physical_lfs_used_in_kib: Optional[str] = Field(alias="physical_lfs_used_in_kib", default=None)
	used_in_kib: Optional[str] = Field(alias="used_in_kib", default=None)
	pass
class GroupGitQuota(CNBBaseModel):
	git_object_size_limit_in_kib: Optional[str] = Field(alias="git_object_size_limit_in_kib", default=None)
	git_quota_in_kib: Optional[str] = Field(alias="git_quota_in_kib", default=None)
	lfs_object_size_limit_in_kib: Optional[str] = Field(alias="lfs_object_size_limit_in_kib", default=None)
	lfs_quota_in_kib: Optional[str] = Field(alias="lfs_quota_in_kib", default=None)
	max_git_object_size_limit_in_kib: Optional[str] = Field(alias="max_git_object_size_limit_in_kib", default=None)
	max_git_quota_in_kib: Optional[str] = Field(alias="max_git_quota_in_kib", default=None)
	max_lfs_object_size_limit_in_kib: Optional[str] = Field(alias="max_lfs_object_size_limit_in_kib", default=None)
	max_lfs_quota_in_kib: Optional[str] = Field(alias="max_lfs_quota_in_kib", default=None)
	pass
class GroupSpecialGitQuota(CNBBaseModel):
	git_object_size_limit_in_kib: Optional[str] = Field(alias="git_object_size_limit_in_kib", default=None)
	git_quota_in_kib: Optional[str] = Field(alias="git_quota_in_kib", default=None)
	lfs_object_size_limit_in_kib: Optional[str] = Field(alias="lfs_object_size_limit_in_kib", default=None)
	lfs_quota_in_kib: Optional[str] = Field(alias="lfs_quota_in_kib", default=None)
	max_git_object_size_limit_in_kib: Optional[str] = Field(alias="max_git_object_size_limit_in_kib", default=None)
	max_git_quota_in_kib: Optional[str] = Field(alias="max_git_quota_in_kib", default=None)
	max_lfs_object_size_limit_in_kib: Optional[str] = Field(alias="max_lfs_object_size_limit_in_kib", default=None)
	max_lfs_quota_in_kib: Optional[str] = Field(alias="max_lfs_quota_in_kib", default=None)
	slug: Optional[str] = Field(alias="slug", default=None)
	pass
class Issue(CNBBaseModel):
	assignees: Optional[list['git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo']] = Field(alias="assignees", default=None)
	author: Optional['git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo'] = Field(alias="author", default=None)
	closed_at: Optional[str] = Field(alias="closed_at", default=None)
	comment_count: Optional[int] = Field(alias="comment_count", default=None)
	created_at: Optional[str] = Field(alias="created_at", default=None)
	ended_at: Optional[str] = Field(alias="ended_at", default=None)
	labels: Optional[list['label.Option']] = Field(alias="labels", default=None)
	last_acted_at: Optional[str] = Field(alias="last_acted_at", default=None)
	number: Optional[str] = Field(alias="number", default=None)
	priority: Optional[str] = Field(alias="priority", default=None)
	started_at: Optional[str] = Field(alias="started_at", default=None)
	state: Optional[str] = Field(alias="state", default=None)
	state_reason: Optional[str] = Field(alias="state_reason", default=None)
	title: Optional[str] = Field(alias="title", default=None)
	updated_at: Optional[str] = Field(alias="updated_at", default=None)
	pass
class IssueActivity(CNBBaseModel):
	actor: Optional['git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo'] = Field(alias="actor", default=None)
	actor_access_role: Optional[str] = Field(alias="actor_access_role", default=None)
	actor_meta: Optional[list[int]] = Field(alias="actor_meta", default=None)
	created_at: Optional[str] = Field(alias="created_at", default=None)
	id: Optional[str] = Field(alias="id", default=None)
	payload: Optional[object] = Field(alias="payload", default=None)
	submitted_at: Optional[str] = Field(alias="submitted_at", default=None)
	type: Optional[str] = Field(alias="type", default=None)
	pass
class IssueAssignee(CNBBaseModel):
	user: Optional['git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo'] = Field(alias="user", default=None)
	pass
class IssueComment(CNBBaseModel):
	author: Optional['git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo'] = Field(alias="author", default=None)
	author_meta: Optional[list[int]] = Field(alias="author_meta", default=None)
	body: Optional[str] = Field(alias="body", default=None)
	comment_id: Optional[str] = Field(alias="comment_id", default=None)
	created_at: Optional[str] = Field(alias="created_at", default=None)
	reactions: Optional[list['git_woa_com_cnb_monorepo_git_internal_app_vcs_service_bff_web.SceneReaction']] = Field(alias="reactions", default=None)
	updated_at: Optional[str] = Field(alias="updated_at", default=None)
	pass
class IssueDetail(CNBBaseModel):
	assignees: Optional[list['IssueAssignee']] = Field(alias="assignees", default=None)
	author: Optional['git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo'] = Field(alias="author", default=None)
	body: Optional[str] = Field(alias="body", default=None)
	body_reactions: Optional[list['git_woa_com_cnb_monorepo_git_internal_app_vcs_service_bff_web.SceneReaction']] = Field(alias="body_reactions", default=None)
	closed_at: Optional[str] = Field(alias="closed_at", default=None)
	comment_count: Optional[int] = Field(alias="comment_count", default=None)
	created_at: Optional[str] = Field(alias="created_at", default=None)
	ended_at: Optional[str] = Field(alias="ended_at", default=None)
	labels: Optional[list['label.Option']] = Field(alias="labels", default=None)
	last_acted_at: Optional[str] = Field(alias="last_acted_at", default=None)
	number: Optional[str] = Field(alias="number", default=None)
	participants: Optional[list['git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo']] = Field(alias="participants", default=None)
	pin: Optional['IssuePin'] = Field(alias="pin", default=None)
	priority: Optional[str] = Field(alias="priority", default=None)
	started_at: Optional[str] = Field(alias="started_at", default=None)
	state: Optional[str] = Field(alias="state", default=None)
	state_reason: Optional[str] = Field(alias="state_reason", default=None)
	subscribe: Optional['Subscribe'] = Field(alias="subscribe", default=None)
	title: Optional[str] = Field(alias="title", default=None)
	updated_at: Optional[str] = Field(alias="updated_at", default=None)
	pass
class IssuePin(CNBBaseModel):
	pin_count: Optional[int] = Field(alias="pin_count", default=None)
	pin_limit: Optional[int] = Field(alias="pin_limit", default=None)
	pinned: Optional[bool] = Field(alias="pinned", default=None)
	pass
class IssueResource(CNBBaseModel):
	assignees: Optional[list['git_woa_com_cnb_monorepo_mission_mission_resource_dto_web.UserInfo']] = Field(alias="assignees", default=None)
	author: Optional['git_woa_com_cnb_monorepo_mission_mission_resource_dto_web.UserInfo'] = Field(alias="author", default=None)
	closed_at: Optional[str] = Field(alias="closed_at", default=None)
	comment_count: Optional[int] = Field(alias="comment_count", default=None)
	created_at: Optional[str] = Field(alias="created_at", default=None)
	customer_fields: Optional[list['CustomerField']] = Field(alias="customer_fields", default=None)
	ended_at: Optional[str] = Field(alias="ended_at", default=None)
	id: Optional[str] = Field(alias="id", default=None)
	labels: Optional[list['LabelOption']] = Field(alias="labels", default=None)
	last_acted_at: Optional[str] = Field(alias="last_acted_at", default=None)
	number: Optional[str] = Field(alias="number", default=None)
	priority: Optional[str] = Field(alias="priority", default=None)
	repo_slug: Optional[str] = Field(alias="repo_slug", default=None)
	started_at: Optional[str] = Field(alias="started_at", default=None)
	state: Optional[str] = Field(alias="state", default=None)
	state_reason: Optional[str] = Field(alias="state_reason", default=None)
	title: Optional[str] = Field(alias="title", default=None)
	updated_at: Optional[str] = Field(alias="updated_at", default=None)
	pass
class IssueSummary(CNBBaseModel):
	closed_issue_number: Optional[int] = Field(alias="closed_issue_number", default=None)
	closed_pull_request_number: Optional[int] = Field(alias="closed_pull_request_number", default=None)
	open_issue_number: Optional[int] = Field(alias="open_issue_number", default=None)
	open_pull_request_number: Optional[int] = Field(alias="open_pull_request_number", default=None)
	pass
class IssueTemplate(CNBBaseModel):
	content: Optional[str] = Field(alias="content", default=None)
	encoding: Optional[str] = Field(alias="encoding", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	path: Optional[str] = Field(alias="path", default=None)
	pass
class IssueTemplates(CNBBaseModel):
	templates: Optional[list['IssueTemplate']] = Field(alias="templates", default=None)
	pass
class IssueType(CNBBaseModel):
	color: Optional[str] = Field(alias="color", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	pass
class LFSFile(CNBBaseModel):
	sha: Optional[str] = Field(alias="sha", default=None)
	size: Optional[str] = Field(alias="size", default=None)
	pass
class LabelOption(CNBBaseModel):
	color: Optional[str] = Field(alias="color", default=None)
	created_at: Optional[str] = Field(alias="created_at", default=None)
	description: Optional[str] = Field(alias="description", default=None)
	id: Optional[str] = Field(alias="id", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	repo_id: Optional[int] = Field(alias="repo_id", default=None)
	slug: Optional[str] = Field(alias="slug", default=None)
	updated_at: Optional[str] = Field(alias="updated_at", default=None)
	pass
class LabelWithCount(CNBBaseModel):
	color: Optional[str] = Field(alias="color", default=None)
	created_at: Optional[str] = Field(alias="created_at", default=None)
	description: Optional[str] = Field(alias="description", default=None)
	id: Optional[str] = Field(alias="id", default=None)
	issue_count: Optional[int] = Field(alias="issue_count", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	pull_request_count: Optional[int] = Field(alias="pull_request_count", default=None)
	updated_at: Optional[str] = Field(alias="updated_at", default=None)
	pass
class LastPushBranch(CNBBaseModel):
	date_time: Optional[str] = Field(alias="date_time", default=None)
	is_head: Optional[bool] = Field(alias="is_head", default=None)
	pull_number: Optional[int] = Field(alias="pull_number", default=None)
	ref: Optional[str] = Field(alias="ref", default=None)
	pass
class MIMEType(CNBBaseModel):
	content_type: Optional[str] = Field(alias="content_type", default=None)
	externsion: Optional[str] = Field(alias="externsion", default=None)
	is_audio: Optional[bool] = Field(alias="is_audio", default=None)
	is_browsable_binary_type: Optional[bool] = Field(alias="is_browsable_binary_type", default=None)
	is_image: Optional[bool] = Field(alias="is_image", default=None)
	is_pdf: Optional[bool] = Field(alias="is_pdf", default=None)
	is_representable_as_text: Optional[bool] = Field(alias="is_representable_as_text", default=None)
	is_svg_image: Optional[bool] = Field(alias="is_svg_image", default=None)
	is_text: Optional[bool] = Field(alias="is_text", default=None)
	is_video: Optional[bool] = Field(alias="is_video", default=None)
	pass
class MergeState(CNBBaseModel):
	conflicts: Optional[list[str]] = Field(alias="conflicts", default=None)
	state: Optional[str] = Field(alias="state", default=None)
	pass
class Meta(CNBBaseModel):
	gen_branch: Optional[str] = Field(alias="gen_branch", default=None)
	gen_hash: Optional[str] = Field(alias="gen_hash", default=None)
	updated_at: Optional[str] = Field(alias="updated_at", default=None)
	pass
class MissionField(CNBBaseModel):
	interaction_type: Optional['dto.InteractionType'] = Field(alias="interaction_type", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	operators: Optional[list['dto.OperatorType']] = Field(alias="operators", default=None)
	value: Optional[list[object]] = Field(alias="value", default=None)
	pass
class MissionResources(CNBBaseModel):
	issues: Optional[list['IssueResource']] = Field(alias="issues", default=None)
	pull_requests: Optional[list['PullRequestResource']] = Field(alias="pull_requests", default=None)
	total: Optional[int] = Field(alias="total", default=None)
	pass
class OverviewBranches(CNBBaseModel):
	active_branches: Optional[list['BranchListItem']] = Field(alias="active_branches", default=None)
	default_branch: Optional['BranchListItem'] = Field(alias="default_branch", default=None)
	has_more_active_branch: Optional[bool] = Field(alias="has_more_active_branch", default=None)
	has_more_stale_branch: Optional[bool] = Field(alias="has_more_stale_branch", default=None)
	has_more_yours_branch: Optional[bool] = Field(alias="has_more_yours_branch", default=None)
	initialized: Optional[bool] = Field(alias="initialized", default=None)
	stale_branches: Optional[list['BranchListItem']] = Field(alias="stale_branches", default=None)
	yours_branches: Optional[list['BranchListItem']] = Field(alias="yours_branches", default=None)
	pass
class PatchGroupGitQuoteForm(CNBBaseModel):
	git_object_size_limit_in_kib: Optional[int] = Field(alias="git_object_size_limit_in_kib", default=None)
	git_quota_in_kib: Optional[int] = Field(alias="git_quota_in_kib", default=None)
	lfs_object_size_limit_in_kib: Optional[int] = Field(alias="lfs_object_size_limit_in_kib", default=None)
	lfs_quota_in_kib: Optional[int] = Field(alias="lfs_quota_in_kib", default=None)
	pass
class PatchGroupSpecialGitQuotaForm(CNBBaseModel):
	git_object_size_limit_in_kib: Optional[int] = Field(alias="git_object_size_limit_in_kib", default=None)
	git_quota_in_kib: Optional[int] = Field(alias="git_quota_in_kib", default=None)
	lfs_object_size_limit_in_kib: Optional[int] = Field(alias="lfs_object_size_limit_in_kib", default=None)
	lfs_quota_in_kib: Optional[int] = Field(alias="lfs_quota_in_kib", default=None)
	pass
class PendingPullReview(CNBBaseModel):
	comment_count: Optional[int] = Field(alias="comment_count", default=None)
	review_id: Optional[str] = Field(alias="review_id", default=None)
	pass
class Permission(CNBBaseModel):
	allow_push_git_tag: Optional[bool] = Field(alias="allow_push_git_tag", default=None)
	pass
class PipelineSettings(CNBBaseModel):
	auto_trigger: Optional[bool] = Field(alias="auto_trigger", default=None)
	forked_repo_auto_trigger: Optional[bool] = Field(alias="forked_repo_auto_trigger", default=None)
	pass
class PostCommitAssetForm(CNBBaseModel):
	content_type: Optional[str] = Field(alias="content_type", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	path: Optional[str] = Field(alias="path", default=None)
	size_in_byte: Optional[int] = Field(alias="size_in_byte", default=None)
	token: Optional[str] = Field(alias="token", default=None)
	pass
class PreloadFile(CNBBaseModel):
	content: Optional[str] = Field(alias="content", default=None)
	encoding: Optional[str] = Field(alias="encoding", default=None)
	file_stat: Optional['FileStat'] = Field(alias="file_stat", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	pass
class PullRawDiff(CNBBaseModel):
	base_commit: Optional[str] = Field(alias="base_commit", default=None)
	diff: Optional[str] = Field(alias="diff", default=None)
	head_commit: Optional[str] = Field(alias="head_commit", default=None)
	merge_base_commit: Optional[str] = Field(alias="merge_base_commit", default=None)
	pass
class PullRequest(CNBBaseModel):
	assignees: Optional[list['git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo']] = Field(alias="assignees", default=None)
	author: Optional['git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo'] = Field(alias="author", default=None)
	base_repo_ref: Optional[str] = Field(alias="base_repo_ref", default=None)
	blocked_on: Optional[str] = Field(alias="blocked_on", default=None)
	comment_count: Optional[int] = Field(alias="comment_count", default=None)
	commit_count: Optional[int] = Field(alias="commit_count", default=None)
	commit_statuses: Optional['CommitStatuses'] = Field(alias="commit_statuses", default=None)
	created_at: Optional[str] = Field(alias="created_at", default=None)
	file_count: Optional[int] = Field(alias="file_count", default=None)
	head_deleted: Optional[bool] = Field(alias="head_deleted", default=None)
	head_repo_ref: Optional[str] = Field(alias="head_repo_ref", default=None)
	head_repo_slug: Optional[str] = Field(alias="head_repo_slug", default=None)
	is_merged: Optional[bool] = Field(alias="is_merged", default=None)
	is_ready_for_merge: Optional[bool] = Field(alias="is_ready_for_merge", default=None)
	is_wip: Optional[bool] = Field(alias="is_wip", default=None)
	labels: Optional[list['label.Option']] = Field(alias="labels", default=None)
	last_acted_at: Optional[str] = Field(alias="last_acted_at", default=None)
	merge_style: Optional[str] = Field(alias="merge_style", default=None)
	mergeable_state: Optional[str] = Field(alias="mergeable_state", default=None)
	number: Optional[str] = Field(alias="number", default=None)
	review_comment_count: Optional[int] = Field(alias="review_comment_count", default=None)
	review_count: Optional[int] = Field(alias="review_count", default=None)
	reviewers: Optional[list['git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo']] = Field(alias="reviewers", default=None)
	state: Optional[str] = Field(alias="state", default=None)
	status_check_commit_sha: Optional[str] = Field(alias="status_check_commit_sha", default=None)
	title: Optional[str] = Field(alias="title", default=None)
	updated_at: Optional[str] = Field(alias="updated_at", default=None)
	pass
class PullRequestActivity(CNBBaseModel):
	actor: Optional['git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo'] = Field(alias="actor", default=None)
	actor_access_role: Optional[str] = Field(alias="actor_access_role", default=None)
	actor_meta: Optional[list[int]] = Field(alias="actor_meta", default=None)
	created_at: Optional[str] = Field(alias="created_at", default=None)
	id: Optional[str] = Field(alias="id", default=None)
	payload: Optional[object] = Field(alias="payload", default=None)
	submitted_at: Optional[str] = Field(alias="submitted_at", default=None)
	type: Optional[str] = Field(alias="type", default=None)
	pass
class PullRequestAssignee(CNBBaseModel):
	user: Optional['git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo'] = Field(alias="user", default=None)
	pass
class PullRequestBranchProtection(CNBBaseModel):
	allow_assignee_manual_merge: Optional[bool] = Field(alias="allow_assignee_manual_merge", default=None)
	allow_deletions: Optional[bool] = Field(alias="allow_deletions", default=None)
	allow_force_pushes: Optional[bool] = Field(alias="allow_force_pushes", default=None)
	allow_master_deletions: Optional[bool] = Field(alias="allow_master_deletions", default=None)
	allow_master_force_pushes: Optional[bool] = Field(alias="allow_master_force_pushes", default=None)
	allow_master_manual_merge: Optional[bool] = Field(alias="allow_master_manual_merge", default=None)
	dismiss_stale_review: Optional[bool] = Field(alias="dismiss_stale_review", default=None)
	required_approved_review_count: Optional[int] = Field(alias="required_approved_review_count", default=None)
	required_approved_review_ratio: Optional[int] = Field(alias="required_approved_review_ratio", default=None)
	required_commit_signatures: Optional[bool] = Field(alias="required_commit_signatures", default=None)
	required_conversation_resolution: Optional[bool] = Field(alias="required_conversation_resolution", default=None)
	required_linear_history: Optional[bool] = Field(alias="required_linear_history", default=None)
	required_master_approve: Optional[bool] = Field(alias="required_master_approve", default=None)
	required_must_auto_merge: Optional[bool] = Field(alias="required_must_auto_merge", default=None)
	required_must_push_via_pull_request: Optional[bool] = Field(alias="required_must_push_via_pull_request", default=None)
	required_pull_request_reviews: Optional[bool] = Field(alias="required_pull_request_reviews", default=None)
	required_status_checks: Optional[bool] = Field(alias="required_status_checks", default=None)
	rule: Optional[str] = Field(alias="rule", default=None)
	pass
class PullRequestDetail(CNBBaseModel):
	allow_merge_styles: Optional[list[str]] = Field(alias="allow_merge_styles", default=None)
	assignees: Optional[list['PullRequestAssignee']] = Field(alias="assignees", default=None)
	author: Optional['git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo'] = Field(alias="author", default=None)
	base: Optional['PullRequestRepository'] = Field(alias="base", default=None)
	base_repo_ref: Optional[str] = Field(alias="base_repo_ref", default=None)
	blocked_on: Optional[str] = Field(alias="blocked_on", default=None)
	body: Optional[str] = Field(alias="body", default=None)
	body_reactions: Optional[list['git_woa_com_cnb_monorepo_git_internal_app_git_service_bff_web.SceneReaction']] = Field(alias="body_reactions", default=None)
	can_do_merge: Optional[bool] = Field(alias="can_do_merge", default=None)
	comment_count: Optional[int] = Field(alias="comment_count", default=None)
	commit_count: Optional[int] = Field(alias="commit_count", default=None)
	commit_statuses: Optional['CommitStatuses'] = Field(alias="commit_statuses", default=None)
	conflict_file_count: Optional[int] = Field(alias="conflict_file_count", default=None)
	conflict_files: Optional[list[str]] = Field(alias="conflict_files", default=None)
	created_at: Optional[str] = Field(alias="created_at", default=None)
	file_count: Optional[int] = Field(alias="file_count", default=None)
	head: Optional['PullRequestRepository'] = Field(alias="head", default=None)
	head_deleted: Optional[bool] = Field(alias="head_deleted", default=None)
	head_repo_ref: Optional[str] = Field(alias="head_repo_ref", default=None)
	head_repo_slug: Optional[str] = Field(alias="head_repo_slug", default=None)
	is_merged: Optional[bool] = Field(alias="is_merged", default=None)
	is_ready_for_merge: Optional[bool] = Field(alias="is_ready_for_merge", default=None)
	is_wip: Optional[bool] = Field(alias="is_wip", default=None)
	labels: Optional[list['label.Option']] = Field(alias="labels", default=None)
	last_acted_at: Optional[str] = Field(alias="last_acted_at", default=None)
	merge_style: Optional[str] = Field(alias="merge_style", default=None)
	mergeable_state: Optional[str] = Field(alias="mergeable_state", default=None)
	number: Optional[str] = Field(alias="number", default=None)
	participants: Optional[list['git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo']] = Field(alias="participants", default=None)
	review_comment_count: Optional[int] = Field(alias="review_comment_count", default=None)
	review_count: Optional[int] = Field(alias="review_count", default=None)
	reviewers: Optional[list['PullRequestReviewer']] = Field(alias="reviewers", default=None)
	reviews: Optional['PullRequestReviews'] = Field(alias="reviews", default=None)
	settings: Optional['PullRequestSetting'] = Field(alias="settings", default=None)
	state: Optional[str] = Field(alias="state", default=None)
	status_check_commit_sha: Optional[str] = Field(alias="status_check_commit_sha", default=None)
	title: Optional[str] = Field(alias="title", default=None)
	updated_at: Optional[str] = Field(alias="updated_at", default=None)
	pass
class PullRequestFileComments(CNBBaseModel):
	comments: Optional[list['PullRequestReviewComment']] = Field(alias="comments", default=None)
	path: Optional[str] = Field(alias="path", default=None)
	total_comment: Optional[int] = Field(alias="total_comment", default=None)
	pass
class PullRequestFiles(CNBBaseModel):
	base_commit: Optional[str] = Field(alias="base_commit", default=None)
	diff: Optional['Diff'] = Field(alias="diff", default=None)
	file_comments: Optional[list['PullRequestFileComments']] = Field(alias="file_comments", default=None)
	head_commit: Optional[str] = Field(alias="head_commit", default=None)
	merge_base_commit: Optional[str] = Field(alias="merge_base_commit", default=None)
	pass
class PullRequestRepository(CNBBaseModel):
	access_role: Optional[int] = Field(alias="access_role", default=None)
	deleted: Optional[bool] = Field(alias="deleted", default=None)
	ref: Optional[str] = Field(alias="ref", default=None)
	slug: Optional[str] = Field(alias="slug", default=None)
	usage: Optional['RepositoryUsage'] = Field(alias="usage", default=None)
	pass
class PullRequestResource(CNBBaseModel):
	assignees: Optional[list['git_woa_com_cnb_monorepo_mission_mission_resource_dto_web.UserInfo']] = Field(alias="assignees", default=None)
	author: Optional['git_woa_com_cnb_monorepo_mission_mission_resource_dto_web.UserInfo'] = Field(alias="author", default=None)
	base_repo_ref: Optional[str] = Field(alias="base_repo_ref", default=None)
	blocked_on: Optional[str] = Field(alias="blocked_on", default=None)
	comment_count: Optional[int] = Field(alias="comment_count", default=None)
	commit_count: Optional[int] = Field(alias="commit_count", default=None)
	created_at: Optional[str] = Field(alias="created_at", default=None)
	customer_fields: Optional[list['CustomerField']] = Field(alias="customer_fields", default=None)
	file_count: Optional[int] = Field(alias="file_count", default=None)
	head_repo_ref: Optional[str] = Field(alias="head_repo_ref", default=None)
	id: Optional[str] = Field(alias="id", default=None)
	is_merged: Optional[bool] = Field(alias="is_merged", default=None)
	is_ready_for_merge: Optional[bool] = Field(alias="is_ready_for_merge", default=None)
	labels: Optional[list['LabelOption']] = Field(alias="labels", default=None)
	last_acted_at: Optional[str] = Field(alias="last_acted_at", default=None)
	merge_style: Optional[str] = Field(alias="merge_style", default=None)
	mergeable_state: Optional[str] = Field(alias="mergeable_state", default=None)
	number: Optional[str] = Field(alias="number", default=None)
	repo_slug: Optional[str] = Field(alias="repo_slug", default=None)
	reviewers: Optional[list['PullRequestResourceReviewer']] = Field(alias="reviewers", default=None)
	state: Optional[str] = Field(alias="state", default=None)
	status_check_commit_sha: Optional[str] = Field(alias="status_check_commit_sha", default=None)
	title: Optional[str] = Field(alias="title", default=None)
	updated_at: Optional[str] = Field(alias="updated_at", default=None)
	pass
class PullRequestResourceReviewer(CNBBaseModel):
	nickname: Optional[str] = Field(alias="nickname", default=None)
	review_state: Optional[str] = Field(alias="review_state", default=None)
	username: Optional[str] = Field(alias="username", default=None)
	pass
class PullRequestReview(CNBBaseModel):
	author: Optional['git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo'] = Field(alias="author", default=None)
	author_meta: Optional[list[int]] = Field(alias="author_meta", default=None)
	body: Optional[str] = Field(alias="body", default=None)
	comments: Optional[list['PullRequestReviewComment']] = Field(alias="comments", default=None)
	created_at: Optional[str] = Field(alias="created_at", default=None)
	reactions: Optional[list['git_woa_com_cnb_monorepo_git_internal_app_git_service_bff_web.SceneReaction']] = Field(alias="reactions", default=None)
	review_id: Optional[str] = Field(alias="review_id", default=None)
	state: Optional[str] = Field(alias="state", default=None)
	updated_at: Optional[str] = Field(alias="updated_at", default=None)
	pass
class PullRequestReviewComment(CNBBaseModel):
	author: Optional['git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo'] = Field(alias="author", default=None)
	author_meta: Optional[list[int]] = Field(alias="author_meta", default=None)
	body: Optional[str] = Field(alias="body", default=None)
	comment_id: Optional[str] = Field(alias="comment_id", default=None)
	commit_hash: Optional[str] = Field(alias="commit_hash", default=None)
	created_at: Optional[str] = Field(alias="created_at", default=None)
	delete_payload: Optional['PullReviewCommentDeleteActivityPayload'] = Field(alias="delete_payload", default=None)
	deleted: Optional[bool] = Field(alias="deleted", default=None)
	diff_hunk: Optional[list['DiffLine']] = Field(alias="diff_hunk", default=None)
	end_line: Optional[int] = Field(alias="end_line", default=None)
	end_side: Optional[str] = Field(alias="end_side", default=None)
	path: Optional[str] = Field(alias="path", default=None)
	reactions: Optional[list['git_woa_com_cnb_monorepo_git_internal_app_git_service_bff_web.SceneReaction']] = Field(alias="reactions", default=None)
	replies: Optional[list['PullRequestReviewCommentReply']] = Field(alias="replies", default=None)
	reply_to_comment_id: Optional[str] = Field(alias="reply_to_comment_id", default=None)
	review_id: Optional[str] = Field(alias="review_id", default=None)
	review_state: Optional[str] = Field(alias="review_state", default=None)
	start_line: Optional[int] = Field(alias="start_line", default=None)
	start_side: Optional[str] = Field(alias="start_side", default=None)
	subject_type: Optional[str] = Field(alias="subject_type", default=None)
	updated_at: Optional[str] = Field(alias="updated_at", default=None)
	pass
class PullRequestReviewCommentReply(CNBBaseModel):
	author: Optional['git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo'] = Field(alias="author", default=None)
	body: Optional[str] = Field(alias="body", default=None)
	comment_id: Optional[str] = Field(alias="comment_id", default=None)
	created_at: Optional[str] = Field(alias="created_at", default=None)
	delete_payload: Optional['PullReviewCommentDeleteActivityPayload'] = Field(alias="delete_payload", default=None)
	deleted: Optional[bool] = Field(alias="deleted", default=None)
	reactions: Optional[list['git_woa_com_cnb_monorepo_git_internal_app_git_service_bff_web.SceneReaction']] = Field(alias="reactions", default=None)
	updated_at: Optional[str] = Field(alias="updated_at", default=None)
	pass
class PullRequestReviewer(CNBBaseModel):
	review_state: Optional[str] = Field(alias="review_state", default=None)
	user: Optional['git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo'] = Field(alias="user", default=None)
	pass
class PullRequestReviews(CNBBaseModel):
	approved_ratio: Optional[int] = Field(alias="approved_ratio", default=None)
	master_reviewers: Optional[list['PullRequestReviewer']] = Field(alias="master_reviewers", default=None)
	reviewers: Optional[list['PullRequestReviewer']] = Field(alias="reviewers", default=None)
	state: Optional[str] = Field(alias="state", default=None)
	pass
class PullRequestSetting(CNBBaseModel):
	allow_merge_styles: Optional[list[str]] = Field(alias="allow_merge_styles", default=None)
	base_branch_protection: Optional['PullRequestBranchProtection'] = Field(alias="base_branch_protection", default=None)
	merge_commit_message_style: Optional[str] = Field(alias="merge_commit_message_style", default=None)
	squash_commit_message_style: Optional[str] = Field(alias="squash_commit_message_style", default=None)
	pass
class PullRequestSettings(CNBBaseModel):
	allow_merge_commit_merge: Optional[bool] = Field(alias="allow_merge_commit_merge", default=None)
	allow_rebase_merge: Optional[bool] = Field(alias="allow_rebase_merge", default=None)
	allow_squash_merge: Optional[bool] = Field(alias="allow_squash_merge", default=None)
	master_auto_as_reviewer: Optional[bool] = Field(alias="master_auto_as_reviewer", default=None)
	merge_commit_message_style: Optional[str] = Field(alias="merge_commit_message_style", default=None)
	squash_commit_message_style: Optional[str] = Field(alias="squash_commit_message_style", default=None)
	pass
class PullRequestState(CNBBaseModel):
	commit_statuses: Optional['CommitStatuses'] = Field(alias="commit_statuses", default=None)
	merge_style: Optional[str] = Field(alias="merge_style", default=None)
	mergeable_state: Optional[str] = Field(alias="mergeable_state", default=None)
	number: Optional[str] = Field(alias="number", default=None)
	reviews: Optional['PullRequestReviews'] = Field(alias="reviews", default=None)
	settings: Optional['PullRequestSetting'] = Field(alias="settings", default=None)
	state: Optional[str] = Field(alias="state", default=None)
	status_check_commit_sha: Optional[str] = Field(alias="status_check_commit_sha", default=None)
	pass
class PullReviewCommentDeleteActivityPayload(CNBBaseModel):
	author: Optional['git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo'] = Field(alias="author", default=None)
	comment_id: Optional[str] = Field(alias="comment_id", default=None)
	created_at: Optional[str] = Field(alias="created_at", default=None)
	review_id: Optional[str] = Field(alias="review_id", default=None)
	pass
class PullViewedFile(CNBBaseModel):
	head_commit_sha: Optional[str] = Field(alias="head_commit_sha", default=None)
	is_viewed: Optional[bool] = Field(alias="is_viewed", default=None)
	path: Optional[str] = Field(alias="path", default=None)
	pass
class PushLimitSettings(CNBBaseModel):
	allow_single_push_number: Optional[int] = Field(alias="allow_single_push_number", default=None)
	check_single_push_number: Optional[bool] = Field(alias="check_single_push_number", default=None)
	only_master_can_push_tag: Optional[bool] = Field(alias="only_master_can_push_tag", default=None)
	push_committer_must_be: Optional[str] = Field(alias="push_committer_must_be", default=None)
	pass
class RawAuthor(CNBBaseModel):
	author_email: Optional[str] = Field(alias="author_email", default=None)
	author_name: Optional[str] = Field(alias="author_name", default=None)
	pass
class RecommendBranchNameResponse(CNBBaseModel):
	name: Optional[str] = Field(alias="name", default=None)
	pass
class RecommendReviewer(CNBBaseModel):
	user: Optional['git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo'] = Field(alias="user", default=None)
	pass
class Ref(CNBBaseModel):
	is_head: Optional[bool] = Field(alias="is_head", default=None)
	is_protected: Optional[bool] = Field(alias="is_protected", default=None)
	ref: Optional[str] = Field(alias="ref", default=None)
	target_date: Optional[str] = Field(alias="target_date", default=None)
	target_hash: Optional[str] = Field(alias="target_hash", default=None)
	target_type: Optional[str] = Field(alias="target_type", default=None)
	pass
class RefWithPath(CNBBaseModel):
	initialized: Optional[bool] = Field(alias="initialized", default=None)
	path: Optional[str] = Field(alias="path", default=None)
	ref: Optional[str] = Field(alias="ref", default=None)
	ref_simple_name: Optional[str] = Field(alias="ref_simple_name", default=None)
	ref_type: Optional[str] = Field(alias="ref_type", default=None)
	pass
class ReferTapd(CNBBaseModel):
	created: Optional[str] = Field(alias="created", default=None)
	due: Optional[str] = Field(alias="due", default=None)
	id: Optional[str] = Field(alias="id", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	owner: Optional[str] = Field(alias="owner", default=None)
	priority: Optional[str] = Field(alias="priority", default=None)
	status: Optional[str] = Field(alias="status", default=None)
	type: Optional[str] = Field(alias="type", default=None)
	view_link: Optional[str] = Field(alias="view_link", default=None)
	workspace_id: Optional[str] = Field(alias="workspace_id", default=None)
	pass
class Release(CNBBaseModel):
	assets: Optional[list['ReleaseAsset']] = Field(alias="assets", default=None)
	author: Optional['git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo'] = Field(alias="author", default=None)
	body: Optional[str] = Field(alias="body", default=None)
	created_at: Optional[str] = Field(alias="created_at", default=None)
	id: Optional[str] = Field(alias="id", default=None)
	is_draft: Optional[bool] = Field(alias="is_draft", default=None)
	is_latest: Optional[bool] = Field(alias="is_latest", default=None)
	is_prerelease: Optional[bool] = Field(alias="is_prerelease", default=None)
	last_updated_by: Optional['git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo'] = Field(alias="last_updated_by", default=None)
	published_at: Optional[str] = Field(alias="published_at", default=None)
	reactions: Optional[list['git_woa_com_cnb_monorepo_git_internal_app_git_service_bff_web.SceneReaction']] = Field(alias="reactions", default=None)
	tag_ref: Optional[str] = Field(alias="tag_ref", default=None)
	target_commit_hash: Optional[str] = Field(alias="target_commit_hash", default=None)
	title: Optional[str] = Field(alias="title", default=None)
	updated_at: Optional[str] = Field(alias="updated_at", default=None)
	pass
class ReleaseAsset(CNBBaseModel):
	author: Optional['git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo'] = Field(alias="author", default=None)
	content_type: Optional[str] = Field(alias="content_type", default=None)
	created_at: Optional[str] = Field(alias="created_at", default=None)
	id: Optional[str] = Field(alias="id", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	path: Optional[str] = Field(alias="path", default=None)
	size_in_byte: Optional[int] = Field(alias="size_in_byte", default=None)
	updated_at: Optional[str] = Field(alias="updated_at", default=None)
	pass
class ReleaseCommitNote(CNBBaseModel):
	hash: Optional[str] = Field(alias="hash", default=None)
	message: Optional[str] = Field(alias="message", default=None)
	pass
class ReleaseList(CNBBaseModel):
	release_count: Optional[int] = Field(alias="release_count", default=None)
	releases: Optional[list['Release']] = Field(alias="releases", default=None)
	tag_count: Optional[int] = Field(alias="tag_count", default=None)
	pass
class ReleaseNotes(CNBBaseModel):
	commit_notes: Optional[list['ReleaseCommitNote']] = Field(alias="commit_notes", default=None)
	compare_base_tag: Optional[str] = Field(alias="compare_base_tag", default=None)
	compare_head_tag: Optional[str] = Field(alias="compare_head_tag", default=None)
	is_semver_tag: Optional[bool] = Field(alias="is_semver_tag", default=None)
	pass
class ReleaseTag(CNBBaseModel):
	release: Optional['Release'] = Field(alias="release", default=None)
	tag: Optional['Tag'] = Field(alias="tag", default=None)
	pass
class RepoContribSimply(CNBBaseModel):
	meta: Optional['Meta'] = Field(alias="meta", default=None)
	top_100_contrib: Optional[list['UserContributorSimply']] = Field(alias="top_100_contrib", default=None)
	total: Optional[int] = Field(alias="total", default=None)
	pass
class RepoContribTrend(CNBBaseModel):
	meta: Optional['Meta'] = Field(alias="meta", default=None)
	repo_data: Optional[list['Week']] = Field(alias="repo_data", default=None)
	user_total: Optional[int] = Field(alias="user_total", default=None)
	users_data: Optional[list['ContributorTrend']] = Field(alias="users_data", default=None)
	week_total: Optional[int] = Field(alias="week_total", default=None)
	with_line_counts: Optional[bool] = Field(alias="with_line_counts", default=None)
	pass
class RepoLanguage(CNBBaseModel):
	color: Optional[str] = Field(alias="color", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	ratio: Optional[str] = Field(alias="ratio", default=None)
	pass
class RepoLicense(CNBBaseModel):
	file_name: Optional[str] = Field(alias="file_name", default=None)
	license: Optional[str] = Field(alias="license", default=None)
	pass
class Repository(CNBBaseModel):
	head_ref: Optional[str] = Field(alias="head_ref", default=None)
	http_clone_url: Optional[str] = Field(alias="http_clone_url", default=None)
	slug: Optional[str] = Field(alias="slug", default=None)
	ssh_clone_url: Optional[str] = Field(alias="ssh_clone_url", default=None)
	usage: Optional['RepositoryUsage'] = Field(alias="usage", default=None)
	pass
class RepositoryUsage(CNBBaseModel):
	git_size_in_kib: Optional[str] = Field(alias="git_size_in_kib", default=None)
	lfs_size_in_kib: Optional[str] = Field(alias="lfs_size_in_kib", default=None)
	pass
class Resource(CNBBaseModel):
	type: Optional[str] = Field(alias="type", default=None)
	pass
class Signature(CNBBaseModel):
	date: Optional[str] = Field(alias="date", default=None)
	email: Optional[str] = Field(alias="email", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	pass
class SignatureInformation(CNBBaseModel):
	has_signature: Optional[bool] = Field(alias="has_signature", default=None)
	key_expired: Optional[bool] = Field(alias="key_expired", default=None)
	key_id: Optional[str] = Field(alias="key_id", default=None)
	signature_type: Optional[str] = Field(alias="signature_type", default=None)
	signature_verification_reason: Optional[str] = Field(alias="signature_verification_reason", default=None)
	signed_by_cnb: Optional[bool] = Field(alias="signed_by_cnb", default=None)
	signer: Optional['git_woa_com_cnb_monorepo_git_internal_app_git_service_bff_web.UserInfo'] = Field(alias="signer", default=None)
	verified: Optional[bool] = Field(alias="verified", default=None)
	verified_at: Optional[str] = Field(alias="verified_at", default=None)
	pass
class SubEntry(CNBBaseModel):
	name: Optional[str] = Field(alias="name", default=None)
	path: Optional[str] = Field(alias="path", default=None)
	sha: Optional[str] = Field(alias="sha", default=None)
	type: Optional[str] = Field(alias="type", default=None)
	pass
class Submodule(CNBBaseModel):
	link_url: Optional[str] = Field(alias="link_url", default=None)
	pass
class Subscribe(CNBBaseModel):
	sub_model: Optional[str] = Field(alias="sub_model", default=None)
	pass
class Tag(CNBBaseModel):
	commit: Optional['Commit'] = Field(alias="commit", default=None)
	has_release: Optional[bool] = Field(alias="has_release", default=None)
	message: Optional[str] = Field(alias="message", default=None)
	tag: Optional[str] = Field(alias="tag", default=None)
	tag_object: Optional['TagObject'] = Field(alias="tag_object", default=None)
	tagger: Optional['git_woa_com_cnb_monorepo_git_internal_app_git_service_bff_web.UserInfo'] = Field(alias="tagger", default=None)
	pass
class TagAnnotation(CNBBaseModel):
	key: Optional[str] = Field(alias="key", default=None)
	meta: Optional[Dict[str, 'object']] = Field(alias="meta", default=None)
	value: Optional[str] = Field(alias="value", default=None)
	pass
class TagList(CNBBaseModel):
	release_count: Optional[int] = Field(alias="release_count", default=None)
	tag_count: Optional[int] = Field(alias="tag_count", default=None)
	tags: Optional[list['Tag']] = Field(alias="tags", default=None)
	pass
class TagObject(CNBBaseModel):
	message: Optional[str] = Field(alias="message", default=None)
	tag: Optional[str] = Field(alias="tag", default=None)
	tagger: Optional['Signature'] = Field(alias="tagger", default=None)
	verification: Optional['TagObjectVerification'] = Field(alias="verification", default=None)
	pass
class TagObjectVerification(CNBBaseModel):
	has_signature: Optional[bool] = Field(alias="has_signature", default=None)
	key_expired: Optional[bool] = Field(alias="key_expired", default=None)
	key_id: Optional[str] = Field(alias="key_id", default=None)
	reason: Optional[str] = Field(alias="reason", default=None)
	signature_type: Optional[str] = Field(alias="signature_type", default=None)
	signed_by_cnb: Optional[bool] = Field(alias="signed_by_cnb", default=None)
	signer: Optional['git_woa_com_cnb_monorepo_git_internal_app_git_service_bff_web.UserInfo'] = Field(alias="signer", default=None)
	verified: Optional[bool] = Field(alias="verified", default=None)
	verified_at: Optional[str] = Field(alias="verified_at", default=None)
	pass
class TreeContent(CNBBaseModel):
	branch_count: Optional[int] = Field(alias="branch_count", default=None)
	cnb_settings: Optional['PreloadFile'] = Field(alias="cnb_settings", default=None)
	commit_count: Optional[int] = Field(alias="commit_count", default=None)
	commit_count_exceeded: Optional[bool] = Field(alias="commit_count_exceeded", default=None)
	entries: Optional[list['TreeEntry']] = Field(alias="entries", default=None)
	file_list_exceeded: Optional[bool] = Field(alias="file_list_exceeded", default=None)
	file_list_limit: Optional[int] = Field(alias="file_list_limit", default=None)
	has_web_trigger: Optional[bool] = Field(alias="has_web_trigger", default=None)
	initialized: Optional[bool] = Field(alias="initialized", default=None)
	is_protected: Optional[bool] = Field(alias="is_protected", default=None)
	last_commit: Optional['Commit'] = Field(alias="last_commit", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	path: Optional[str] = Field(alias="path", default=None)
	read_me: Optional['PreloadFile'] = Field(alias="read_me", default=None)
	repository: Optional['Repository'] = Field(alias="repository", default=None)
	tag_count: Optional[int] = Field(alias="tag_count", default=None)
	type: Optional[str] = Field(alias="type", default=None)
	pass
class TreeEntry(CNBBaseModel):
	is_lfs: Optional[bool] = Field(alias="is_lfs", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	path: Optional[str] = Field(alias="path", default=None)
	sha: Optional[str] = Field(alias="sha", default=None)
	submodule: Optional['Submodule'] = Field(alias="submodule", default=None)
	type: Optional[str] = Field(alias="type", default=None)
	pass
class TreeInfo(CNBBaseModel):
	entries: Optional[list['TreeInfoEntry']] = Field(alias="entries", default=None)
	path: Optional[str] = Field(alias="path", default=None)
	pass
class TreeInfoEntry(CNBBaseModel):
	last_commit: Optional['Commit'] = Field(alias="last_commit", default=None)
	name: Optional[str] = Field(alias="name", default=None)
	path: Optional[str] = Field(alias="path", default=None)
	pass
class UpdateGitQuotaForm(CNBBaseModel):
	git_object_size_limit_in_kib: Optional[str] = Field(alias="git_object_size_limit_in_kib", default=None)
	git_quota_in_kib: Optional[str] = Field(alias="git_quota_in_kib", default=None)
	quota_in_kib: Optional[int] = Field(alias="quota_in_kib", default=None)
	pass
class UpdateLfsQuotaForm(CNBBaseModel):
	lfs_object_size_limit_in_kib: Optional[str] = Field(alias="lfs_object_size_limit_in_kib", default=None)
	lfs_quota_in_kib: Optional[str] = Field(alias="lfs_quota_in_kib", default=None)
	quota_in_kib: Optional[int] = Field(alias="quota_in_kib", default=None)
	pass
class UpdatePullViewedFileForm(CNBBaseModel):
	path: Optional[str] = Field(alias="path", default=None)
	pass
class UserContributorSimply(CNBBaseModel):
	commit_count: Optional[int] = Field(alias="commit_count", default=None)
	email: Optional[str] = Field(alias="email", default=None)
	user_name: Optional[str] = Field(alias="user_name", default=None)
	pass
class Week(CNBBaseModel):
	a: Optional[int] = Field(alias="a", default=None)
	c: Optional[int] = Field(alias="c", default=None)
	d: Optional[int] = Field(alias="d", default=None)
	w: Optional[int] = Field(alias="w", default=None)
	pass
