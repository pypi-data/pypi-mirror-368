from dependency.core.declaration.base import ABCComponent, ABCProvider as ABCProvider
from typing import Any, Callable

class Component(ABCComponent):
    def __init__(self, base_cls: type) -> None: ...
    @property
    def provider(self) -> ABCProvider | None: ...
    @provider.setter
    def provider(self, provider: ABCProvider) -> None: ...
    @staticmethod
    def provide(service: Any = None) -> Any: ...

def component(interface: type) -> Callable[[type[Component]], Component]: ...
