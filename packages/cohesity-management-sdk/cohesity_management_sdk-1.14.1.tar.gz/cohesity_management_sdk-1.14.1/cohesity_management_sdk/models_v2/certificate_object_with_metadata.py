# -*- coding: utf-8 -*-

import cohesity_management_sdk.models_v2.certificate_object
class CertificateObjectWithMetadata(object):

    """Implementation of the 'CertificateObjectWithMetadata' model.

    Specifies the details of a certicate including metadata, which can
      be used for environments such as Office365.

    Attributes:
        certificate (CertificateObject): Actual certificate object.
        display_name (string): Display name of the certificate.
        environment (Environment34Enum): Specifies the environment in which the certificate
            will be used.
        expiry_time_usecs (long|int): Specifies the expiry time of the certificate in Unix timestamp
          epoch in microseconds.
        generated_by (GeneratedByEnum): Specifies whether the certificate is generated by cohesity or
          uploaded by customer.
        issued_time_usecs (long|int): Specifies the creation time of the certificate in Unix timestamp
          epoch in microseconds. Currently only applicable for certificates generated
          by cohesity.
        thumbprint (string): SHA1 thumbprint of the certificate.
    """

    # Create a mapping from Model property names to API property names
    _names = {
        "certificate":'certificate',
        "display_name":'displayName',
        "environment":'environment',
        "expiry_time_usecs":'expiryTimeUsecs',
        "generated_by":'generatedBy',
        "issued_time_usecs":'issuedTimeUsecs',
        "thumbprint":'thumbprint'
    }

    def __init__(self,
                 certificate=None,
                 display_name=None,
                 environment=None,
                 expiry_time_usecs=None,
                 generated_by=None,
                 issued_time_usecs=None,
                 thumbprint=None):
        """Constructor for the CertificateObjectWithMetadata class"""

        # Initialize members of the class
        self.certificate = certificate
        self.display_name = display_name
        self.environment = environment
        self.expiry_time_usecs = expiry_time_usecs
        self.generated_by = generated_by
        self.issued_time_usecs = issued_time_usecs
        self.thumbprint = thumbprint


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        certificate = cohesity_management_sdk.models_v2.certificate_object.CertificateObject.from_dictionary(dictionary.get('certificate')) if dictionary.get('certificate') else None
        display_name = dictionary.get('displayName')
        environment = dictionary.get('environment')
        expiry_time_usecs = dictionary.get('expiryTimeUsecs')
        generated_by = dictionary.get('generatedBy')
        issued_time_usecs = dictionary.get('issuedTimeUsecs')
        thumbprint = dictionary.get('thumbprint')


        # Return an object of this model
        return cls(certificate, display_name, environment, expiry_time_usecs, generated_by, issued_time_usecs, thumbprint)