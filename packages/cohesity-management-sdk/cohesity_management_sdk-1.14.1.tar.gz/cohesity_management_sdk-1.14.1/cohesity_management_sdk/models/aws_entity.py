# -*- coding: utf-8 -*-
# Copyright 2024 Cohesity Inc.


class AwsEntity(object):

    """Implementation of the 'AwsEntity' model.

    Message to capture details about entities used for RDS Postgres
    workflows on DMaaS.

    Attributes:
        display_name (string): Contains the name of the entity.
        id (long| int): The id generated by magneto for the given entity.
            This is unique across one cluster.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "display_name": 'displayName',
        "id": 'id'
    }

    def __init__(self,
                 display_name=None,
                 id=None):
        """Constructor for the AwsEntity class"""

        # Initialize members of the class
        self.display_name = display_name
        self.id = id


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        display_name = dictionary.get('displayName', None)
        id = dictionary.get('id', None)

        # Return an object of this model
        return cls(display_name,
                   id)


