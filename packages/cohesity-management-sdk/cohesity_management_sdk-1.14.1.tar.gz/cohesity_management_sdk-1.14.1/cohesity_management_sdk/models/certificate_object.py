# -*- coding: utf-8 -*-
# Copyright 2024 Cohesity Inc.


class CertificateObject(object):

    """Implementation of the 'CertificateObject' model.

    Specifies the details of a certificate.

    Attributes:
        display_name (string): Display name of the certificate.
        generated_by (string): Certificate generated by. Currently
            it can be either External or Cohesity.
        thumbprint (string): SHA1 thumbprint of the certificate.
    """

    # Create a mapping from Model property names to API property names
    _names = {
        "display_name":'displayName',
        "generated_by":'generatedBy',
        "thumbprint":'thumbprint'
    }

    def __init__(self,
                 display_name=None,
                 generated_by=None,
                 thumbprint=None):
        """Constructor for the CertificateObject class"""

        # Initialize members of the class
        self.display_name = display_name
        self.generated_by = generated_by
        self.thumbprint = thumbprint


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        display_name = dictionary.get('displayName')
        generated_by = dictionary.get('generatedBy')
        thumbprint = dictionary.get('thumbprint')

        # Return an object of this model
        return cls(display_name,
                   generated_by,
                   thumbprint)