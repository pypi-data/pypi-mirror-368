{"version":3,"file":"AbstraButton.vue_vue_type_script_setup_true_lang-D-iosY4j.js","sources":["../../src/components/AbstraButton.vue"],"sourcesContent":["<template>\n  <AntTooltip v-if=\"renderedTooltip\" :title=\"renderedTooltip\">\n    <AntButton v-bind=\"$props\">\n      <AntFlex style=\"display: flex; align-items: center; justify-content: center; gap: 5px\">\n        <slot v-if=\"!loading\" />\n      </AntFlex>\n    </AntButton>\n  </AntTooltip>\n  <AntButton v-else v-bind=\"$props\">\n    <AntFlex style=\"display: flex; align-items: center; justify-content: center; gap: 5px\">\n      <slot v-if=\"!loading\" />\n    </AntFlex>\n  </AntButton>\n</template>\n<script lang=\"ts\" setup>\nimport {\n  Button as AntButton,\n  Flex as AntFlex,\n  Tooltip as AntTooltip,\n  ButtonProps,\n} from 'ant-design-vue';\nimport { computed } from 'vue';\n\ntype Props = {\n  disabledTooltip?: string;\n  tooltip?: string;\n} & ButtonProps;\n\nconst renderedTooltip = computed(() => {\n  if (props.disabledTooltip && props.disabled) {\n    return props.disabledTooltip;\n  }\n  return props.tooltip;\n});\n\nconst props = defineProps<Props>();\n</script>\n"],"names":["renderedTooltip","computed","props"],"mappings":"qzBA4BMA,EAAkBC,EAAS,IAC3BC,EAAM,iBAAmBA,EAAM,SAC1BA,EAAM,gBAERA,EAAM,OACd"}