{"version":3,"file":"ant-design-12Ybi1Rk.js","sources":["../../src/utils/ant-design.ts"],"sourcesContent":["import { Modal } from 'ant-design-vue';\nimport { DataNode } from 'ant-design-vue/es/tree';\nimport { isArray, isNull, isObject, isString, isUndefined } from 'lodash';\n\nfunction treeTitle(data: unknown): string {\n  if (isArray(data)) {\n    if (data.length === 0) {\n      return '[ ]';\n    } else {\n      return '[ ... ]';\n    }\n  } else if (isObject(data)) {\n    if (Object.keys(data).length === 0) {\n      return '{ }';\n    } else {\n      return '{ ... }';\n    }\n  } else if (isString(data)) {\n    return `'${data}'`;\n  } else if (isUndefined(data) || isNull(data)) {\n    return `None`;\n  } else if (data === true) {\n    return `True`;\n  } else if (data === false) {\n    return `False`;\n  } else {\n    return `${data}`;\n  }\n}\n\nfunction treeKey(data: unknown): string {\n  if (isArray(data)) {\n    return 'array';\n  } else if (isObject(data)) {\n    return 'object';\n  } else {\n    throw new Error('treeKey called with non-object and non-array');\n  }\n}\n\nexport function treeData(data: unknown, parentKeys: string[] = [], prefix?: string): DataNode[] {\n  const title = prefix ? `'${prefix}': ${treeTitle(data)}` : treeTitle(data);\n  if (isArray(data)) {\n    const key = treeKey(data);\n    return [\n      {\n        title,\n        key: [...parentKeys, key].join('/'),\n        children: data.flatMap((v, i) => {\n          return treeData(v, [...parentKeys, key, `${i}`]);\n        }),\n      },\n    ];\n  } else if (isObject(data)) {\n    const key = treeKey(data);\n    return [\n      {\n        title,\n        key: [...parentKeys, key].join('/'),\n        children: Object.entries(data).flatMap(([k, v]) => {\n          return treeData(v, [...parentKeys, key, k], k);\n        }),\n      },\n    ];\n  } else {\n    return [\n      {\n        title,\n        key: parentKeys.join('/'),\n        children: [],\n      },\n    ];\n  }\n}\n\nexport function askForConfirmation(\n  msg: string,\n  options?: { okText: string; cancelText: string },\n): Promise<boolean> {\n  return new Promise((resolve) => {\n    Modal.confirm({\n      title: msg,\n      onOk: () => resolve(true),\n      okText: options?.okText,\n      onCancel: () => resolve(false),\n      cancelText: options?.cancelText,\n    });\n  });\n}\n"],"names":["treeTitle","data","isArray","isObject","isString","isUndefined","isNull","treeKey","treeData","parentKeys","prefix","title","key","v","i","k","askForConfirmation","msg","options","resolve","Modal"],"mappings":"+WAIA,SAASA,EAAUC,EAAuB,CACxC,OAAIC,EAAAA,QAAQD,CAAI,EACVA,EAAK,SAAW,EACX,MAEA,UAEAE,WAASF,CAAI,EAClB,OAAO,KAAKA,CAAI,EAAE,SAAW,EACxB,MAEA,UAEAG,WAASH,CAAI,EACf,IAAIA,CAAI,IACNI,EAAAA,YAAYJ,CAAI,GAAKK,EAAAA,OAAOL,CAAI,EAClC,OACEA,IAAS,GACX,OACEA,IAAS,GACX,QAEA,GAAGA,CAAI,EAElB,CAEA,SAASM,EAAQN,EAAuB,CACtC,GAAIC,EAAAA,QAAQD,CAAI,EACd,MAAO,QACT,GAAWE,WAASF,CAAI,EACtB,MAAO,SAEP,MAAM,IAAI,MAAM,8CAA8C,CAElE,CAEO,SAASO,EAASP,EAAeQ,EAAuB,CAAA,EAAIC,EAA6B,CAC9F,MAAMC,EAAQD,EAAS,IAAIA,CAAM,MAAMV,EAAUC,CAAI,CAAC,GAAKD,EAAUC,CAAI,EACzE,GAAIC,EAAAA,QAAQD,CAAI,EAAG,CACjB,MAAMW,EAAML,EAAQN,CAAI,EACxB,MAAO,CACL,CACE,MAAAU,EACA,IAAK,CAAC,GAAGF,EAAYG,CAAG,EAAE,KAAK,GAAG,EAClC,SAAUX,EAAK,QAAQ,CAACY,EAAGC,IAClBN,EAASK,EAAG,CAAC,GAAGJ,EAAYG,EAAK,GAAGE,CAAC,EAAE,CAAC,CAChD,CAAA,CACH,CAEJ,SAAWX,WAASF,CAAI,EAAG,CACzB,MAAMW,EAAML,EAAQN,CAAI,EACxB,MAAO,CACL,CACE,MAAAU,EACA,IAAK,CAAC,GAAGF,EAAYG,CAAG,EAAE,KAAK,GAAG,EAClC,SAAU,OAAO,QAAQX,CAAI,EAAE,QAAQ,CAAC,CAACc,EAAGF,CAAC,IACpCL,EAASK,EAAG,CAAC,GAAGJ,EAAYG,EAAKG,CAAC,EAAGA,CAAC,CAC9C,CAAA,CACH,CAEJ,KACE,OAAO,CACL,CACE,MAAAJ,EACA,IAAKF,EAAW,KAAK,GAAG,EACxB,SAAU,CAAA,CAAC,CACb,CAGN,CAEO,SAASO,EACdC,EACAC,EACkB,CAClB,OAAO,IAAI,QAASC,GAAY,CAC9BC,EAAM,QAAQ,CACZ,MAAOH,EACP,KAAM,IAAME,EAAQ,EAAI,EACxB,OAAQD,GAAS,OACjB,SAAU,IAAMC,EAAQ,EAAK,EAC7B,WAAYD,GAAS,UAAA,CACtB,CACH,CAAC,CACH"}