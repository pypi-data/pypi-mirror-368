{"version":3,"file":"Navbar-xNoiYIje.js","sources":["../../src/apps/console/components/workspace/LoginBlock.vue","../../src/apps/console/components/workspace/Navbar.vue"],"sourcesContent":["<template>\n  <AntSpin v-if=\"loading\" />\n  <div v-else-if=\"logged\" style=\"display: flex; align-items: center; gap: 16px\">\n    <AbstraButton class=\"intercom-launcher\" target=\"_blank\" type=\"link\" size=\"small\">\n      <PhChats /> Support\n    </AbstraButton>\n    <AntPopover placement=\"bottomRight\">\n      <template #content>\n        <div style=\"display: flex; flex-direction: column; gap: 10px\">\n          <AntText size=\"small\" type=\"secondary\">\n            {{ logged.claims.email }}\n          </AntText>\n          <AntButton type=\"text\" @click=\"logout\">\n            <div style=\"display: flex; gap: 5px\">\n              <PhSignOut size=\"20\" />\n              Logout\n            </div>\n          </AntButton>\n        </div>\n      </template>\n      <AntSpace align=\"center\" style=\"cursor: pointer\">\n        <AntAvatar shape=\"square\">{{ initials(logged.claims.email) }}</AntAvatar>\n      </AntSpace>\n    </AntPopover>\n  </div>\n  <AntButton v-else>\n    <RouterLink to=\"/login\">Login</RouterLink>\n  </AntButton>\n</template>\n\n<script lang=\"ts\" setup>\nimport AbstraButton from '@/components/AbstraButton.vue';\nimport { asyncComputed } from '@/utils/asyncComputed';\nimport { PhSignOut } from '@phosphor-icons/vue';\nimport { kebabCase } from 'lodash';\nimport { useRouter } from 'vue-router';\nimport { Comms } from '../../apis/intercom';\nimport { authorManager } from '../../authn/authorManager';\n\nimport { PhChats } from '@phosphor-icons/vue';\n\nimport {\n  Avatar as AntAvatar,\n  Button as AntButton,\n  Popover as AntPopover,\n  Space as AntSpace,\n  Spin as AntSpin,\n  TypographyText as AntText,\n} from 'ant-design-vue';\n\nfunction initials(email: string) {\n  const username = email.split('@')[0];\n  return kebabCase(username)\n    .toUpperCase()\n    .split('-')\n    .slice(0, 2)\n    .map((part) => part[0])\n    .join('');\n}\n\nconst router = useRouter();\n\nconst { result: logged, loading, refetch } = asyncComputed(async () => authorManager.getAuthor());\n\nasync function logout() {\n  await authorManager.logout();\n  Comms.shutdown();\n\n  refetch();\n  router.push({ name: 'login' });\n}\n</script>\n","<template>\n  <AntPageHeader style=\"padding: 5px 25px; border: 1px solid #f0f0f0\">\n    <template #subTitle>\n      <AntBreadcrumb v-if=\"breadcrumb\">\n        <AntBreadcrumbItem v-for=\"(item, index) in breadcrumb\" :key=\"index\">\n          <RouterLink :to=\"item.path\">\n            {{ item.label }}\n          </RouterLink>\n        </AntBreadcrumbItem>\n      </AntBreadcrumb>\n    </template>\n    <template #extra>\n      <div class=\"extra\">\n        <AbstraButton v-if=\"showAiSparkles\" type=\"link\" @click=\"omniChatStore.toggle()\">\n          <PhSparkle /> AI Assistant\n        </AbstraButton>\n        <AbstraButton :href=\"ABSTRA_URLS.DOCS\" target=\"_blank\" type=\"link\">\n          <PhBookBookmark /> Docs\n        </AbstraButton>\n        <LoginBlock />\n      </div>\n    </template>\n  </AntPageHeader>\n</template>\n<script lang=\"ts\" setup>\nimport AbstraButton from '@/components/AbstraButton.vue';\nimport { ABSTRA_URLS } from '@/utils/constants';\nimport { RouterLink } from 'vue-router';\nimport LoginBlock from './LoginBlock.vue';\n\nimport {\n  Breadcrumb as AntBreadcrumb,\n  BreadcrumbItem as AntBreadcrumbItem,\n  PageHeader as AntPageHeader,\n} from 'ant-design-vue';\n\nimport { useOmniChatStore } from '@/services/ai/omniChatStore';\nimport { PhBookBookmark, PhSparkle } from '@phosphor-icons/vue';\n\ndefineProps<{\n  breadcrumb?: { label: string; path: string }[];\n  showAiSparkles?: boolean;\n}>();\n\nconst omniChatStore = useOmniChatStore();\n</script>\n\n<style lang=\"scss\" scoped>\n.extra {\n  display: flex;\n  align-items: center;\n  height: 40px;\n  justify-content: center;\n  gap: 12px;\n}\n</style>\n"],"names":["initials","email","username","kebabCase","part","router","useRouter","logged","loading","refetch","asyncComputed","authorManager","logout","Comms","omniChatStore","useOmniChatStore"],"mappings":"uyCAkDA,SAASA,EAASC,EAAe,CAC/B,MAAMC,EAAWD,EAAM,MAAM,GAAG,EAAE,CAAC,EACnC,OAAOE,EAAAA,UAAUD,CAAQ,EACtB,YAAA,EACA,MAAM,GAAG,EACT,MAAM,EAAG,CAAC,EACV,IAAKE,GAASA,EAAK,CAAC,CAAC,EACrB,KAAK,EAAE,CACZ,CAEA,MAAMC,EAASC,EAAA,EAET,CAAE,OAAQC,EAAQ,QAAAC,EAAS,QAAAC,CAAA,EAAYC,EAAc,SAAYC,EAAc,WAAW,EAEhG,eAAeC,GAAS,CACtB,MAAMD,EAAc,OAAA,EACpBE,EAAM,SAAA,EAENJ,EAAA,EACAJ,EAAO,KAAK,CAAE,KAAM,OAAA,CAAS,CAC/B,+0BC1BA,MAAMS,EAAgBC,EAAA"}