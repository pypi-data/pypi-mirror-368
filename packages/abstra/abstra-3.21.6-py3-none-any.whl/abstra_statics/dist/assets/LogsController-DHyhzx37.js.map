{"version":3,"file":"LogsController-DHyhzx37.js","sources":["../../node_modules/@phosphor-icons/vue/dist/icons/PhRobot.vue.mjs","../../src/services/logs/ExecutionContext.vue","../../src/services/logs/LogsController.ts"],"sourcesContent":["import { defineComponent as V, inject as h, computed as n, openBlock as t, createElementBlock as a, mergeProps as A, renderSlot as u, createCommentVNode as p, createElementVNode as e } from \"vue\";\nconst v = [\"width\", \"height\", \"fill\", \"transform\"], g = { key: 0 }, M = /* @__PURE__ */ e(\"path\", { d: \"M72,104a16,16,0,1,1,16,16A16,16,0,0,1,72,104Zm96,16a16,16,0,1,0-16-16A16,16,0,0,0,168,120Zm68-40V192a36,36,0,0,1-36,36H56a36,36,0,0,1-36-36V80A36,36,0,0,1,56,44h60V16a12,12,0,0,1,24,0V44h60A36,36,0,0,1,236,80Zm-24,0a12,12,0,0,0-12-12H56A12,12,0,0,0,44,80V192a12,12,0,0,0,12,12H200a12,12,0,0,0,12-12Zm-12,82a30,30,0,0,1-30,30H86a30,30,0,0,1,0-60h84A30,30,0,0,1,200,162Zm-80-6v12h16V156ZM86,168H96V156H86a6,6,0,0,0,0,12Zm90-6a6,6,0,0,0-6-6H160v12h10A6,6,0,0,0,176,162Z\" }, null, -1), y = [\n  M\n], f = { key: 1 }, w = /* @__PURE__ */ e(\"path\", {\n  d: \"M200,56H56A24,24,0,0,0,32,80V192a24,24,0,0,0,24,24H200a24,24,0,0,0,24-24V80A24,24,0,0,0,200,56ZM164,184H92a20,20,0,0,1,0-40h72a20,20,0,0,1,0,40Z\",\n  opacity: \"0.2\"\n}, null, -1), k = /* @__PURE__ */ e(\"path\", { d: \"M200,48H136V16a8,8,0,0,0-16,0V48H56A32,32,0,0,0,24,80V192a32,32,0,0,0,32,32H200a32,32,0,0,0,32-32V80A32,32,0,0,0,200,48Zm16,144a16,16,0,0,1-16,16H56a16,16,0,0,1-16-16V80A16,16,0,0,1,56,64H200a16,16,0,0,1,16,16ZM72,108a12,12,0,1,1,12,12A12,12,0,0,1,72,108Zm88,0a12,12,0,1,1,12,12A12,12,0,0,1,160,108Zm4,28H92a28,28,0,0,0,0,56h72a28,28,0,0,0,0-56Zm-24,16v24H116V152ZM80,164a12,12,0,0,1,12-12h8v24H92A12,12,0,0,1,80,164Zm84,12h-8V152h8a12,12,0,0,1,0,24Z\" }, null, -1), x = [\n  w,\n  k\n], S = { key: 2 }, z = /* @__PURE__ */ e(\"path\", { d: \"M200,48H136V16a8,8,0,0,0-16,0V48H56A32,32,0,0,0,24,80V192a32,32,0,0,0,32,32H200a32,32,0,0,0,32-32V80A32,32,0,0,0,200,48ZM172,96a12,12,0,1,1-12,12A12,12,0,0,1,172,96ZM96,184H80a16,16,0,0,1,0-32H96ZM84,120a12,12,0,1,1,12-12A12,12,0,0,1,84,120Zm60,64H112V152h32Zm32,0H160V152h16a16,16,0,0,1,0,32Z\" }, null, -1), C = [\n  z\n], B = { key: 3 }, b = /* @__PURE__ */ e(\"path\", { d: \"M200,50H134V16a6,6,0,0,0-12,0V50H56A30,30,0,0,0,26,80V192a30,30,0,0,0,30,30H200a30,30,0,0,0,30-30V80A30,30,0,0,0,200,50Zm18,142a18,18,0,0,1-18,18H56a18,18,0,0,1-18-18V80A18,18,0,0,1,56,62H200a18,18,0,0,1,18,18ZM74,108a10,10,0,1,1,10,10A10,10,0,0,1,74,108Zm88,0a10,10,0,1,1,10,10A10,10,0,0,1,162,108Zm2,30H92a26,26,0,0,0,0,52h72a26,26,0,0,0,0-52Zm-22,12v28H114V150ZM78,164a14,14,0,0,1,14-14h10v28H92A14,14,0,0,1,78,164Zm86,14H154V150h10a14,14,0,0,1,0,28Z\" }, null, -1), N = [\n  b\n], E = { key: 4 }, P = /* @__PURE__ */ e(\"path\", { d: \"M200,48H136V16a8,8,0,0,0-16,0V48H56A32,32,0,0,0,24,80V192a32,32,0,0,0,32,32H200a32,32,0,0,0,32-32V80A32,32,0,0,0,200,48Zm16,144a16,16,0,0,1-16,16H56a16,16,0,0,1-16-16V80A16,16,0,0,1,56,64H200a16,16,0,0,1,16,16Zm-52-56H92a28,28,0,0,0,0,56h72a28,28,0,0,0,0-56Zm-24,16v24H116V152ZM80,164a12,12,0,0,1,12-12h8v24H92A12,12,0,0,1,80,164Zm84,12h-8V152h8a12,12,0,0,1,0,24ZM72,108a12,12,0,1,1,12,12A12,12,0,0,1,72,108Zm88,0a12,12,0,1,1,12,12A12,12,0,0,1,160,108Z\" }, null, -1), W = [\n  P\n], $ = { key: 5 }, j = /* @__PURE__ */ e(\"path\", { d: \"M200,52H132V16a4,4,0,0,0-8,0V52H56A28,28,0,0,0,28,80V192a28,28,0,0,0,28,28H200a28,28,0,0,0,28-28V80A28,28,0,0,0,200,52Zm20,140a20,20,0,0,1-20,20H56a20,20,0,0,1-20-20V80A20,20,0,0,1,56,60H200a20,20,0,0,1,20,20ZM76,108a8,8,0,1,1,8,8A8,8,0,0,1,76,108Zm88,0a8,8,0,1,1,8,8A8,8,0,0,1,164,108Zm0,32H92a24,24,0,0,0,0,48h72a24,24,0,0,0,0-48Zm-20,8v32H112V148ZM76,164a16,16,0,0,1,16-16h12v32H92A16,16,0,0,1,76,164Zm88,16H152V148h12a16,16,0,0,1,0,32Z\" }, null, -1), R = [\n  j\n], q = {\n  name: \"PhRobot\"\n}, G = /* @__PURE__ */ V({\n  ...q,\n  props: {\n    weight: {\n      type: String\n    },\n    size: {\n      type: [String, Number]\n    },\n    color: {\n      type: String\n    },\n    mirrored: {\n      type: Boolean\n    }\n  },\n  setup(r) {\n    const s = r, d = h(\"weight\", \"regular\"), c = h(\"size\", \"1em\"), H = h(\"color\", \"currentColor\"), m = h(\"mirrored\", !1), o = n(() => s.weight ?? d), i = n(() => s.size ?? c), Z = n(() => s.color ?? H), _ = n(() => s.mirrored !== void 0 ? s.mirrored ? \"scale(-1, 1)\" : void 0 : m ? \"scale(-1, 1)\" : void 0);\n    return (l, D) => (t(), a(\"svg\", A({\n      xmlns: \"http://www.w3.org/2000/svg\",\n      viewBox: \"0 0 256 256\",\n      width: i.value,\n      height: i.value,\n      fill: Z.value,\n      transform: _.value\n    }, l.$attrs), [\n      u(l.$slots, \"default\"),\n      o.value === \"bold\" ? (t(), a(\"g\", g, y)) : o.value === \"duotone\" ? (t(), a(\"g\", f, x)) : o.value === \"fill\" ? (t(), a(\"g\", S, C)) : o.value === \"light\" ? (t(), a(\"g\", B, N)) : o.value === \"regular\" ? (t(), a(\"g\", E, W)) : o.value === \"thin\" ? (t(), a(\"g\", $, R)) : p(\"\", !0)\n    ], 16, v));\n  }\n});\nexport {\n  G as default\n};\n","<template>\n  <AntCollapse :bordered=\"false\" style=\"background-color: transparent; width: 100%\">\n    <AntCollapsePanel key=\"execution-context\">\n      <template #header>\n        <AntFlex justify=\"space-between\">\n          <AntText>Execution context</AntText>\n          <div v-if=\"failed\" class=\"ask-to-ai\" @click=\"handleAskToAI\">\n            Fix with AI\n            <PhRobot :size=\"16\" />\n          </div>\n        </AntFlex>\n      </template>\n      <AntSpace\n        direction=\"vertical\"\n        style=\"\n          border-radius: 5px;\n          padding: 10px;\n          color: #fff;\n          width: 100%;\n          font-family: monospace;\n          max-height: 600px;\n          overflow: auto;\n          border: 1px solid #e8e8e8;\n        \"\n      >\n        <AntText v-if=\"!Object.keys(data).length\" type=\"secondary\">Empty</AntText>\n        <div\n          v-for=\"[entryKey, entryValue] in Object.entries(data)\"\n          v-else\n          :key=\"entryKey\"\n          class=\"tree\"\n        >\n          <div v-if=\"entryKey !== 'legacyThreadData' || !isEmpty(entryValue)\">\n            <AntText strong>{{ computeKey(entryKey) }}</AntText>\n            <AntTooltip v-if=\"entryKey === 'request'\" title=\"Copy Request Data\">\n              <span\n                style=\"margin-left: 5px; cursor: pointer; color: initial\"\n                @click=\"copyRequestToClipboard(entryValue)\"\n              >\n                <PhCopy />\n              </span>\n            </AntTooltip>\n            <AntTooltip v-if=\"entryKey === 'triggerTask'\" title=\"Copy Payload Data\">\n              <span\n                style=\"margin-left: 5px; cursor: pointer; color: initial\"\n                @click=\"copyPayloadToClipboard(entryValue)\"\n              >\n                <PhCopy />\n              </span>\n            </AntTooltip>\n            <AntTree :tree-data=\"treeData(entryValue)\" :selectable=\"false\" />\n          </div>\n        </div>\n      </AntSpace>\n    </AntCollapsePanel>\n  </AntCollapse>\n</template>\n\n<script lang=\"ts\" setup>\nimport { treeData } from '@/utils/ant-design';\nimport { capitalizeFirstLetter } from '@/utils/string';\nimport { PhCopy, PhRobot } from '@phosphor-icons/vue';\nimport {\n  Collapse as AntCollapse,\n  CollapsePanel as AntCollapsePanel,\n  Space as AntSpace,\n  TypographyText as AntText,\n  Tooltip as AntTooltip,\n  Tree as AntTree,\n  Flex as AntFlex,\n  message,\n} from 'ant-design-vue';\n\ndefineProps<{\n  data: {\n    [key: string]: unknown;\n  };\n  failed: boolean;\n}>();\n\nconst emits = defineEmits<{\n  (e: 'ask-ai'): void;\n}>();\n\nconst computeKey = (key: string) => {\n  if (key === 'legacyThreadData') {\n    return 'Thread data';\n  }\n  const pascalCasedKey = capitalizeFirstLetter(key);\n  pascalCasedKey.replace(/([A-Z])/g, ' $1').trim();\n  return pascalCasedKey;\n};\n\nconst isEmpty = (value: unknown): boolean => {\n  if (value == null) {\n    return true;\n  }\n  if (Array.isArray(value)) {\n    return value.length === 0;\n  }\n  if (typeof value === 'object') {\n    return Object.keys(value as object).length === 0;\n  }\n  return false;\n};\n\nconst copyPayloadToClipboard = (value: unknown) => {\n  if (typeof value === 'object' && value !== null && 'payload' in value) {\n    navigator.clipboard.writeText(JSON.stringify(value.payload));\n    message.success({\n      content: 'Copied to clipboard',\n    });\n  } else {\n    navigator.clipboard.writeText('');\n    message.error({\n      content: 'No payload to copy',\n    });\n  }\n};\n\nconst handleAskToAI = (e: Event) => {\n  e.stopPropagation();\n  emits('ask-ai');\n};\n\nconst copyRequestToClipboard = (value: unknown) => {\n  if (typeof value === 'object') {\n    navigator.clipboard.writeText(JSON.stringify(value));\n    message.success({\n      content: 'Copied to clipboard',\n    });\n  } else {\n    navigator.clipboard.writeText('');\n    message.error({\n      content: 'Failed to copy request',\n    });\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/styles/colors.scss';\n.tree {\n  :deep() {\n    .ant-tree-node-content-wrapper {\n      user-select: auto;\n    }\n  }\n}\n\n.ask-to-ai {\n  display: flex;\n  gap: 6px;\n  align-items: center;\n  cursor: pointer;\n  color: #d14056;\n}\n</style>\n","import dayjs from 'dayjs';\nimport { reactive, watch } from 'vue';\n\nimport { BuildRepository, BuildSpec } from '@/apps/console/apis/cloud';\nimport {\n  Execution,\n  ExecutionLogs,\n  ExecutionRepository,\n  ExecutionStatusType,\n  executionStatuses,\n} from '@/models/executions';\nimport { usePolling } from '@/utils/polling';\nimport { capitalizeFirstLetter } from '@/utils/string';\nimport { debounce } from 'lodash';\nimport { TaskDTO } from '../tasks/tasksController';\n\nexport type FiltersState = {\n  dateRange: [dayjs.Dayjs, dayjs.Dayjs] | undefined;\n  buildId: string | undefined;\n  stageId: string | undefined;\n  status: ExecutionStatusType | undefined;\n  search: string | undefined;\n};\n\ntype FilterOptionsState = {\n  builds: { label: string; value: string }[];\n  stages: { label: string; value: string }[];\n  statuses: { label: string; value: ExecutionStatusType }[];\n};\n\ntype PaginationState = {\n  currentIndex: number;\n  pageSize: number;\n  totalCount: number;\n};\n\ntype PartialTaskDTO = {\n  type: TaskDTO['type'];\n  payload: TaskDTO['payload'];\n};\n\nexport type ContextTasks = {\n  triggerTask: PartialTaskDTO | null;\n  sentTasks: PartialTaskDTO[];\n};\n\ntype CurrentPageState = {\n  openedExecutionIds: string[];\n  loadingExecutions: boolean;\n  waitingDebounce: boolean;\n  executions: Execution[];\n  executionData: {\n    [key: string]: {\n      logs: ExecutionLogs;\n      threadData: Record<string, unknown>;\n      tasks: ContextTasks;\n    };\n  };\n};\n\ntype State = {\n  currentPage: CurrentPageState;\n  pagination: PaginationState;\n  filters: FiltersState;\n  filterOptions: FilterOptionsState;\n};\n\nexport class LogsController {\n  state: State;\n  polling = usePolling({\n    task: () => this.refetch(),\n    interval: 10000,\n  });\n\n  constructor(\n    private executionRepository: ExecutionRepository,\n    private buildRepository: BuildRepository | null,\n    private projectId: string,\n    filters: Partial<FiltersState>,\n    pagination: Partial<PaginationState>,\n    openedExecutionId?: string,\n    private onFilterChange?: (filters: FiltersState) => void,\n  ) {\n    this.state = reactive({\n      currentPage: {\n        openedExecutionIds: openedExecutionId ? [openedExecutionId] : [],\n        loadingExecutions: false,\n        waitingDebounce: false,\n        executions: [],\n        executionData: {},\n      },\n      pagination: {\n        currentIndex: 1,\n        pageSize: 10,\n        totalCount: 0,\n        ...pagination,\n      },\n      filters: {\n        dateRange: undefined,\n        buildId: undefined,\n        stageId: undefined,\n        status: undefined,\n        search: undefined,\n        ...filters,\n      },\n      filterOptions: {\n        builds: [],\n        stages: [],\n        statuses: executionStatuses.map((status) => ({\n          label: capitalizeFirstLetter(status),\n          value: status,\n        })),\n      },\n    });\n\n    watch(\n      () => this.state.filters.buildId,\n      () => {\n        this.fetchStageOptions();\n      },\n    );\n\n    watch(this.state.filters, () => {\n      this.state.currentPage.openedExecutionIds = [];\n      this.handleFilterChange();\n    });\n\n    watch(this.state.pagination, () => {\n      this.state.currentPage.openedExecutionIds = [];\n      this.fetchPage();\n    });\n  }\n\n  async init() {\n    await Promise.all([this.fetchPage(), this.fetchOptions()]);\n    this.fetchEmptyLogs();\n    this.polling.startPolling();\n  }\n\n  teardown() {\n    this.polling.endPolling();\n  }\n\n  async getNewestExecutionId(stageId: string | null) {\n    let currentExecutions = this.state.currentPage.executions;\n    if (stageId) {\n      currentExecutions = currentExecutions.filter((execution) => execution.stageId === stageId);\n    }\n    if (currentExecutions.length === 0) return null;\n    const newestExecution = currentExecutions.reduce((prev, current) =>\n      prev.createdAt > current.createdAt ? prev : current,\n    );\n    return newestExecution.id;\n  }\n\n  handleFilterChange = () => {\n    this.state.currentPage.waitingDebounce = true;\n    this.state.pagination.currentIndex = 1;\n    this.debouncedPageRefetch();\n    if (this.onFilterChange) {\n      this.onFilterChange(this.state.filters);\n    }\n  };\n\n  debouncedPageRefetch = debounce(async () => {\n    await this.fetchPage();\n    this.state.currentPage.waitingDebounce = false;\n  }, 500);\n\n  async fetchPage() {\n    this.state.currentPage.loadingExecutions = true;\n\n    const { executions, totalCount } = await this.executionRepository.list({\n      projectId: this.projectId,\n      buildId: this.state.filters.buildId,\n      status: this.state.filters.status as ExecutionStatusType,\n      limit: this.state.pagination.pageSize,\n      offset: (this.state.pagination.currentIndex - 1) * this.state.pagination.pageSize,\n      stageId: this.state.filters.stageId,\n      startDate: this.state.filters.dateRange?.[0]?.toISOString(),\n      endDate: this.state.filters.dateRange?.[1]?.toISOString(),\n      search: this.state.filters.search,\n    });\n\n    this.state.currentPage.loadingExecutions = false;\n    this.state.currentPage.executions = executions;\n    this.state.pagination.totalCount = totalCount;\n  }\n\n  async fetchBuildOptions() {\n    if (!this.buildRepository) return;\n    const builds = await this.buildRepository.list(this.projectId);\n\n    const buildOptions = builds.map((build) => ({\n      label: `[${build.id.slice(0, 8)}] ${build.createdAt.toLocaleString()} ${\n        build.latest ? '(Latest)' : ''\n      }`,\n      value: build.id,\n    }));\n\n    this.state.filterOptions.builds = buildOptions;\n  }\n\n  async fetchStageOptions() {\n    // Still uses the old BuildSpec.get() method as there is business logic in the method\n    // (should be moved to backend)\n    if (!this.buildRepository) {\n      const stages = await this.executionRepository.fetchStages();\n      const stageOptions = stages.map((stage) => ({\n        label: stage.title,\n        value: stage.id,\n      }));\n      this.state.filterOptions.stages = stageOptions ?? [];\n      return;\n    }\n\n    const build = await BuildSpec.get(\n      this.state.filters.buildId ?? this.state.filterOptions.builds[0].value,\n    );\n\n    const stageOptions = build?.runtimes.map((stage) => ({\n      label: stage.title,\n      value: stage.id,\n    }));\n\n    this.state.filterOptions.stages = stageOptions ?? [];\n  }\n\n  async fetchOptions() {\n    await this.fetchBuildOptions();\n    await this.fetchStageOptions();\n  }\n\n  async fetchExecutionDetails(executionId: string) {\n    const [logs, threadData, tasks] = await Promise.all([\n      this.executionRepository.fetchLogs(this.projectId, executionId),\n      this.executionRepository.fetchThreadData(this.projectId, executionId),\n      this.executionRepository.getExecutionTasks(this.projectId, executionId),\n    ]);\n\n    this.state.currentPage.executionData[executionId] = {\n      logs,\n      threadData,\n      tasks: {\n        triggerTask: tasks.triggerTask\n          ? { type: tasks.triggerTask.type, payload: tasks.triggerTask.payload }\n          : null,\n        sentTasks: tasks.sentTasks.map((task) => ({ type: task.type, payload: task.payload })),\n      },\n    };\n  }\n\n  fetchEmptyLogs = () => {\n    this.state.currentPage.openedExecutionIds.forEach(async (executionId) => {\n      if (!this.state.currentPage.executionData[executionId]) {\n        await this.fetchExecutionDetails(executionId);\n      }\n    });\n  };\n\n  async refetch() {\n    this.state.currentPage.openedExecutionIds.map((executionId) =>\n      this.fetchExecutionDetails(executionId),\n    );\n  }\n}\n"],"names":["v","g","M","e","y","f","w","k","x","S","z","C","B","b","N","E","P","W","$","j","R","q","G","V","r","s","d","h","c","H","m","o","n","i","Z","_","l","D","t","a","A","u","p","computeKey","key","pascalCasedKey","capitalizeFirstLetter","isEmpty","value","copyPayloadToClipboard","message","handleAskToAI","emits","copyRequestToClipboard","LogsController","executionRepository","buildRepository","projectId","filters","pagination","openedExecutionId","onFilterChange","reactive","executionStatuses","status","watch","usePolling","stageId","currentExecutions","execution","prev","current","debounce","executions","totalCount","buildOptions","build","stageOptions","stage","BuildSpec","executionId","logs","threadData","tasks","task"],"mappings":"q5BACA,MAAMA,EAAI,CAAC,QAAS,SAAU,OAAQ,WAAW,EAAGC,EAAI,CAAE,IAAK,CAAC,EAAIC,EAAoBC,EAAE,OAAQ,CAAE,EAAG,odAAod,EAAI,KAAM,EAAE,EAAGC,EAAI,CAC5kBF,CACF,EAAGG,EAAI,CAAE,IAAK,CAAC,EAAIC,EAAoBH,EAAE,OAAQ,CAC/C,EAAG,mJACH,QAAS,KACX,EAAG,KAAM,EAAE,EAAGI,GAAoBJ,EAAE,OAAQ,CAAE,EAAG,ocAAoc,EAAI,KAAM,EAAE,EAAGK,GAAI,CACtgBF,EACAC,EACF,EAAGE,GAAI,CAAE,IAAK,CAAC,EAAIC,GAAoBP,EAAE,OAAQ,CAAE,EAAG,uSAAuS,EAAI,KAAM,EAAE,EAAGQ,GAAI,CAC9WD,EACF,EAAGE,GAAI,CAAE,IAAK,CAAC,EAAIC,GAAoBV,EAAE,OAAQ,CAAE,EAAG,ucAAuc,EAAI,KAAM,EAAE,EAAGW,GAAI,CAC9gBD,EACF,EAAGE,GAAI,CAAE,IAAK,CAAC,EAAIC,GAAoBb,EAAE,OAAQ,CAAE,EAAG,scAAsc,EAAI,KAAM,EAAE,EAAGc,GAAI,CAC7gBD,EACF,EAAGE,GAAI,CAAE,IAAK,CAAC,EAAIC,GAAoBhB,EAAE,OAAQ,CAAE,EAAG,ybAAyb,EAAI,KAAM,EAAE,EAAGiB,GAAI,CAChgBD,EACF,EAAGE,GAAI,CACL,KAAM,SACR,EAAGC,GAAoBC,EAAE,CACvB,GAAGF,GACH,MAAO,CACL,OAAQ,CACN,KAAM,MACZ,EACI,KAAM,CACJ,KAAM,CAAC,OAAQ,MAAM,CAC3B,EACI,MAAO,CACL,KAAM,MACZ,EACI,SAAU,CACR,KAAM,OACZ,CACA,EACE,MAAMG,EAAG,CACP,MAAMC,EAAID,EAAGE,EAAIC,EAAE,SAAU,SAAS,EAAGC,EAAID,EAAE,OAAQ,KAAK,EAAGE,EAAIF,EAAE,QAAS,cAAc,EAAGG,EAAIH,EAAE,WAAY,EAAE,EAAGI,EAAIC,EAAE,IAAMP,EAAE,QAAUC,CAAC,EAAGO,EAAID,EAAE,IAAMP,EAAE,MAAQG,CAAC,EAAGM,EAAIF,EAAE,IAAMP,EAAE,OAASI,CAAC,EAAGM,EAAIH,EAAE,IAAMP,EAAE,WAAa,OAASA,EAAE,SAAW,eAAiB,OAASK,EAAI,eAAiB,MAAM,EAC7S,MAAO,CAACM,EAAGC,KAAOC,EAAC,EAAIC,EAAE,MAAOC,EAAE,CAChC,MAAO,6BACP,QAAS,cACT,MAAOP,EAAE,MACT,OAAQA,EAAE,MACV,KAAMC,EAAE,MACR,UAAWC,EAAE,KACnB,EAAOC,EAAE,MAAM,EAAG,CACZK,EAAEL,EAAE,OAAQ,SAAS,EACrBL,EAAE,QAAU,QAAUO,EAAC,EAAIC,EAAE,IAAKtC,EAAGG,CAAC,GAAK2B,EAAE,QAAU,WAAaO,EAAC,EAAIC,EAAE,IAAKlC,EAAGG,EAAC,GAAKuB,EAAE,QAAU,QAAUO,EAAC,EAAIC,EAAE,IAAK9B,GAAGE,EAAC,GAAKoB,EAAE,QAAU,SAAWO,EAAC,EAAIC,EAAE,IAAK3B,GAAGE,EAAC,GAAKiB,EAAE,QAAU,WAAaO,EAAC,EAAIC,EAAE,IAAKxB,GAAGE,EAAC,GAAKc,EAAE,QAAU,QAAUO,EAAC,EAAIC,EAAE,IAAKrB,GAAGE,EAAC,GAAKsB,EAAE,GAAI,EAAE,CACvR,EAAO,GAAI1C,CAAC,EACV,CACF,CAAC,8tBCmCD,MAAM2C,EAAcC,GAAgB,CAClC,GAAIA,IAAQ,mBACV,MAAO,cAET,MAAMC,EAAiBC,EAAsBF,CAAG,EAChD,OAAAC,EAAe,QAAQ,WAAY,KAAK,EAAE,KAAA,EACnCA,CACT,EAEME,EAAWC,GACXA,GAAS,KACJ,GAEL,MAAM,QAAQA,CAAK,EACdA,EAAM,SAAW,EAEtB,OAAOA,GAAU,SACZ,OAAO,KAAKA,CAAe,EAAE,SAAW,EAE1C,GAGHC,EAA0BD,GAAmB,CAC7C,OAAOA,GAAU,UAAYA,IAAU,MAAQ,YAAaA,GAC9D,UAAU,UAAU,UAAU,KAAK,UAAUA,EAAM,OAAO,CAAC,EAC3DE,EAAQ,QAAQ,CACd,QAAS,qBAAA,CACV,IAED,UAAU,UAAU,UAAU,EAAE,EAChCA,EAAQ,MAAM,CACZ,QAAS,oBAAA,CACV,EAEL,EAEMC,EAAiB,GAAa,CAClC,EAAE,gBAAA,EACFC,EAAM,QAAQ,CAChB,EAEMC,EAA0BL,GAAmB,CAC7C,OAAOA,GAAU,UACnB,UAAU,UAAU,UAAU,KAAK,UAAUA,CAAK,CAAC,EACnDE,EAAQ,QAAQ,CACd,QAAS,qBAAA,CACV,IAED,UAAU,UAAU,UAAU,EAAE,EAChCA,EAAQ,MAAM,CACZ,QAAS,wBAAA,CACV,EAEL,g8CCtEO,MAAMI,EAAe,CAO1B,YACUC,EACAC,EACAC,EACRC,EACAC,EACAC,EACQC,EACR,CAPQ,KAAA,oBAAAN,EACA,KAAA,gBAAAC,EACA,KAAA,UAAAC,EAIA,KAAA,eAAAI,EAER,KAAK,MAAQC,EAAS,CACpB,YAAa,CACX,mBAAoBF,EAAoB,CAACA,CAAiB,EAAI,CAAA,EAC9D,kBAAmB,GACnB,gBAAiB,GACjB,WAAY,CAAA,EACZ,cAAe,CAAA,CAAC,EAElB,WAAY,CACV,aAAc,EACd,SAAU,GACV,WAAY,EACZ,GAAGD,CAAA,EAEL,QAAS,CACP,UAAW,OACX,QAAS,OACT,QAAS,OACT,OAAQ,OACR,OAAQ,OACR,GAAGD,CAAA,EAEL,cAAe,CACb,OAAQ,CAAA,EACR,OAAQ,CAAA,EACR,SAAUK,EAAkB,IAAKC,IAAY,CAC3C,MAAOlB,EAAsBkB,CAAM,EACnC,MAAOA,CAAA,EACP,CAAA,CACJ,CACD,EAEDC,EACE,IAAM,KAAK,MAAM,QAAQ,QACzB,IAAM,CACJ,KAAK,kBAAA,CACP,CAAA,EAGFA,EAAM,KAAK,MAAM,QAAS,IAAM,CAC9B,KAAK,MAAM,YAAY,mBAAqB,CAAA,EAC5C,KAAK,mBAAA,CACP,CAAC,EAEDA,EAAM,KAAK,MAAM,WAAY,IAAM,CACjC,KAAK,MAAM,YAAY,mBAAqB,CAAA,EAC5C,KAAK,UAAA,CACP,CAAC,CACH,CA/DA,MACA,QAAUC,EAAW,CACnB,KAAM,IAAM,KAAK,QAAA,EACjB,SAAU,GAAA,CACX,EA6DD,MAAM,MAAO,CACX,MAAM,QAAQ,IAAI,CAAC,KAAK,YAAa,KAAK,aAAA,CAAc,CAAC,EACzD,KAAK,eAAA,EACL,KAAK,QAAQ,aAAA,CACf,CAEA,UAAW,CACT,KAAK,QAAQ,WAAA,CACf,CAEA,MAAM,qBAAqBC,EAAwB,CACjD,IAAIC,EAAoB,KAAK,MAAM,YAAY,WAI/C,OAHID,IACFC,EAAoBA,EAAkB,OAAQC,GAAcA,EAAU,UAAYF,CAAO,GAEvFC,EAAkB,SAAW,EAAU,KACnBA,EAAkB,OAAO,CAACE,EAAMC,IACtDD,EAAK,UAAYC,EAAQ,UAAYD,EAAOC,CAAA,EAEvB,EACzB,CAEA,mBAAqB,IAAM,CACzB,KAAK,MAAM,YAAY,gBAAkB,GACzC,KAAK,MAAM,WAAW,aAAe,EACrC,KAAK,qBAAA,EACD,KAAK,gBACP,KAAK,eAAe,KAAK,MAAM,OAAO,CAE1C,EAEA,qBAAuBC,EAAAA,SAAS,SAAY,CAC1C,MAAM,KAAK,UAAA,EACX,KAAK,MAAM,YAAY,gBAAkB,EAC3C,EAAG,GAAG,EAEN,MAAM,WAAY,CAChB,KAAK,MAAM,YAAY,kBAAoB,GAE3C,KAAM,CAAE,WAAAC,EAAY,WAAAC,CAAA,EAAe,MAAM,KAAK,oBAAoB,KAAK,CACrE,UAAW,KAAK,UAChB,QAAS,KAAK,MAAM,QAAQ,QAC5B,OAAQ,KAAK,MAAM,QAAQ,OAC3B,MAAO,KAAK,MAAM,WAAW,SAC7B,QAAS,KAAK,MAAM,WAAW,aAAe,GAAK,KAAK,MAAM,WAAW,SACzE,QAAS,KAAK,MAAM,QAAQ,QAC5B,UAAW,KAAK,MAAM,QAAQ,YAAY,CAAC,GAAG,YAAA,EAC9C,QAAS,KAAK,MAAM,QAAQ,YAAY,CAAC,GAAG,YAAA,EAC5C,OAAQ,KAAK,MAAM,QAAQ,MAAA,CAC5B,EAED,KAAK,MAAM,YAAY,kBAAoB,GAC3C,KAAK,MAAM,YAAY,WAAaD,EACpC,KAAK,MAAM,WAAW,WAAaC,CACrC,CAEA,MAAM,mBAAoB,CACxB,GAAI,CAAC,KAAK,gBAAiB,OAG3B,MAAMC,GAFS,MAAM,KAAK,gBAAgB,KAAK,KAAK,SAAS,GAEjC,IAAKC,IAAW,CAC1C,MAAO,IAAIA,EAAM,GAAG,MAAM,EAAG,CAAC,CAAC,KAAKA,EAAM,UAAU,eAAA,CAAgB,IAClEA,EAAM,OAAS,WAAa,EAC9B,GACA,MAAOA,EAAM,EAAA,EACb,EAEF,KAAK,MAAM,cAAc,OAASD,CACpC,CAEA,MAAM,mBAAoB,CAGxB,GAAI,CAAC,KAAK,gBAAiB,CAEzB,MAAME,GADS,MAAM,KAAK,oBAAoB,YAAA,GAClB,IAAKC,IAAW,CAC1C,MAAOA,EAAM,MACb,MAAOA,EAAM,EAAA,EACb,EACF,KAAK,MAAM,cAAc,OAASD,GAAgB,CAAA,EAClD,MACF,CAMA,MAAMA,GAJQ,MAAME,EAAU,IAC5B,KAAK,MAAM,QAAQ,SAAW,KAAK,MAAM,cAAc,OAAO,CAAC,EAAE,KAAA,IAGvC,SAAS,IAAKD,IAAW,CACnD,MAAOA,EAAM,MACb,MAAOA,EAAM,EAAA,EACb,EAEF,KAAK,MAAM,cAAc,OAASD,GAAgB,CAAA,CACpD,CAEA,MAAM,cAAe,CACnB,MAAM,KAAK,kBAAA,EACX,MAAM,KAAK,kBAAA,CACb,CAEA,MAAM,sBAAsBG,EAAqB,CAC/C,KAAM,CAACC,EAAMC,EAAYC,CAAK,EAAI,MAAM,QAAQ,IAAI,CAClD,KAAK,oBAAoB,UAAU,KAAK,UAAWH,CAAW,EAC9D,KAAK,oBAAoB,gBAAgB,KAAK,UAAWA,CAAW,EACpE,KAAK,oBAAoB,kBAAkB,KAAK,UAAWA,CAAW,CAAA,CACvE,EAED,KAAK,MAAM,YAAY,cAAcA,CAAW,EAAI,CAClD,KAAAC,EACA,WAAAC,EACA,MAAO,CACL,YAAaC,EAAM,YACf,CAAE,KAAMA,EAAM,YAAY,KAAM,QAASA,EAAM,YAAY,OAAA,EAC3D,KACJ,UAAWA,EAAM,UAAU,IAAKC,IAAU,CAAE,KAAMA,EAAK,KAAM,QAASA,EAAK,SAAU,CAAA,CACvF,CAEJ,CAEA,eAAiB,IAAM,CACrB,KAAK,MAAM,YAAY,mBAAmB,QAAQ,MAAOJ,GAAgB,CAClE,KAAK,MAAM,YAAY,cAAcA,CAAW,GACnD,MAAM,KAAK,sBAAsBA,CAAW,CAEhD,CAAC,CACH,EAEA,MAAM,SAAU,CACd,KAAK,MAAM,YAAY,mBAAmB,IAAKA,GAC7C,KAAK,sBAAsBA,CAAW,CAAA,CAE1C,CACF","x_google_ignoreList":[0]}