{"version":3,"file":"OnboardingView-qoZwTkSH.js","sources":["../../src/apps/console/apis/onboarding.ts","../../src/apps/console/views/Onboarding/components/OnboardingFormActions.vue","../../src/apps/console/views/Onboarding/components/BasicUserInfo.vue","../../src/apps/console/views/Onboarding/onboardingConfig.ts","../../src/apps/console/views/Onboarding/components/CompanyInfo.vue","../../src/apps/console/views/Onboarding/components/SourceInfo.vue","../../src/apps/console/views/Onboarding/components/UserDetails.vue","../../src/apps/console/views/Onboarding/OnboardingView.vue"],"sourcesContent":["import { useUserStore } from '@/apps/player/auth/userStore';\nimport { EnvURL } from '../config';\n\nexport type BasicUserInfo = {\n  name: string;\n  email: string;\n  workEmail: string;\n};\n\nexport type CompanyInfo = {\n  companyName: string;\n  companyDomain: string;\n  team: string;\n  otherTeam: string;\n  role: string;\n};\n\nexport type UserDetails = {\n  pythonExperience: string;\n  hasUseCase: boolean;\n  reportedUseCases: string[];\n  otherUseCases: string;\n  tools: string[];\n};\n\nexport type SourceInfo = {\n  reportedSource: string;\n  otherSource: string;\n};\n\nexport type OnboardingData = {\n  basicInfo: BasicUserInfo;\n  companyInfo: CompanyInfo;\n  userDetails: UserDetails;\n  sourceInfo: SourceInfo;\n};\n\nexport type OnboardingApiPayload = {\n  email: string;\n  name: string;\n  work_email: string;\n  company_name: string;\n  company_domain: string;\n  team: string;\n  other_team?: string;\n  role: string;\n  python_experience: string;\n  has_use_case: boolean;\n  reported_use_cases: string[];\n  other_use_cases: string;\n  tools: string[];\n  source: string;\n  other_source?: string;\n  ref_url?: string;\n};\n\nexport async function submitOnboardingData(data: OnboardingData): Promise<void> {\n  const userStore = useUserStore();\n\n  const payload: OnboardingApiPayload = {\n    email: data.basicInfo.email,\n    name: data.basicInfo.name,\n    work_email: data.basicInfo.workEmail,\n    company_name: data.companyInfo.companyName,\n    company_domain: data.companyInfo.companyDomain,\n    team: data.companyInfo.team,\n    other_team: data.companyInfo.otherTeam,\n    role: data.companyInfo.role,\n    python_experience: data.userDetails.pythonExperience,\n    has_use_case: data.userDetails.hasUseCase,\n    reported_use_cases: data.userDetails.reportedUseCases,\n    other_use_cases: data.userDetails.otherUseCases,\n    tools: data.userDetails.tools,\n    source: data.sourceInfo.reportedSource,\n    other_source: data.sourceInfo.otherSource,\n    ref_url: document.referrer,\n  };\n\n  const response = await fetch(`${EnvURL.onboarding}/_hooks/onboarding-completed`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      token: userStore.jwt || '',\n    },\n    body: JSON.stringify(payload),\n  });\n\n  if (!response.ok) {\n    throw new Error(`Failed to submit onboarding data: ${response.statusText}`);\n  }\n}\n","<template>\n  <div class=\"form-actions\">\n    <AButton v-if=\"showBack\" size=\"large\" @click=\"$emit('back')\"> Back </AButton>\n    <AButton type=\"primary\" size=\"large\" html-type=\"submit\" :loading=\"loading\">\n      {{ buttonText }}\n    </AButton>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { Button as AButton } from 'ant-design-vue';\nimport { computed } from 'vue';\n\ninterface Props {\n  showBack?: boolean;\n  isSubmit?: boolean;\n  submitText?: string;\n  loading?: boolean;\n}\n\ninterface Emits {\n  (e: 'back'): void;\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  showBack: false,\n  isSubmit: false,\n  submitText: 'Complete Onboarding',\n  loading: false,\n});\n\ndefineEmits<Emits>();\n\nconst buttonText = computed(() => {\n  if (props.isSubmit) {\n    return props.submitText;\n  }\n  return 'Next';\n});\n</script>\n\n<style scoped lang=\"scss\">\n.form-actions {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 32px;\n  padding-top: 24px;\n  border-top: 1px solid #f0f0f0;\n  gap: 16px;\n\n  // When only one button, align to right\n  &:has(> :only-child) {\n    justify-content: flex-end;\n  }\n\n  @media (max-width: 480px) {\n    margin-top: 24px;\n    padding-top: 16px;\n    flex-direction: column;\n\n    :deep(.ant-btn) {\n      width: 100%;\n      min-width: 120px;\n    }\n  }\n}\n</style>\n","<template>\n  <AForm layout=\"vertical\" :model=\"localValue\" @finish=\"handleNext\">\n    <ATypographyTitle :level=\"3\">About you</ATypographyTitle>\n\n    <AFormItem\n      label=\"Name\"\n      name=\"name\"\n      :rules=\"[{ required: true, message: 'Please input your name!' }]\"\n    >\n      <AInput v-model:value=\"localValue.name\" placeholder=\"Dwight Schrute\" size=\"large\" />\n    </AFormItem>\n\n    <AFormItem label=\"Email\">\n      <AInput :value=\"localValue.email\" disabled size=\"large\" />\n    </AFormItem>\n\n    <AFormItem\n      v-if=\"showWorkEmail\"\n      label=\"Work email\"\n      name=\"workEmail\"\n      :rules=\"[{ required: false, type: 'email', message: 'Please input a valid work email!' }]\"\n    >\n      <AInput\n        v-model:value=\"localValue.workEmail\"\n        :placeholder=\"workEmailPlaceholder\"\n        size=\"large\"\n      />\n    </AFormItem>\n\n    <div v-if=\"showWorkEmail\" class=\"warning-text\">\n      <ATypographyText type=\"warning\">\n        We noticed you're using a personal email address. We recommend using your work email for\n        better team collaboration features.\n      </ATypographyText>\n    </div>\n\n    <OnboardingFormActions />\n  </AForm>\n</template>\n\n<script setup lang=\"ts\">\nimport type { BasicUserInfo } from '@/apps/console/apis/onboarding';\nimport {\n  Form as AForm,\n  FormItem as AFormItem,\n  Input as AInput,\n  Typography as ATypography,\n} from 'ant-design-vue';\nimport { computed, watch } from 'vue';\nimport { authorManager } from '../../../authn/authorManager';\nimport OnboardingFormActions from './OnboardingFormActions.vue';\n\nconst { Title: ATypographyTitle, Text: ATypographyText } = ATypography;\n\ninterface Props {\n  modelValue: BasicUserInfo;\n}\n\ninterface Emits {\n  (e: 'update:modelValue', value: BasicUserInfo): void;\n  (e: 'next'): void;\n}\n\nconst props = defineProps<Props>();\nconst emit = defineEmits<Emits>();\n\nconst localValue = computed({\n  get: () => props.modelValue,\n  set: (value) => emit('update:modelValue', value),\n});\n\n// Get email from authenticated user\nconst author = authorManager.getAuthor();\nif (author && !localValue.value.email) {\n  localValue.value = {\n    ...localValue.value,\n    email: author.claims.email,\n  };\n}\n\nconst PERSONAL_DOMAINS = [\n  'gmail.com',\n  'yahoo.com',\n  'hotmail.com',\n  'outlook.com',\n  'icloud.com',\n  'protonmail.com',\n  'aol.com',\n];\n\nconst emailDomain = computed(() => {\n  if (!localValue.value.email || !localValue.value.email.includes('@')) {\n    return '';\n  }\n  return localValue.value.email.split('@')[1] || '';\n});\n\nconst showWorkEmail = computed(() => {\n  return PERSONAL_DOMAINS.includes(emailDomain.value.toLowerCase());\n});\n\nconst workEmailPlaceholder = computed(() => {\n  if (!localValue.value.name) return 'name@coolcompany.com';\n  const cleanName = localValue.value.name.replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n  return cleanName ? `${cleanName}@coolcompany.com` : 'name@coolcompany.com';\n});\n\n// Auto-set work email if not using personal domain\nwatch(emailDomain, (newDomain) => {\n  if (!PERSONAL_DOMAINS.includes(newDomain.toLowerCase())) {\n    localValue.value = {\n      ...localValue.value,\n      workEmail: localValue.value.email,\n    };\n  }\n});\n\nconst handleNext = () => {\n  emit('next');\n};\n</script>\n\n<style scoped lang=\"scss\">\n.warning-text {\n  margin-bottom: 24px;\n  padding: 12px;\n  background-color: #fff7e6;\n  border: 1px solid #ffd591;\n  border-radius: 6px;\n}\n</style>\n","export const TEAM_OPTIONS = [\n  'Finance',\n  'Operations',\n  'Product',\n  'Marketing',\n  'Sales',\n  'Customer Success',\n  'HR',\n  'Other',\n];\n\nexport const PYTHON_EXPERIENCE_OPTIONS = [\n  {\n    value: \"I've never used Python before, but I'm excited to learn\",\n    label: \"I've never used Python before, but I'm excited to learn\",\n  },\n  {\n    value: 'I sometimes use ChatGPT to generate Python scripts',\n    label: 'I sometimes use ChatGPT to generate Python scripts',\n  },\n  {\n    value: \"I've written some Python here and there\",\n    label: \"I've written some Python here and there\",\n  },\n  {\n    value: 'I use Python regularly',\n    label: 'I use Python regularly',\n  },\n];\n\nexport const USE_CASE_OPTIONS = [\n  'Enable other teammates to run my scripts',\n  'Design workflows with manual and automated steps',\n  'Schedule my scripts to run automatically',\n  'Integrate and connect the tools my team uses',\n  'Automate spreadsheet work',\n  'Use AI to parse documents',\n  'Build an automated workflow',\n  'Create automated reports',\n  'Other',\n];\n\nexport const SOURCE_OPTIONS = [\n  'Google',\n  'Linkedin',\n  'Github',\n  'Youtube',\n  'From a friend or coworker',\n  'Event or conference',\n  'Other',\n];\n\nexport const DEFAULT_TOOLS = ['Excel', 'Google Sheets', 'Salesforce', 'Slack'];\n","<template>\n  <AForm layout=\"vertical\" :model=\"localValue\" @finish=\"handleNext\">\n    <AFormItem\n      label=\"Company\"\n      name=\"companyName\"\n      :rules=\"[{ required: true, message: 'Please input your company name!' }]\"\n    >\n      <AInput v-model:value=\"localValue.companyName\" placeholder=\"Dunder Mifflin\" size=\"large\" />\n    </AFormItem>\n\n    <AFormItem label=\"Company website\" name=\"companyDomain\">\n      <AInput\n        v-model:value=\"localValue.companyDomain\"\n        placeholder=\"www.dundermifflin.com\"\n        size=\"large\"\n      />\n    </AFormItem>\n\n    <AFormItem\n      label=\"Team\"\n      name=\"team\"\n      :rules=\"[{ required: true, message: 'Please select your team!' }]\"\n    >\n      <ASelect\n        v-model:value=\"localValue.team\"\n        placeholder=\"Select a team\"\n        size=\"large\"\n        :options=\"teamOptions\"\n      />\n    </AFormItem>\n\n    <AFormItem\n      v-if=\"localValue.team === 'Other'\"\n      label=\"What team are you in?\"\n      name=\"otherTeam\"\n      :rules=\"[{ required: true, message: 'Please specify your team!' }]\"\n    >\n      <AInput v-model:value=\"localValue.otherTeam\" placeholder=\"Warehouse\" size=\"large\" />\n    </AFormItem>\n\n    <AFormItem\n      label=\"Role\"\n      name=\"role\"\n      :rules=\"[{ required: true, message: 'Please input your role!' }]\"\n    >\n      <AInput\n        v-model:value=\"localValue.role\"\n        placeholder=\"Assistant to the Regional Manager\"\n        size=\"large\"\n      />\n    </AFormItem>\n\n    <OnboardingFormActions show-back @back=\"handleBack\" />\n  </AForm>\n</template>\n\n<script setup lang=\"ts\">\nimport type { CompanyInfo } from '@/apps/console/apis/onboarding';\nimport { TEAM_OPTIONS } from '@/apps/console/views/Onboarding/onboardingConfig';\nimport {\n  Form as AForm,\n  FormItem as AFormItem,\n  Input as AInput,\n  Select as ASelect,\n} from 'ant-design-vue';\nimport { computed } from 'vue';\nimport OnboardingFormActions from './OnboardingFormActions.vue';\n\ninterface Props {\n  modelValue: CompanyInfo;\n}\n\ninterface Emits {\n  (e: 'update:modelValue', value: CompanyInfo): void;\n  (e: 'next'): void;\n  (e: 'back'): void;\n}\n\nconst props = defineProps<Props>();\nconst emit = defineEmits<Emits>();\n\nconst localValue = computed({\n  get: () => props.modelValue,\n  set: (value) => emit('update:modelValue', value),\n});\n\nconst teamOptions = TEAM_OPTIONS.map((team) => ({\n  label: team,\n  value: team,\n}));\n\nconst handleNext = () => {\n  emit('next');\n};\n\nconst handleBack = () => {\n  emit('back');\n};\n</script>\n","<template>\n  <AForm layout=\"vertical\" :model=\"localValue\" @finish=\"handleSubmit\">\n    <ATypographyTitle :level=\"3\">One last thing!</ATypographyTitle>\n\n    <AFormItem label=\"How did you hear about Abstra?\" name=\"reportedSource\">\n      <ARadioGroup v-model:value=\"localValue.reportedSource\" size=\"large\">\n        <ASpace direction=\"vertical\">\n          <ARadio v-for=\"option in sourceOptions\" :key=\"option\" :value=\"option\">\n            {{ option }}\n          </ARadio>\n        </ASpace>\n      </ARadioGroup>\n    </AFormItem>\n\n    <AFormItem\n      v-if=\"localValue.reportedSource === 'Other'\"\n      label=\"Please let us know how you heard about Abstra\"\n      name=\"otherSource\"\n      :rules=\"[{ required: true, message: 'Please tell us how you heard about Abstra!' }]\"\n    >\n      <ATextarea\n        v-model:value=\"localValue.otherSource\"\n        :rows=\"3\"\n        placeholder=\"Tell us how you heard about Abstra...\"\n      />\n    </AFormItem>\n\n    <OnboardingFormActions show-back is-submit :loading=\"loading\" @back=\"handleBack\" />\n  </AForm>\n</template>\n\n<script setup lang=\"ts\">\nimport type { SourceInfo } from '@/apps/console/apis/onboarding';\nimport { SOURCE_OPTIONS } from '@/apps/console/views/Onboarding/onboardingConfig';\nimport {\n  Form as AForm,\n  FormItem as AFormItem,\n  Input as AInput,\n  Radio as ARadio,\n  RadioGroup as ARadioGroup,\n  Space as ASpace,\n  Typography as ATypography,\n} from 'ant-design-vue';\nimport { computed } from 'vue';\nimport OnboardingFormActions from './OnboardingFormActions.vue';\n\nconst { Title: ATypographyTitle } = ATypography;\nconst { TextArea: ATextarea } = AInput;\n\ninterface Props {\n  modelValue: SourceInfo;\n  loading?: boolean;\n}\n\ninterface Emits {\n  (e: 'update:modelValue', value: SourceInfo): void;\n  (e: 'submit'): void;\n  (e: 'back'): void;\n}\n\nconst props = defineProps<Props>();\nconst emit = defineEmits<Emits>();\n\nconst localValue = computed({\n  get: () => props.modelValue,\n  set: (value) => emit('update:modelValue', value),\n});\n\nconst sourceOptions = SOURCE_OPTIONS;\n\nconst handleSubmit = () => {\n  emit('submit');\n};\n\nconst handleBack = () => {\n  emit('back');\n};\n</script>\n","<template>\n  <AForm layout=\"vertical\" :model=\"localValue\" @finish=\"handleNext\">\n    <ATypographyTitle :level=\"3\">Using Abstra</ATypographyTitle>\n\n    <AFormItem\n      label=\"Which best describes you?\"\n      name=\"pythonExperience\"\n      :rules=\"[{ required: true, message: 'Please select your Python experience!' }]\"\n    >\n      <ARadioGroup v-model:value=\"localValue.pythonExperience\" size=\"large\">\n        <ASpace direction=\"vertical\">\n          <ARadio\n            v-for=\"option in pythonExperienceOptions\"\n            :key=\"option.value\"\n            :value=\"option.value\"\n          >\n            {{ option.label }}\n          </ARadio>\n        </ASpace>\n      </ARadioGroup>\n    </AFormItem>\n\n    <AFormItem\n      label=\"Do you know what you want to build?\"\n      name=\"hasUseCase\"\n      :rules=\"[{ required: true, message: 'Please select an option!' }]\"\n    >\n      <ARadioGroup v-model:value=\"localValue.hasUseCase\" size=\"large\">\n        <ASpace direction=\"vertical\">\n          <ARadio :value=\"true\">Yes, I know what I want to build</ARadio>\n          <ARadio :value=\"false\">No, I'm still exploring</ARadio>\n        </ASpace>\n      </ARadioGroup>\n    </AFormItem>\n\n    <div v-if=\"localValue.hasUseCase\">\n      <AFormItem\n        label=\"What do you mainly want to do with Abstra?\"\n        name=\"reportedUseCases\"\n        :rules=\"[\n          {\n            required: true,\n            message: 'Please select at least one use case!',\n            type: 'array',\n            min: 1,\n          },\n        ]\"\n      >\n        <ACheckboxGroup v-model:value=\"localValue.reportedUseCases\">\n          <ASpace direction=\"vertical\">\n            <ACheckbox v-for=\"option in useCaseOptions\" :key=\"option\" :value=\"option\">\n              {{ option }}\n            </ACheckbox>\n          </ASpace>\n        </ACheckboxGroup>\n      </AFormItem>\n\n      <AFormItem\n        v-if=\"localValue.reportedUseCases.includes('Integrate and connect the tools my team uses')\"\n        label=\"What tools do you want to integrate Abstra with?\"\n      >\n        <ASelect\n          v-model:value=\"localValue.tools\"\n          mode=\"tags\"\n          placeholder=\"Type to add a tool\"\n          size=\"large\"\n          :default-value=\"defaultTools\"\n        />\n      </AFormItem>\n\n      <AFormItem\n        v-if=\"localValue.reportedUseCases.includes('Other')\"\n        label=\"What else do you want to do with Abstra?\"\n        name=\"otherUseCases\"\n        :rules=\"[{ required: true, message: 'Please describe your other use cases!' }]\"\n      >\n        <ATextarea\n          v-model:value=\"localValue.otherUseCases\"\n          :rows=\"3\"\n          placeholder=\"Describe your use case...\"\n        />\n      </AFormItem>\n    </div>\n\n    <OnboardingFormActions show-back @back=\"handleBack\" />\n  </AForm>\n</template>\n\n<script setup lang=\"ts\">\nimport type { UserDetails } from '@/apps/console/apis/onboarding';\nimport {\n  DEFAULT_TOOLS,\n  PYTHON_EXPERIENCE_OPTIONS,\n  USE_CASE_OPTIONS,\n} from '@/apps/console/views/Onboarding/onboardingConfig';\nimport {\n  Checkbox as ACheckbox,\n  CheckboxGroup as ACheckboxGroup,\n  Form as AForm,\n  FormItem as AFormItem,\n  Input as AInput,\n  Radio as ARadio,\n  RadioGroup as ARadioGroup,\n  Select as ASelect,\n  Space as ASpace,\n  Typography as ATypography,\n} from 'ant-design-vue';\nimport { computed } from 'vue';\nimport OnboardingFormActions from './OnboardingFormActions.vue';\n\nconst { Title: ATypographyTitle } = ATypography;\nconst { TextArea: ATextarea } = AInput;\n\ninterface Props {\n  modelValue: UserDetails;\n}\n\ninterface Emits {\n  (e: 'update:modelValue', value: UserDetails): void;\n  (e: 'next'): void;\n  (e: 'back'): void;\n}\n\nconst props = defineProps<Props>();\nconst emit = defineEmits<Emits>();\n\nconst localValue = computed({\n  get: () => props.modelValue,\n  set: (value) => emit('update:modelValue', value),\n});\n\nconst pythonExperienceOptions = PYTHON_EXPERIENCE_OPTIONS;\nconst useCaseOptions = USE_CASE_OPTIONS;\nconst defaultTools = DEFAULT_TOOLS;\n\nconst handleNext = () => {\n  emit('next');\n};\n\nconst handleBack = () => {\n  emit('back');\n};\n</script>\n","<template>\n  <div class=\"onboarding-container\">\n    <div class=\"onboarding-form\">\n      <div class=\"header\">\n        <AbstraLogo hide-text size=\"large\" />\n        <h2>Welcome to Abstra</h2>\n        <ASteps :current=\"currentStep\" size=\"small\" class=\"step-indicator\">\n          <AStep v-for=\"step in steps\" :key=\"step\" :title=\"step\" :disabled=\"true\" />\n        </ASteps>\n      </div>\n\n      <div class=\"form-content\">\n        <BasicUserInfo v-if=\"currentStep === 0\" v-model=\"formData.basicInfo\" @next=\"nextStep\" />\n        <CompanyInfo\n          v-else-if=\"currentStep === 1\"\n          v-model=\"formData.companyInfo\"\n          @next=\"nextStep\"\n          @back=\"prevStep\"\n        />\n        <UserDetails\n          v-else-if=\"currentStep === 2\"\n          v-model=\"formData.userDetails\"\n          @next=\"nextStep\"\n          @back=\"prevStep\"\n        />\n        <SourceInfo\n          v-else-if=\"currentStep === 3\"\n          v-model=\"formData.sourceInfo\"\n          :loading=\"isLoading\"\n          @submit=\"submitOnboarding\"\n          @back=\"prevStep\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type { OnboardingData } from '@/apps/console/apis/onboarding';\nimport { submitOnboardingData } from '@/apps/console/apis/onboarding';\nimport BasicUserInfo from '@/apps/console/views/Onboarding/components/BasicUserInfo.vue';\nimport CompanyInfo from '@/apps/console/views/Onboarding/components/CompanyInfo.vue';\nimport SourceInfo from '@/apps/console/views/Onboarding/components/SourceInfo.vue';\nimport UserDetails from '@/apps/console/views/Onboarding/components/UserDetails.vue';\nimport AbstraLogo from '@/components/AbstraLogo.vue';\nimport { captureException } from '@sentry/vue';\nimport { Step as AStep, Steps as ASteps } from 'ant-design-vue';\nimport { reactive, ref } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\n\nconst router = useRouter();\nconst route = useRoute();\n\nconst currentStep = ref(0);\nconst steps = ['Basic Info', 'Company', 'Details', 'Source'];\n\nconst formData = reactive<OnboardingData>({\n  basicInfo: {\n    name: '',\n    email: '',\n    workEmail: '',\n  },\n  companyInfo: {\n    companyName: '',\n    companyDomain: '',\n    team: '',\n    otherTeam: '',\n    role: '',\n  },\n  userDetails: {\n    pythonExperience: '',\n    hasUseCase: false,\n    reportedUseCases: [],\n    otherUseCases: '',\n    tools: [],\n  },\n  sourceInfo: {\n    reportedSource: '',\n    otherSource: '',\n  },\n});\n\nconst nextStep = () => {\n  if (currentStep.value < steps.length - 1) {\n    currentStep.value++;\n  }\n};\n\nconst prevStep = () => {\n  if (currentStep.value > 0) {\n    currentStep.value--;\n  }\n};\n\nconst isLoading = ref(false);\n\nconst submitOnboarding = async () => {\n  isLoading.value = true;\n  try {\n    await submitOnboardingData(formData);\n  } catch (error) {\n    captureException(error, {\n      extra: {\n        step: 'submitOnboarding',\n        formData,\n      },\n    });\n    return;\n  } finally {\n    isLoading.value = false;\n  }\n\n  const redirectUrl = route.query['redirect'] as string | null;\n  const prevRedirectUrl = route.query['prev-redirect'] as string | null;\n\n  if (redirectUrl) {\n    const redirectPath = redirectUrl.split('/').at(-1);\n    await router.push({\n      path: redirectPath,\n      query: {\n        ...route.query,\n        redirect: prevRedirectUrl,\n        'prev-redirect': undefined,\n      },\n    });\n    return;\n  }\n\n  router.push({ name: 'home' });\n};\n</script>\n\n<style scoped lang=\"scss\">\n@import '@/styles/index.scss';\n\n.onboarding-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 100vh;\n  background-color: $background-base;\n  padding: 20px;\n  box-sizing: border-box;\n}\n\n.onboarding-form {\n  background-color: #fff;\n  width: 100%;\n  max-width: 600px;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);\n  border-radius: 12px;\n  padding: 48px 80px;\n  font-family: 'DM Sans', sans-serif;\n  display: flex;\n  flex-direction: column;\n\n  @media (max-width: 768px) {\n    padding: 32px 24px;\n    border-radius: 8px;\n    margin: 0 16px;\n  }\n\n  @media (max-width: 480px) {\n    padding: 24px 16px;\n    margin: 0 8px;\n  }\n}\n\n.header {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 24px;\n  margin-bottom: 48px;\n\n  h2 {\n    font-size: 32px;\n    font-weight: 600;\n    padding: 0;\n    margin: 0;\n    font-family: 'DM Sans', sans-serif;\n    color: #2c3e50;\n    text-align: center;\n\n    @media (max-width: 768px) {\n      font-size: 28px;\n    }\n\n    @media (max-width: 480px) {\n      font-size: 24px;\n    }\n  }\n\n  @media (max-width: 768px) {\n    gap: 20px;\n    margin-bottom: 32px;\n  }\n\n  @media (max-width: 480px) {\n    gap: 16px;\n    margin-bottom: 24px;\n  }\n}\n\n.step-indicator {\n  width: 100%;\n  max-width: 500px;\n\n  :deep(.ant-steps-item) {\n    cursor: default !important;\n\n    .ant-steps-item-container {\n      cursor: default !important;\n    }\n  }\n\n  @media (max-width: 768px) {\n    max-width: 100%;\n  }\n}\n\n.form-content {\n  flex: 1;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n}\n</style>\n"],"names":["submitOnboardingData","data","userStore","useUserStore","payload","response","EnvURL","buttonText","computed","props","ATypographyTitle","ATypographyText","ATypography","localValue","value","emit","author","authorManager","PERSONAL_DOMAINS","emailDomain","showWorkEmail","workEmailPlaceholder","cleanName","watch","newDomain","handleNext","TEAM_OPTIONS","PYTHON_EXPERIENCE_OPTIONS","USE_CASE_OPTIONS","SOURCE_OPTIONS","DEFAULT_TOOLS","teamOptions","team","handleBack","ATextarea","AInput","sourceOptions","handleSubmit","pythonExperienceOptions","useCaseOptions","defaultTools","router","useRouter","route","useRoute","currentStep","ref","steps","formData","reactive","nextStep","prevStep","isLoading","submitOnboarding","error","captureException","redirectUrl","prevRedirectUrl","redirectPath"],"mappings":"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"}