{"version":3,"file":"repository-DLftv6Us.js","sources":["../../src/models/roles/types.ts","../../src/models/roles/repository.ts"],"sourcesContent":["import {\n  CloudApiConsoleRoleUpdateResponse as RoleDTO,\n  CloudApiConsoleRoleUpdateRequest as UpdateDTO,\n  CloudApiConsoleRoleCreateRequest as CreateDTO,\n} from '@/contracts.generated';\nimport { EditableRecord } from '@/utils/record';\n\nexport interface RoleRepository {\n  list(limit: number, offset: number): Promise<Role[]>;\n  create(data: CreateDTO): Promise<void>;\n  update(id: string, changes: UpdateDTO): Promise<void>;\n  delete(id: string): Promise<void>;\n}\n\nexport class Role {\n  private record: EditableRecord<RoleDTO>;\n  private constructor(dto: RoleDTO) {\n    this.record = EditableRecord.from(dto);\n  }\n\n  get id(): string {\n    return this.record.get('id');\n  }\n\n  get name(): string {\n    return this.record.get('name');\n  }\n\n  get description(): string {\n    return this.record.get('description') || '';\n  }\n\n  set description(value: string) {\n    this.record.set('description', value);\n  }\n\n  get projectId(): string {\n    return this.record.get('projectId');\n  }\n\n  static from(dto: RoleDTO) {\n    return new Role(dto);\n  }\n\n  commit() {\n    this.record.commit();\n    return;\n  }\n\n  hasChanges(): boolean {\n    return this.record.hasChanges();\n  }\n\n  get changes(): Partial<RoleDTO> {\n    return this.record.changes;\n  }\n\n  update(dto: Partial<RoleDTO>) {\n    this.record.update(dto);\n  }\n}\n","import { CloudApiGateway } from '@/apps/console/apis/cloud/gateway';\nimport {\n  CloudApiConsoleRoleCreateRequest,\n  CloudApiConsoleRoleCreateResponse,\n  CloudApiConsoleRoleListQuery,\n  CloudApiConsoleRoleListResponse,\n  CloudApiConsoleRoleUpdateRequest,\n  CloudApiConsoleRoleUpdateResponse as RoleDTO,\n} from '@/contracts.generated';\nimport localFetch from '@/utils/fetch';\nimport { Role, RoleRepository } from './types';\n\nclass CloudAPI {\n  private urlPath = `roles`;\n\n  async create(\n    projectId: string,\n    dto: CloudApiConsoleRoleCreateRequest,\n  ): Promise<CloudApiConsoleRoleCreateResponse> {\n    return CloudApiGateway.post(`projects/${projectId}/${this.urlPath}`, dto);\n  }\n\n  async delete(projectId: string, id: string): Promise<void> {\n    await CloudApiGateway.delete(`projects/${projectId}/${this.urlPath}/${id}`);\n  }\n\n  async list(\n    projectId: string,\n    { limit, offset }: CloudApiConsoleRoleListQuery,\n  ): Promise<CloudApiConsoleRoleListResponse> {\n    const paramsObj: {\n      limit?: string;\n      offset?: string;\n    } = {};\n    if (limit) {\n      paramsObj.limit = limit.toString();\n    }\n    if (offset) {\n      paramsObj.offset = offset.toString();\n    }\n    const params = new URLSearchParams(paramsObj);\n    return CloudApiGateway.get(`projects/${projectId}/${this.urlPath}?${params.toString()}`);\n  }\n\n  async update(\n    projectId: string,\n    id: string,\n    changes: Partial<CloudApiConsoleRoleUpdateRequest>,\n  ): Promise<RoleDTO> {\n    return CloudApiGateway.patch(`projects/${projectId}/${this.urlPath}/${id}`, changes);\n  }\n}\n\nconst cloudApi = new CloudAPI();\n\nexport class ConsoleRoleRepository implements RoleRepository {\n  constructor(private projectId: string) {}\n\n  async list(limit: number, offset: number): Promise<Role[]> {\n    const response = await cloudApi.list(this.projectId, { limit, offset });\n    return response.map(Role.from);\n  }\n\n  async create(data: CloudApiConsoleRoleCreateRequest): Promise<void> {\n    await cloudApi.create(this.projectId, data);\n    return;\n  }\n\n  async update(id: string, changes: CloudApiConsoleRoleUpdateRequest): Promise<void> {\n    await cloudApi.update(this.projectId, id, changes);\n    return;\n  }\n\n  async delete(id: string): Promise<void> {\n    await cloudApi.delete(this.projectId, id);\n    return;\n  }\n}\n\nexport class EditorRoleRepository {\n  constructor(private fetch = localFetch) {}\n\n  async list(limit: number, offset: number): Promise<Role[]> {\n    const paramsObj: {\n      limit?: string;\n      offset?: string;\n    } = {};\n    if (limit) {\n      paramsObj.limit = limit.toString();\n    }\n    if (offset) {\n      paramsObj.offset = offset.toString();\n    }\n    const params = new URLSearchParams(paramsObj);\n    const response = await this.fetch(`/_editor/api/roles?${params.toString()}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    const data = await response.json();\n    return data.map(Role.from);\n  }\n}\n"],"names":["Role","dto","EditableRecord","value","CloudAPI","projectId","CloudApiGateway","id","limit","offset","paramsObj","params","changes","cloudApi","ConsoleRoleRepository","data","EditorRoleRepository","fetch","localFetch"],"mappings":"sdAcO,MAAMA,CAAK,CACR,OACA,YAAYC,EAAc,CAChC,KAAK,OAASC,EAAe,KAAKD,CAAG,CACvC,CAEA,IAAI,IAAa,CACf,OAAO,KAAK,OAAO,IAAI,IAAI,CAC7B,CAEA,IAAI,MAAe,CACjB,OAAO,KAAK,OAAO,IAAI,MAAM,CAC/B,CAEA,IAAI,aAAsB,CACxB,OAAO,KAAK,OAAO,IAAI,aAAa,GAAK,EAC3C,CAEA,IAAI,YAAYE,EAAe,CAC7B,KAAK,OAAO,IAAI,cAAeA,CAAK,CACtC,CAEA,IAAI,WAAoB,CACtB,OAAO,KAAK,OAAO,IAAI,WAAW,CACpC,CAEA,OAAO,KAAKF,EAAc,CACxB,OAAO,IAAID,EAAKC,CAAG,CACrB,CAEA,QAAS,CACP,KAAK,OAAO,OAAA,CAEd,CAEA,YAAsB,CACpB,OAAO,KAAK,OAAO,WAAA,CACrB,CAEA,IAAI,SAA4B,CAC9B,OAAO,KAAK,OAAO,OACrB,CAEA,OAAOA,EAAuB,CAC5B,KAAK,OAAO,OAAOA,CAAG,CACxB,CACF,CChDA,MAAMG,CAAS,CACL,QAAU,QAElB,MAAM,OACJC,EACAJ,EAC4C,CAC5C,OAAOK,EAAgB,KAAK,YAAYD,CAAS,IAAI,KAAK,OAAO,GAAIJ,CAAG,CAC1E,CAEA,MAAM,OAAOI,EAAmBE,EAA2B,CACzD,MAAMD,EAAgB,OAAO,YAAYD,CAAS,IAAI,KAAK,OAAO,IAAIE,CAAE,EAAE,CAC5E,CAEA,MAAM,KACJF,EACA,CAAE,MAAAG,EAAO,OAAAC,GACiC,CAC1C,MAAMC,EAGF,CAAA,EACAF,IACFE,EAAU,MAAQF,EAAM,SAAA,GAEtBC,IACFC,EAAU,OAASD,EAAO,SAAA,GAE5B,MAAME,EAAS,IAAI,gBAAgBD,CAAS,EAC5C,OAAOJ,EAAgB,IAAI,YAAYD,CAAS,IAAI,KAAK,OAAO,IAAIM,EAAO,SAAA,CAAU,EAAE,CACzF,CAEA,MAAM,OACJN,EACAE,EACAK,EACkB,CAClB,OAAON,EAAgB,MAAM,YAAYD,CAAS,IAAI,KAAK,OAAO,IAAIE,CAAE,GAAIK,CAAO,CACrF,CACF,CAEA,MAAMC,EAAW,IAAIT,EAEd,MAAMU,CAAgD,CAC3D,YAAoBT,EAAmB,CAAnB,KAAA,UAAAA,CAAoB,CAExC,MAAM,KAAKG,EAAeC,EAAiC,CAEzD,OADiB,MAAMI,EAAS,KAAK,KAAK,UAAW,CAAE,MAAAL,EAAO,OAAAC,EAAQ,GACtD,IAAIT,EAAK,IAAI,CAC/B,CAEA,MAAM,OAAOe,EAAuD,CAClE,MAAMF,EAAS,OAAO,KAAK,UAAWE,CAAI,CAE5C,CAEA,MAAM,OAAOR,EAAYK,EAA0D,CACjF,MAAMC,EAAS,OAAO,KAAK,UAAWN,EAAIK,CAAO,CAEnD,CAEA,MAAM,OAAOL,EAA2B,CACtC,MAAMM,EAAS,OAAO,KAAK,UAAWN,CAAE,CAE1C,CACF,CAEO,MAAMS,CAAqB,CAChC,YAAoBC,EAAQC,EAAY,CAApB,KAAA,MAAAD,CAAqB,CAEzC,MAAM,KAAKT,EAAeC,EAAiC,CACzD,MAAMC,EAGF,CAAA,EACAF,IACFE,EAAU,MAAQF,EAAM,SAAA,GAEtBC,IACFC,EAAU,OAASD,EAAO,SAAA,GAE5B,MAAME,EAAS,IAAI,gBAAgBD,CAAS,EAQ5C,OADa,MANI,MAAM,KAAK,MAAM,sBAAsBC,EAAO,SAAA,CAAU,GAAI,CAC3E,OAAQ,MACR,QAAS,CACP,eAAgB,kBAAA,CAClB,CACD,GAC2B,KAAA,GAChB,IAAIX,EAAK,IAAI,CAC3B,CACF"}