{"version":3,"file":"Sql-D2C39Y7D.js","sources":["../../node_modules/@ant-design/icons-svg/es/asn/CaretRightOutlined.js","../../node_modules/@ant-design/icons-vue/es/icons/CaretRightOutlined.js","../../src/services/tasks/utils.ts","../../src/utils/object.ts","../../src/apps/console/views/Sql.vue"],"sourcesContent":["// This icon file is generated automatically.\nvar CaretRightOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"0 0 1024 1024\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M715.8 493.5L335 165.1c-14.2-12.2-35-1.2-35 18.5v656.8c0 19.7 20.8 30.7 35 18.5l380.8-328.4c10.9-9.4 10.9-27.6 0-37z\" } }] }, \"name\": \"caret-right\", \"theme\": \"outlined\" };\nexport default CaretRightOutlined;\n","import { createVNode as _createVNode } from \"vue\";\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? Object(arguments[i]) : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport CaretRightOutlinedSvg from \"@ant-design/icons-svg/es/asn/CaretRightOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CaretRightOutlined = function CaretRightOutlined(props, context) {\n  var p = _objectSpread({}, props, context.attrs);\n\n  return _createVNode(AntdIcon, _objectSpread({}, p, {\n    \"icon\": CaretRightOutlinedSvg\n  }), null);\n};\n\nCaretRightOutlined.displayName = 'CaretRightOutlined';\nCaretRightOutlined.inheritAttrs = false;\nexport default CaretRightOutlined;","type DownloadCsvInput = {\n  columns: string[];\n  rows: string[][];\n  fileName: string;\n};\n\nconst escapeCell = (cell: unknown): string => {\n  if (cell === null || cell === undefined) return '';\n  const str = String(cell);\n  if (str.includes(';') || str.includes('\\n') || str.includes('\"')) {\n    return `\"${str.replace(/\"/g, '\"\"')}\"`;\n  }\n  return str;\n};\n\nexport const downloadCsv = (csvInput: DownloadCsvInput) => {\n  let csv = csvInput.columns.map(escapeCell).join(';') + '\\n';\n\n  csvInput.rows.forEach((row) => {\n    csv += row.map(escapeCell).join(';') + '\\n';\n  });\n\n  const anchor = document.createElement('a');\n  anchor.href = 'data:text/csv;charset=utf-8,' + encodeURIComponent(csv);\n  anchor.target = '_blank';\n  anchor.download = `${csvInput.fileName}.csv`;\n  anchor.click();\n};\n","export function objValuesToString(obj: Record<string, unknown>): Record<string, string> {\n  const result: Record<string, string> = {};\n  for (const key in obj) {\n    // eslint-disable-next-line no-prototype-builtins\n    if (obj.hasOwnProperty(key)) {\n      if (typeof obj[key] === 'object' && obj[key] !== null) {\n        result[key] = JSON.stringify(obj[key]);\n        continue;\n      }\n      result[key] = String(obj[key]);\n    }\n  }\n  return result;\n}\n","<template>\n  <TablesTabs />\n  <AntFlex gap=\"large\" class=\"sql-container\" align=\"center\">\n    <div ref=\"sqlEditor\" class=\"sql-editor\" />\n    <AntButton type=\"primary\" :loading=\"loading\" @click=\"runSql\">\n      Run\n      <template #icon>\n        <CaretRightOutlined />\n      </template>\n    </AntButton>\n  </AntFlex>\n  <AntFlex justify=\"end\" style=\"margin: 30px 0 10px 0\">\n    <AntButton :disabled=\"!data.length\" @click=\"downloadCsvData\">\n      <AntFlex align=\"center\" gap=\"small\">\n        Export to CSV\n        <PhDownloadSimple />\n      </AntFlex>\n    </AntButton>\n  </AntFlex>\n  <AntTable style=\"width: 100%\" :scroll=\"{ x: 100 }\" :data-source=\"data\" :columns=\"columns\" />\n</template>\n\n<script lang=\"ts\" setup>\nimport { LocalBucket } from '@/models/bucket/repository';\nimport { downloadCsv } from '@/services/tasks/utils';\nimport { objValuesToString } from '@/utils/object';\nimport { CaretRightOutlined } from '@ant-design/icons-vue';\nimport { PhDownloadSimple } from '@phosphor-icons/vue';\nimport {\n  Button as AntButton,\n  Flex as AntFlex,\n  Table as AntTable,\n  notification,\n} from 'ant-design-vue';\nimport * as monaco from 'monaco-editor';\nimport { onMounted, ref } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { z } from 'zod';\nimport { ProjectModel, QueryReturns } from '../apis/cloud';\nimport TablesTabs from '../components/tables/TablesTabs.vue';\n\nconst route = useRoute();\nconst projectId = route.params.projectId as string;\nconst lastQueriesStorage = new LocalBucket(\n  z.array(\n    z.object({\n      projectId: z.string(),\n      lastQuery: z.string(),\n    }),\n  ),\n  'lastQueries',\n);\n\nconst sqlEditor = ref(null);\n\nconst sql = ref('');\nconst data = ref<QueryReturns['result']>([]);\nconst columns = ref<QueryReturns['fields']>([]);\nconst err = ref<string[]>([]);\nconst loading = ref(false);\n\nconst runSql = async () => {\n  loading.value = true;\n  const res = await ProjectModel.executeQuery(projectId, sql.value, []);\n  loading.value = false;\n  const lastQueries = lastQueriesStorage.get();\n  if (!lastQueries) {\n    lastQueriesStorage.set([{ projectId, lastQuery: sql.value }]);\n  } else {\n    const index = lastQueries.findIndex((q) => q.projectId === projectId);\n    if (index === -1) {\n      lastQueries.push({ projectId, lastQuery: sql.value });\n    } else {\n      lastQueries[index].lastQuery = sql.value;\n    }\n    lastQueriesStorage.set(lastQueries);\n  }\n  if (!res) return;\n  const { returns, errors } = res;\n  err.value = errors;\n  for (const error of errors) {\n    notification.error({ message: 'SQL Execution Failed', description: error });\n  }\n  if (!errors.length) {\n    notification.success({\n      message: 'SQL Execution Succeeded',\n    });\n  }\n  columns.value = returns.fields.map((field) => ({\n    title: field.name,\n    key: field.name,\n    dataIndex: field.name,\n  }));\n  data.value = returns.result.map((row, i) => objValuesToString({ key: `${i + 1}`, ...row }));\n};\n\nconst downloadCsvData = () => {\n  const dataIndexes = columns.value.map((c) => c.dataIndex);\n  const cols = columns.value.map((c) => c.title);\n  const rows = data.value.map((row) => dataIndexes.map((dataIndex) => row[dataIndex]));\n  const now = new Date();\n  const fileName = `data-${now.toISOString()}`;\n  downloadCsv({\n    fileName,\n    columns: cols,\n    rows,\n  });\n};\n\nonMounted(() => {\n  const editor = monaco.editor.create(sqlEditor.value as unknown as HTMLElement, {\n    language: 'sql',\n    value: sql.value,\n    fontFamily: 'monospace',\n    lineNumbers: 'on',\n    minimap: { enabled: false },\n    scrollbar: { vertical: 'hidden', horizontal: 'visible' },\n    fontSize: 14,\n    scrollBeyondLastLine: false,\n    lineHeight: 20,\n  });\n  editor.onDidChangeModelContent(() => {\n    sql.value = editor.getValue();\n  });\n  const lastQueries = lastQueriesStorage.get();\n  if (lastQueries) {\n    const lastQuery = lastQueries.find((q) => q.projectId === projectId)?.lastQuery;\n    if (lastQuery) {\n      sql.value = lastQuery;\n      editor.setValue(lastQuery);\n    }\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.sql-container {\n  padding: 12px;\n  background-color: #fff;\n  border-radius: 8px;\n  margin-bottom: 20px;\n  box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.1);\n  height: fit-content;\n}\n\n.sql-editor {\n  width: 100%;\n  height: 180px;\n  border-radius: 6px;\n}\n</style>\n"],"names":["CaretRightOutlined","_objectSpread","target","i","source","ownKeys","sym","key","_defineProperty","obj","value","props","context","p","_createVNode","AntdIcon","CaretRightOutlinedSvg","escapeCell","cell","str","downloadCsv","csvInput","csv","row","anchor","objValuesToString","result","projectId","useRoute","lastQueriesStorage","LocalBucket","z","sqlEditor","ref","sql","data","columns","err","loading","runSql","res","ProjectModel","lastQueries","index","q","returns","errors","error","notification","field","downloadCsvData","dataIndexes","cols","rows","dataIndex","fileName","onMounted","editor","monaco.editor","lastQuery"],"mappings":"u3BACA,IAAIA,EAAqB,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,OAAO,EAAI,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,sHAAsH,EAAI,CAAC,EAAI,KAAQ,cAAe,MAAS,UAAU,ECCzU,SAASC,EAAcC,EAAQ,CAAE,QAASC,EAAI,EAAGA,EAAI,UAAU,OAAQA,IAAK,CAAE,IAAIC,EAAS,UAAUD,CAAC,GAAK,KAAO,OAAO,UAAUA,CAAC,CAAC,EAAI,CAAA,EAAQE,EAAU,OAAO,KAAKD,CAAM,EAAO,OAAO,OAAO,uBAA0B,aAAcC,EAAUA,EAAQ,OAAO,OAAO,sBAAsBD,CAAM,EAAE,OAAO,SAAUE,EAAK,CAAE,OAAO,OAAO,yBAAyBF,EAAQE,CAAG,EAAE,UAAY,CAAC,CAAC,GAAKD,EAAQ,QAAQ,SAAUE,EAAK,CAAEC,EAAgBN,EAAQK,EAAKH,EAAOG,CAAG,CAAC,CAAG,CAAC,CAAG,CAAE,OAAOL,CAAQ,CAExe,SAASM,EAAgBC,EAAKF,EAAKG,EAAO,CAAE,OAAIH,KAAOE,EAAO,OAAO,eAAeA,EAAKF,EAAK,CAAE,MAAOG,EAAO,WAAY,GAAM,aAAc,GAAM,SAAU,EAAI,CAAE,EAAYD,EAAIF,CAAG,EAAIG,EAAgBD,CAAK,CAOhN,IAAIT,EAAqB,SAA4BW,EAAOC,EAAS,CACnE,IAAIC,EAAIZ,EAAc,CAAA,EAAIU,EAAOC,EAAQ,KAAK,EAE9C,OAAOE,EAAaC,EAAUd,EAAc,CAAA,EAAIY,EAAG,CACjD,KAAQG,CACZ,CAAG,EAAG,IAAI,CACV,EAEAhB,EAAmB,YAAc,qBACjCA,EAAmB,aAAe,GCdlC,MAAMiB,EAAcC,GAA0B,CAC5C,GAAIA,GAAS,KAA4B,MAAO,GAChD,MAAMC,EAAM,OAAOD,CAAI,EACvB,OAAIC,EAAI,SAAS,GAAG,GAAKA,EAAI,SAAS;AAAA,CAAI,GAAKA,EAAI,SAAS,GAAG,EACtD,IAAIA,EAAI,QAAQ,KAAM,IAAI,CAAC,IAE7BA,CACT,EAEaC,EAAeC,GAA+B,CACzD,IAAIC,EAAMD,EAAS,QAAQ,IAAIJ,CAAU,EAAE,KAAK,GAAG,EAAI;AAAA,EAEvDI,EAAS,KAAK,QAASE,GAAQ,CAC7BD,GAAOC,EAAI,IAAIN,CAAU,EAAE,KAAK,GAAG,EAAI;AAAA,CACzC,CAAC,EAED,MAAMO,EAAS,SAAS,cAAc,GAAG,EACzCA,EAAO,KAAO,+BAAiC,mBAAmBF,CAAG,EACrEE,EAAO,OAAS,SAChBA,EAAO,SAAW,GAAGH,EAAS,QAAQ,OACtCG,EAAO,MAAA,CACT,EC3BO,SAASC,EAAkBhB,EAAsD,CACtF,MAAMiB,EAAiC,CAAA,EACvC,UAAWnB,KAAOE,EAEhB,GAAIA,EAAI,eAAeF,CAAG,EAAG,CAC3B,GAAI,OAAOE,EAAIF,CAAG,GAAM,UAAYE,EAAIF,CAAG,IAAM,KAAM,CACrDmB,EAAOnB,CAAG,EAAI,KAAK,UAAUE,EAAIF,CAAG,CAAC,EACrC,QACF,CACAmB,EAAOnB,CAAG,EAAI,OAAOE,EAAIF,CAAG,CAAC,CAC/B,CAEF,OAAOmB,CACT,kCC6BA,MAAMC,EADQC,EAAA,EACU,OAAO,UACzBC,EAAqB,IAAIC,EAC7BC,EAAE,MACAA,EAAE,OAAO,CACP,UAAWA,EAAE,OAAA,EACb,UAAWA,EAAE,OAAA,CAAO,CACrB,CAAA,EAEH,aAAA,EAGIC,EAAYC,EAAI,IAAI,EAEpBC,EAAMD,EAAI,EAAE,EACZE,EAAOF,EAA4B,EAAE,EACrCG,EAAUH,EAA4B,EAAE,EACxCI,EAAMJ,EAAc,EAAE,EACtBK,EAAUL,EAAI,EAAK,EAEnBM,EAAS,SAAY,CACzBD,EAAQ,MAAQ,GAChB,MAAME,EAAM,MAAMC,EAAa,aAAad,EAAWO,EAAI,MAAO,EAAE,EACpEI,EAAQ,MAAQ,GAChB,MAAMI,EAAcb,EAAmB,IAAA,EACvC,GAAI,CAACa,EACHb,EAAmB,IAAI,CAAC,CAAE,UAAAF,EAAW,UAAWO,EAAI,KAAA,CAAO,CAAC,MACvD,CACL,MAAMS,EAAQD,EAAY,UAAWE,GAAMA,EAAE,YAAcjB,CAAS,EAChEgB,IAAU,GACZD,EAAY,KAAK,CAAE,UAAAf,EAAW,UAAWO,EAAI,MAAO,EAEpDQ,EAAYC,CAAK,EAAE,UAAYT,EAAI,MAErCL,EAAmB,IAAIa,CAAW,CACpC,CACA,GAAI,CAACF,EAAK,OACV,KAAM,CAAE,QAAAK,EAAS,OAAAC,CAAA,EAAWN,EAC5BH,EAAI,MAAQS,EACZ,UAAWC,KAASD,EAClBE,EAAa,MAAM,CAAE,QAAS,uBAAwB,YAAaD,EAAO,EAEvED,EAAO,QACVE,EAAa,QAAQ,CACnB,QAAS,yBAAA,CACV,EAEHZ,EAAQ,MAAQS,EAAQ,OAAO,IAAKI,IAAW,CAC7C,MAAOA,EAAM,KACb,IAAKA,EAAM,KACX,UAAWA,EAAM,IAAA,EACjB,EACFd,EAAK,MAAQU,EAAQ,OAAO,IAAI,CAACtB,EAAKpB,IAAMsB,EAAkB,CAAE,IAAK,GAAGtB,EAAI,CAAC,GAAI,GAAGoB,CAAA,CAAK,CAAC,CAC5F,EAEM2B,EAAkB,IAAM,CAC5B,MAAMC,EAAcf,EAAQ,MAAM,IAAK,GAAM,EAAE,SAAS,EAClDgB,EAAOhB,EAAQ,MAAM,IAAK,GAAM,EAAE,KAAK,EACvCiB,EAAOlB,EAAK,MAAM,IAAKZ,GAAQ4B,EAAY,IAAKG,GAAc/B,EAAI+B,CAAS,CAAC,CAAC,EAE7EC,EAAW,YADD,KAAA,EACa,YAAA,CAAa,GAC1CnC,EAAY,CACV,SAAAmC,EACA,QAASH,EACT,KAAAC,CAAA,CACD,CACH,EAEA,OAAAG,EAAU,IAAM,CACd,MAAMC,EAASC,EAAc,OAAO1B,EAAU,MAAiC,CAC7E,SAAU,MACV,MAAOE,EAAI,MACX,WAAY,YACZ,YAAa,KACb,QAAS,CAAE,QAAS,EAAA,EACpB,UAAW,CAAE,SAAU,SAAU,WAAY,SAAA,EAC7C,SAAU,GACV,qBAAsB,GACtB,WAAY,EAAA,CACb,EACDuB,EAAO,wBAAwB,IAAM,CACnCvB,EAAI,MAAQuB,EAAO,SAAA,CACrB,CAAC,EACD,MAAMf,EAAcb,EAAmB,IAAA,EACvC,GAAIa,EAAa,CACf,MAAMiB,EAAYjB,EAAY,KAAME,GAAMA,EAAE,YAAcjB,CAAS,GAAG,UAClEgC,IACFzB,EAAI,MAAQyB,EACZF,EAAO,SAASE,CAAS,EAE7B,CACF,CAAC","x_google_ignoreList":[0,1]}