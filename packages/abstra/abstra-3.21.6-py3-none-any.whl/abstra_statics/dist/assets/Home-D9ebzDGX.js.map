{"version":3,"file":"Home-D9ebzDGX.js","sources":["../../src/apps/player/views/Home.vue"],"sourcesContent":["<template>\n  <div v-if=\"workspaceStore.state.workspace\" class=\"home-container\">\n    <AntFlex vertical gap=\"large\" class=\"cards-container\">\n      <AntText v-if=\"cards.length === 0\" type=\"secondary\" style=\"font-size: 18px\">\n        There are no forms available for you.\n      </AntText>\n      <AntCard\n        v-for=\"card in cards\"\n        v-else\n        :key=\"card.id\"\n        :class=\"['form-card', { loading: loading === card.id }]\"\n        :body-style=\"{ cursor: 'pointer' }\"\n        @click=\"goToForm(card.path, card.id)\"\n      >\n        <AntFlex gap=\"large\" align=\"center\" justify=\"space-between\">\n          <Component :is=\"iconPath(card.type)\" style=\"flex-shrink: 0; width: 22px; height: 18px\" />\n          <AntText style=\"font-size: 18px; font-weight: 500\">{{ card.name }}</AntText>\n          <PhArrowSquareOut v-if=\"loading !== card.id\" size=\"20\" />\n          <LoadingOutlined v-else style=\"font-size: 20px\" />\n        </AntFlex>\n      </AntCard>\n    </AntFlex>\n    <Watermark class=\"watermark\" page-id=\"home\" :locale=\"workspaceStore.state.workspace.language\" />\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { iconPath } from '@/apps/editor/views/workflow/state/metadata';\nimport Watermark from '@/form/components/Watermark.vue';\nimport { PhArrowSquareOut } from '@phosphor-icons/vue';\nimport { Card as AntCard, Flex as AntFlex, Typography as AntText } from 'ant-design-vue';\nimport { LoadingOutlined } from '@ant-design/icons-vue';\nimport { computed, ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { useWorkspaceStore } from '../store/workspaceStore';\n\nconst router = useRouter();\n\nconst workspaceStore = useWorkspaceStore();\n\nconst cards = computed(() => {\n  return workspaceStore.state.workspace?.sidebar.filter((item) => item.id !== 'home') || [];\n});\n\nconst loading = ref<string | null>(null);\n\nconst goToForm = async (path: string, cardId: string) => {\n  loading.value = cardId;\n  await router.push({\n    path: `/${path}`,\n  });\n  loading.value = null;\n};\n</script>\n\n<style scoped lang=\"scss\">\n.home-container {\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.cards-container {\n  width: fit-content;\n  justify-content: center;\n  align-items: center;\n  padding: 80px 0;\n}\n\n.form-card {\n  cursor: pointer;\n  width: 100%;\n  background-color: var(--background-color-main);\n\n  &:hover {\n    box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.1);\n  }\n\n  &.loading {\n    opacity: 0.8;\n    pointer-events: none;\n  }\n}\n</style>\n"],"names":["router","useRouter","workspaceStore","useWorkspaceStore","cards","computed","item","loading","ref","goToForm","path","cardId"],"mappings":"+gCAoCA,MAAMA,EAASC,EAAA,EAETC,EAAiBC,EAAA,EAEjBC,EAAQC,EAAS,IACdH,EAAe,MAAM,WAAW,QAAQ,OAAQI,GAASA,EAAK,KAAO,MAAM,GAAK,CAAA,CACxF,EAEKC,EAAUC,EAAmB,IAAI,EAEjCC,EAAW,MAAOC,EAAcC,IAAmB,CACvDJ,EAAQ,MAAQI,EAChB,MAAMX,EAAO,KAAK,CAChB,KAAM,IAAIU,CAAI,EAAA,CACf,EACDH,EAAQ,MAAQ,IAClB"}