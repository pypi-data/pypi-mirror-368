{"version":3,"file":"ProjectsView-BptyZHVn.js","sources":["../../node_modules/@phosphor-icons/vue/dist/icons/PhFolderOpen.vue.mjs","../../src/apps/console/views/Projects/projectsViewController.ts","../../src/apps/console/views/Projects/ProjectsView.vue"],"sourcesContent":["import { defineComponent as A, inject as l, computed as n, openBlock as t, createElementBlock as e, mergeProps as m, renderSlot as g, createCommentVNode as v, createElementVNode as o } from \"vue\";\nconst V = [\"width\", \"height\", \"fill\", \"transform\"], L = { key: 0 }, Z = /* @__PURE__ */ o(\"path\", { d: \"M248.23,112.31A20,20,0,0,0,232,104H220V88a20,20,0,0,0-20-20H132L105.34,48a20.12,20.12,0,0,0-12-4H40A20,20,0,0,0,20,64V208a12,12,0,0,0,12,12H211.1a12,12,0,0,0,11.33-8l28.49-81.47.06-.17A20,20,0,0,0,248.23,112.31ZM92,68l28.8,21.6A12,12,0,0,0,128,92h68v12H69.77a20,20,0,0,0-18.94,13.58L44,137.15V68ZM202.59,196H48.89l23.72-68H226.37Z\" }, null, -1), M = [\n  Z\n], y = { key: 1 }, f = /* @__PURE__ */ o(\"path\", {\n  d: \"M208,88v24H69.77a8,8,0,0,0-7.59,5.47L32,208V64a8,8,0,0,1,8-8H93.33a8,8,0,0,1,4.8,1.6L128,80h72A8,8,0,0,1,208,88Z\",\n  opacity: \"0.2\"\n}, null, -1), w = /* @__PURE__ */ o(\"path\", { d: \"M245,110.64A16,16,0,0,0,232,104H216V88a16,16,0,0,0-16-16H130.67L102.94,51.2a16.14,16.14,0,0,0-9.6-3.2H40A16,16,0,0,0,24,64V208a8,8,0,0,0,8,8H211.1a8,8,0,0,0,7.59-5.47l28.49-85.47A16.05,16.05,0,0,0,245,110.64ZM93.34,64,123.2,86.4A8,8,0,0,0,128,88h72v16H69.77a16,16,0,0,0-15.18,10.94L40,158.7V64Zm112,136H43.1l26.67-80H232Z\" }, null, -1), k = [\n  f,\n  w\n], x = { key: 2 }, S = /* @__PURE__ */ o(\"path\", { d: \"M245,110.64A16,16,0,0,0,232,104H216V88a16,16,0,0,0-16-16H130.67L102.94,51.2a16.14,16.14,0,0,0-9.6-3.2H40A16,16,0,0,0,24,64V208h0a8,8,0,0,0,8,8H211.1a8,8,0,0,0,7.59-5.47l28.49-85.47A16.05,16.05,0,0,0,245,110.64ZM93.34,64,123.2,86.4A8,8,0,0,0,128,88h72v16H69.77a16,16,0,0,0-15.18,10.94L40,158.7V64Z\" }, null, -1), z = [\n  S\n], C = { key: 3 }, B = /* @__PURE__ */ o(\"path\", { d: \"M243.36,111.81A14,14,0,0,0,232,106H214V88a14,14,0,0,0-14-14H130L101.74,52.8a14.06,14.06,0,0,0-8.4-2.8H40A14,14,0,0,0,26,64V208a6,6,0,0,0,6,6H211.1a6,6,0,0,0,5.69-4.1l28.49-85.47A14,14,0,0,0,243.36,111.81ZM40,62H93.34a2,2,0,0,1,1.2.4L124.4,84.8A6,6,0,0,0,128,86h72a2,2,0,0,1,2,2v18H69.77a14,14,0,0,0-13.28,9.57L38,171V64A2,2,0,0,1,40,62Zm193.9,58.63L206.78,202H40.33l27.54-82.63a2,2,0,0,1,1.9-1.37H232a2,2,0,0,1,1.9,2.63Z\" }, null, -1), N = [\n  B\n], b = { key: 4 }, E = /* @__PURE__ */ o(\"path\", { d: \"M245,110.64A16,16,0,0,0,232,104H216V88a16,16,0,0,0-16-16H130.67L102.94,51.2a16.14,16.14,0,0,0-9.6-3.2H40A16,16,0,0,0,24,64V208h0a8,8,0,0,0,8,8H211.1a8,8,0,0,0,7.59-5.47l28.49-85.47A16.05,16.05,0,0,0,245,110.64ZM93.34,64,123.2,86.4A8,8,0,0,0,128,88h72v16H69.77a16,16,0,0,0-15.18,10.94L40,158.7V64Zm112,136H43.1l26.67-80H232Z\" }, null, -1), P = [\n  E\n], W = { key: 5 }, $ = /* @__PURE__ */ o(\"path\", { d: \"M241.72,113a11.88,11.88,0,0,0-9.73-5H212V88a12,12,0,0,0-12-12H129.33l-28.8-21.6a12.05,12.05,0,0,0-7.2-2.4H40A12,12,0,0,0,28,64V208a4,4,0,0,0,4,4H211.09a4,4,0,0,0,3.79-2.74l28.49-85.47A11.86,11.86,0,0,0,241.72,113ZM40,60H93.33a4,4,0,0,1,2.4.8L125.6,83.2a4,4,0,0,0,2.4.8h72a4,4,0,0,1,4,4v20H69.76a12,12,0,0,0-11.38,8.21L36,183.35V64A4,4,0,0,1,40,60Zm195.78,61.26L208.2,204H37.55L66,118.74A4,4,0,0,1,69.76,116H232a4,4,0,0,1,3.79,5.26Z\" }, null, -1), j = [\n  $\n], F = {\n  name: \"PhFolderOpen\"\n}, D = /* @__PURE__ */ A({\n  ...F,\n  props: {\n    weight: {\n      type: String\n    },\n    size: {\n      type: [String, Number]\n    },\n    color: {\n      type: String\n    },\n    mirrored: {\n      type: Boolean\n    }\n  },\n  setup(d) {\n    const s = d, h = l(\"weight\", \"regular\"), c = l(\"size\", \"1em\"), _ = l(\"color\", \"currentColor\"), H = l(\"mirrored\", !1), a = n(() => s.weight ?? h), i = n(() => s.size ?? c), u = n(() => s.color ?? _), p = n(() => s.mirrored !== void 0 ? s.mirrored ? \"scale(-1, 1)\" : void 0 : H ? \"scale(-1, 1)\" : void 0);\n    return (r, O) => (t(), e(\"svg\", m({\n      xmlns: \"http://www.w3.org/2000/svg\",\n      viewBox: \"0 0 256 256\",\n      width: i.value,\n      height: i.value,\n      fill: u.value,\n      transform: p.value\n    }, r.$attrs), [\n      g(r.$slots, \"default\"),\n      a.value === \"bold\" ? (t(), e(\"g\", L, M)) : a.value === \"duotone\" ? (t(), e(\"g\", y, k)) : a.value === \"fill\" ? (t(), e(\"g\", x, z)) : a.value === \"light\" ? (t(), e(\"g\", C, N)) : a.value === \"regular\" ? (t(), e(\"g\", b, P)) : a.value === \"thin\" ? (t(), e(\"g\", W, j)) : v(\"\", !0)\n    ], 16, V));\n  }\n});\nexport {\n  D as default\n};\n","import { askForConfirmation } from '@/utils/ant-design';\nimport { isEqual } from 'lodash';\nimport { computed, Ref, ref, watch } from 'vue';\nimport {\n  MemberAPI,\n  MemberDTO,\n  OrganizationModel,\n  ProjectAPI,\n  ProjectModel,\n} from '../../apis/cloud';\nimport { FolderAPI, FolderDTO } from '../../apis/cloud/folder';\n\ntype Handlers = {\n  navigateToProject: (projectId: string) => void;\n};\n\ntype Apis = {\n  member: MemberAPI;\n  folder: FolderAPI;\n  project: ProjectAPI;\n};\n\ntype EditingFolder = {\n  id: string;\n  mode: 'edit';\n};\n\ntype CreatingFolder = {\n  mode: 'create';\n};\n\ntype DraftFolder = {\n  modalTitle: string;\n  currentName: string;\n  currentMemberIds: string[];\n  newName: string;\n  newMemberIds: string[];\n  buttonLoading: 'delete' | 'save' | null;\n} & (EditingFolder | CreatingFolder);\n\ntype EditingProject = {\n  id: string;\n  mode: 'edit';\n};\n\ntype CreatingProject = {\n  mode: 'create';\n};\n\ntype DraftProject = {\n  modalTitle: string;\n  currentName: string;\n  currentFolderId: string;\n  newFolderId: string;\n  newName: string;\n  buttonLoading: 'delete' | 'save' | null;\n} & (EditingProject | CreatingProject);\n\ntype FetchedState = {\n  projects: ProjectModel[];\n  members: MemberDTO[];\n  organization: OrganizationModel;\n  folders: FolderDTO[];\n  currentMember: MemberDTO | null;\n};\n\nexport class ProjectsViewController {\n  fetchedState = ref<FetchedState | null>(null);\n  activeFolderIds: Ref<string[]>;\n  draftFolder = ref<DraftFolder | null>(null);\n  draftProject = ref<DraftProject | null>(null);\n  searchQuery = ref('');\n  isDraftProjectValid = computed(() => this.validateDraftProject());\n  isDraftFolderValid = computed(() => this.validateDraftFolder());\n  memberOptions = computed(() => this.getMemberOptions());\n  folderOptions = computed(() => this.getFolderOptions());\n  private organizationId: string;\n  private currentUserEmail: string;\n  private handlers: Handlers;\n  private apis: Apis;\n\n  constructor(params: {\n    organizationId: string;\n    currentUserEmail: string;\n    handlers: Handlers;\n    apis: Apis;\n    routeHash: string;\n  }) {\n    this.organizationId = params.organizationId;\n    this.currentUserEmail = params.currentUserEmail;\n    this.handlers = params.handlers;\n    this.apis = params.apis;\n    if (params.routeHash.startsWith('#')) {\n      this.activeFolderIds = ref([params.routeHash.slice(1)]);\n    } else {\n      this.activeFolderIds = ref([]);\n    }\n  }\n\n  async refetchState(closeModals = true) {\n    if (closeModals) {\n      this.closeModals();\n    }\n\n    this.fetchedState.value = null;\n\n    const [projects, organization, members, folders] = await Promise.all([\n      ProjectModel.list(this.organizationId),\n      OrganizationModel.get(this.organizationId),\n      this.apis.member.list(this.organizationId),\n      this.apis.folder.list(this.organizationId),\n    ]);\n\n    const currentMember = members.find((m) => m.email === this.currentUserEmail) ?? null;\n\n    if (folders.length === 1) {\n      this.activeFolderIds.value?.includes(folders[0].id);\n    }\n\n    this.fetchedState.value = {\n      projects: projects.sort((a, b) => a.name.localeCompare(b.name)),\n      organization,\n      members,\n      folders: folders.sort((a, b) => a.name.localeCompare(b.name)),\n      currentMember,\n    };\n\n    watch(this.searchQuery, (value) => {\n      if (value.trim()) {\n        this.activeFolderIds.value = this.listFolders().map((f) => f.id);\n      } else {\n        this.activeFolderIds.value = [];\n      }\n    });\n  }\n\n  deleteProject = async () => {\n    if (!this.draftProject.value || !(this.draftProject.value.mode === 'edit')) {\n      return;\n    }\n\n    const confirmed = await askForConfirmation(\n      'Are you sure you want to delete this project? All data will be lost.',\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    this.draftProject.value = {\n      ...this.draftProject.value,\n      buttonLoading: 'delete',\n    };\n\n    await this.apis.project.delete(this.draftProject.value.id);\n    await this.refetchState();\n  };\n\n  deleteFolder = async () => {\n    if (!this.draftFolder.value || this.draftFolder.value.mode !== 'edit') {\n      throw new Error('[PROJECTS_CONTROLLER] Invalid state deleting folder');\n    }\n\n    if (this.getFolderProjects(this.draftFolder.value.id).length > 0) {\n      return;\n    }\n\n    const confirmed = await askForConfirmation(\n      'Are you sure you want to delete this empty folder?',\n      {\n        okText: 'Delete',\n        cancelText: 'Cancel',\n      },\n    );\n\n    if (!confirmed) {\n      return;\n    }\n\n    this.draftFolder.value = {\n      ...this.draftFolder.value,\n      buttonLoading: 'delete',\n    };\n\n    await this.apis.folder.delete(this.organizationId, this.draftFolder.value.id);\n    await this.refetchState();\n  };\n\n  duplicateProject = async ({ key }: { key: string }) => {\n    const project = this.fetchedState.value?.projects.find((f) => f.id === key);\n    if (project) {\n      const newProject = await project.duplicate();\n      this.handlers.navigateToProject(newProject.id);\n    }\n  };\n\n  openEditFolderModal = (folder: FolderDTO) => {\n    const projectIds = this.fetchedState.value?.projects\n      .filter((p) => p.folderId === folder.id)\n      .map((p) => p.id);\n\n    if (!projectIds) {\n      return;\n    }\n\n    this.draftFolder.value = {\n      currentName: folder.name,\n      modalTitle: `${folder.name} - Settings`,\n      id: folder.id,\n      mode: 'edit',\n      newName: folder.name,\n      newMemberIds: [...folder.memberIds],\n      currentMemberIds: folder.memberIds,\n      buttonLoading: null,\n    };\n  };\n\n  openCreateFolderModal = () => {\n    if (!this.fetchedState.value) {\n      throw new Error('[PROJECTS_CONTROLLER] Invalid state opening create folder modal');\n    }\n\n    this.draftFolder.value = {\n      currentName: '',\n      mode: 'create',\n      currentMemberIds: [],\n      modalTitle: 'Create Folder',\n      newName: '',\n      newMemberIds: [this.fetchedState.value.currentMember?.id].filter(Boolean) as string[],\n      buttonLoading: null,\n    };\n  };\n\n  openCreateProjectModal = (newFolderId = '') => {\n    this.draftProject.value = {\n      currentName: '',\n      mode: 'create',\n      currentFolderId: '',\n      modalTitle: 'Create Project',\n      newName: '',\n      newFolderId,\n      buttonLoading: null,\n    };\n  };\n\n  openEditProjectModal = (project: ProjectModel) => {\n    this.draftProject.value = {\n      id: project.id,\n      mode: 'edit',\n      currentName: project.name,\n      currentFolderId: project.folderId,\n      modalTitle: `Edit Project: ${project.name}`,\n      newName: project.name,\n      newFolderId: project.folderId,\n      buttonLoading: null,\n    };\n  };\n\n  saveFolder = async () => {\n    if (!this.draftFolder.value) {\n      return;\n    }\n\n    this.draftFolder.value = {\n      ...this.draftFolder.value,\n      buttonLoading: 'save',\n    };\n\n    if (this.draftFolder.value.mode === 'edit') {\n      await this.apis.folder.update(this.organizationId, {\n        id: this.draftFolder.value.id,\n        name: this.draftFolder.value.newName,\n        memberIds: this.draftFolder.value.newMemberIds,\n        organizationId: this.organizationId,\n      });\n    } else if (this.draftFolder.value.mode === 'create') {\n      await this.apis.folder.create({\n        organizationId: this.organizationId,\n        name: this.draftFolder.value.newName,\n        memberIds: this.draftFolder.value.newMemberIds,\n      });\n    }\n\n    await this.refetchState();\n  };\n\n  saveProject = async () => {\n    if (!this.draftProject.value) {\n      return;\n    }\n\n    this.draftProject.value = {\n      ...this.draftProject.value,\n      buttonLoading: 'save',\n    };\n\n    if (this.draftProject.value.mode === 'edit') {\n      await this.apis.project.update(this.draftProject.value.id, {\n        name: this.draftProject.value.newName,\n        folderId: this.draftProject.value.newFolderId,\n      });\n    } else if (this.draftProject.value.mode === 'create') {\n      await this.apis.project.create({\n        name: this.draftProject.value.newName,\n        folderId: this.draftProject.value.newFolderId,\n        organizationId: this.organizationId,\n      });\n    }\n    await this.refetchState();\n  };\n\n  closeModals = () => {\n    this.draftFolder.value = null;\n    this.draftProject.value = null;\n    this.activeFolderIds.value = [];\n  };\n\n  private validateDraftFolder = () => {\n    if (!this.draftFolder.value) {\n      return false;\n    }\n\n    const changedName = this.draftFolder.value.newName !== this.draftFolder.value.currentName;\n    const nameValid = this.draftFolder.value.newName.trim().length > 0;\n    const nameUnique = !this.fetchedState.value?.folders.some(\n      (f) => f.name === this.draftFolder.value?.newName,\n    );\n\n    const changedMembers = !isEqual(\n      this.draftFolder.value.newMemberIds,\n      this.draftFolder.value.currentMemberIds,\n    );\n    const membersValid = this.draftFolder.value.newMemberIds.length > 0;\n\n    if (this.draftFolder.value.mode === 'edit') {\n      return (changedName && nameValid && nameUnique) || (changedMembers && membersValid);\n    }\n\n    return nameValid && nameUnique && membersValid;\n  };\n\n  private validateDraftProject = () => {\n    if (!this.draftProject.value) {\n      return false;\n    }\n\n    const folderIdValid = !!this.draftProject.value.newFolderId;\n    const nameValid = this.draftProject.value.newName.trim().length > 0;\n    const changedName = this.draftProject.value.newName !== this.draftProject.value.currentName;\n    const changedFolder =\n      this.draftProject.value.newFolderId !== this.draftProject.value.currentFolderId;\n\n    if (this.draftProject.value.mode === 'edit') {\n      return (changedName && nameValid) || changedFolder;\n    }\n\n    return folderIdValid && nameValid;\n  };\n\n  private getMemberOptions = () => {\n    return this.fetchedState.value?.members\n      .map((m) => ({\n        label: m.email,\n        value: m.id,\n        disabled: m.id === this.fetchedState.value?.currentMember?.id,\n      }))\n      .sort((a, b) => a.label.localeCompare(b.label));\n  };\n\n  private getFolderOptions = () => {\n    return this.fetchedState.value?.folders.map((f) => ({\n      label: f.name,\n      value: f.id,\n    }));\n  };\n\n  getFolderProjects = (folderId: string): ProjectModel[] =>\n    this.fetchedState.value?.projects.filter(\n      (p) =>\n        p.folderId === folderId &&\n        (!this.searchQuery.value.trim() ||\n          p.name.toLowerCase().includes(this.searchQuery.value.toLowerCase())),\n    ) as ProjectModel[];\n\n  listFolders(): FolderDTO[] {\n    if (this.searchQuery.value.trim()) {\n      return (\n        this.fetchedState.value?.folders.filter((f) => this.getFolderProjects(f.id).length > 0) ??\n        []\n      );\n    } else {\n      return this.fetchedState.value?.folders ?? [];\n    }\n  }\n}\n","<template>\n  <AntTitle>Projects</AntTitle>\n  <AntFlex\n    style=\"\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      gap: 5px;\n      margin: 0px 0px 50px;\n    \"\n  >\n    <AntInputSearch\n      v-model:value=\"controller.searchQuery.value\"\n      placeholder=\"Search projects\"\n      style=\"width: 300px\"\n    />\n    <AbstraButton @click=\"controller.openCreateFolderModal\">\n      <PhFolderPlus /> Create folder\n    </AbstraButton>\n  </AntFlex>\n  <AntFlex vertical gap=\"middle\" style=\"padding-bottom: 50px\">\n    <AntCollapse\n      v-for=\"folder in controller.listFolders()\"\n      :key=\"folder.id\"\n      v-model:active-key=\"controller.activeFolderIds.value\"\n    >\n      <AntCollapsePanel :key=\"folder.id\" :header=\"folder.name\">\n        <AntList :locale=\"{ emptyText: 'Empty folder' }\">\n          <AntListItem\n            v-for=\"project in controller.getFolderProjects(folder.id)\"\n            :key=\"project.id\"\n            type=\"link\"\n            class=\"project-list-item\"\n          >\n            <PhCube />\n            <AntLink :href=\"`/projects/${project.id}`\">{{ project.name }}</AntLink>\n            <AbstraButton\n              size=\"small\"\n              style=\"position: absolute; right: 10px\"\n              @click.stop=\"controller.openEditProjectModal(project as ProjectModel)\"\n            >\n              <PhPencilSimple />\n            </AbstraButton>\n          </AntListItem>\n        </AntList>\n        <template #extra>\n          <AntFlex gap=\"10\">\n            <AntFlex gap=\"5\" align=\"flex-start\">\n              <PhCube size=\"20\" />\n              {{ `${controller.getFolderProjects(folder.id)?.length} projects` }}\n            </AntFlex>\n            <AntFlex gap=\"5\">\n              <PhUsersThree size=\"20\" />\n              {{ `${folder.memberIds.length} editors` }}\n            </AntFlex>\n            <AbstraButton size=\"small\" @click.stop=\"controller.openCreateProjectModal(folder.id)\">\n              <PhFilePlus /> New project\n            </AbstraButton>\n            <AbstraButton size=\"small\" @click.stop=\"controller.openEditFolderModal(folder)\">\n              <PhGear />\n            </AbstraButton>\n          </AntFlex>\n        </template>\n      </AntCollapsePanel>\n      <template #expandIcon=\"{ isActive }\">\n        <PhFolderOpen v-if=\"isActive\" size=\"20\" />\n        <PhFolder v-else size=\"20\" />\n      </template>\n    </AntCollapse>\n  </AntFlex>\n  <AntSpin v-if=\"!controller.fetchedState.value\" style=\"width: 100%\" />\n  <AntEmpty v-else-if=\"controller.listFolders().length === 0\">\n    <template #description>\n      <div>\n        <p v-if=\"controller.searchQuery.value.trim()\">\n          No projects found for the search query \"{{ controller.searchQuery.value }}\"\n        </p>\n        <p v-else>No folders found</p>\n        <p>Click the button below to create a new folder</p>\n      </div>\n    </template>\n    <AbstraButton\n      v-if=\"controller.searchQuery.value.trim()\"\n      type=\"primary\"\n      @click=\"controller.openCreateProjectModal()\"\n    >\n      <PhFilePlus /> Create project\n    </AbstraButton>\n    <AbstraButton v-else type=\"primary\" @click=\"controller.openCreateFolderModal\">\n      <PhFolderPlus /> Create folder\n    </AbstraButton>\n  </AntEmpty>\n\n  <AntModal\n    :open=\"!!controller.draftFolder.value\"\n    :title=\"controller.draftFolder.value?.modalTitle\"\n    @cancel=\"controller.closeModals\"\n  >\n    <AntForm v-if=\"controller.draftFolder.value\" layout=\"vertical\">\n      <AntFormItem label=\"Name\">\n        <AntInput v-model:value=\"controller.draftFolder.value.newName\" />\n      </AntFormItem>\n      <AntFormItem label=\"Editors\" tooltip=\"Only selected people will be able to see this folder\">\n        <AntSelect\n          v-model:value=\"controller.draftFolder.value.newMemberIds\"\n          mode=\"multiple\"\n          :options=\"controller.memberOptions.value\"\n          :filter-option=\"filterMemberOptionsByLabel\"\n          placeholder=\"Choose who can see this folder\"\n        />\n      </AntFormItem>\n    </AntForm>\n    <template #footer>\n      <AntFlex\n        :justify=\"controller.draftFolder.value?.mode === 'edit' ? 'space-between' : 'flex-end'\"\n      >\n        <AbstraButton\n          v-if=\"controller.draftFolder.value?.mode === 'edit'\"\n          danger\n          disabled-tooltip=\"Cannot delete folder with projects\"\n          :disabled=\"controller.getFolderProjects(controller.draftFolder.value?.id).length > 0\"\n          :loading=\"controller.draftFolder.value?.buttonLoading === 'delete'\"\n          @click.stop=\"controller.deleteFolder()\"\n        >\n          <PhTrash />\n          Delete folder\n        </AbstraButton>\n\n        <AntFlex justify=\"flex-end\">\n          <AbstraButton @click=\"controller.closeModals\"> Cancel </AbstraButton>\n          <AbstraButton\n            type=\"primary\"\n            :disabled=\"!controller.isDraftFolderValid.value\"\n            :loading=\"controller.draftFolder.value?.buttonLoading === 'save'\"\n            @click=\"controller.saveFolder\"\n          >\n            Save\n          </AbstraButton>\n        </AntFlex>\n      </AntFlex>\n    </template>\n  </AntModal>\n  <AntModal\n    :open=\"!!controller.draftProject.value\"\n    :title=\"controller.draftProject.value?.modalTitle\"\n    @cancel=\"controller.closeModals\"\n  >\n    <AntForm v-if=\"controller.draftProject.value\" layout=\"vertical\">\n      <AntFormItem label=\"Name\">\n        <AntInput v-model:value=\"controller.draftProject.value.newName\" />\n      </AntFormItem>\n      <AntFormItem label=\"Folder\">\n        <AntSelect\n          v-model:value=\"controller.draftProject.value.newFolderId\"\n          :options=\"controller.folderOptions.value\"\n          placeholder=\"Choose a folder\"\n        />\n      </AntFormItem>\n    </AntForm>\n    <template #footer>\n      <AntFlex\n        :justify=\"controller.draftProject.value?.mode === 'edit' ? 'space-between' : 'flex-end'\"\n      >\n        <AbstraButton\n          v-if=\"controller.draftProject.value?.mode === 'edit'\"\n          danger\n          :loading=\"controller.draftProject.value?.buttonLoading === 'delete'\"\n          @click=\"controller.deleteProject\"\n        >\n          <PhTrash />\n          Delete project\n        </AbstraButton>\n        <AntFlex justify=\"flex-end\">\n          <AbstraButton @click=\"controller.closeModals\"> Cancel </AbstraButton>\n          <AbstraButton\n            :disabled=\"!controller.isDraftProjectValid.value\"\n            type=\"primary\"\n            :loading=\"controller.draftProject.value?.buttonLoading === 'save'\"\n            @click=\"controller.saveProject\"\n          >\n            Save\n          </AbstraButton>\n        </AntFlex>\n      </AntFlex>\n    </template>\n  </AntModal>\n</template>\n\n<script lang=\"ts\" setup>\nimport AbstraButton from '@/components/AbstraButton.vue';\nimport {\n  PhCube,\n  PhFilePlus,\n  PhFolder,\n  PhFolderOpen,\n  PhFolderPlus,\n  PhGear,\n  PhPencilSimple,\n  PhTrash,\n  PhUsersThree,\n} from '@phosphor-icons/vue';\nimport {\n  Collapse as AntCollapse,\n  CollapsePanel as AntCollapsePanel,\n  Empty as AntEmpty,\n  Flex as AntFlex,\n  Form as AntForm,\n  FormItem as AntFormItem,\n  Input as AntInput,\n  InputSearch as AntInputSearch,\n  TypographyLink as AntLink,\n  List as AntList,\n  ListItem as AntListItem,\n  Modal as AntModal,\n  Select as AntSelect,\n  Spin as AntSpin,\n  TypographyTitle as AntTitle,\n} from 'ant-design-vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport { MemberAPI, ProjectAPI, ProjectModel } from '../../apis/cloud';\nimport { FolderAPI } from '../../apis/cloud/folder';\nimport { authorManager } from '../../authn/authorManager';\nimport { ProjectsViewController } from './projectsViewController';\n\nconst route = useRoute();\nconst organizationId = route.params.organizationId as string;\nconst router = useRouter();\n\nconst handlers = {\n  navigateToProject: (projectId: string) =>\n    router.push({ name: 'project', params: { organizationId, projectId } }),\n};\n\nconst currentUserEmail = authorManager.getAuthor()?.claims.email;\n\nif (!currentUserEmail) {\n  throw new Error('User not logged in');\n}\n\nconst filterMemberOptionsByLabel = (input: string, option: { label: string }) =>\n  option.label.toLowerCase().includes(input.toLowerCase());\n\nconst apis = {\n  member: new MemberAPI(),\n  project: new ProjectAPI(),\n  folder: new FolderAPI(),\n};\n\nconst controller = new ProjectsViewController({\n  organizationId,\n  currentUserEmail,\n  handlers,\n  apis,\n  routeHash: location.hash,\n});\n\ncontroller.refetchState(false);\n</script>\n<style scoped lang=\"scss\">\n.project-list-item {\n  padding: 10px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  gap: 10px;\n  &:hover {\n    background-color: #f5f5f5;\n  }\n}\n</style>\n"],"names":["V","L","Z","o","M","y","f","w","k","x","S","z","C","B","N","b","E","P","W","$","j","F","D","A","d","s","h","l","c","_","H","a","n","i","u","p","r","O","t","e","m","g","v","ProjectsViewController","ref","computed","params","closeModals","projects","organization","members","folders","ProjectModel","OrganizationModel","currentMember","watch","value","askForConfirmation","key","project","newProject","folder","newFolderId","changedName","nameValid","nameUnique","changedMembers","isEqual","membersValid","folderIdValid","changedFolder","folderId","organizationId","useRoute","router","useRouter","handlers","projectId","currentUserEmail","authorManager","filterMemberOptionsByLabel","input","option","apis","MemberAPI","ProjectAPI","FolderAPI","controller"],"mappings":"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","x_google_ignoreList":[0]}