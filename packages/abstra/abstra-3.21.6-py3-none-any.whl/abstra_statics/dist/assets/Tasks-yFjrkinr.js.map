{"version":3,"file":"Tasks-yFjrkinr.js","sources":["../../node_modules/@ant-design/icons-svg/es/asn/SyncOutlined.js","../../node_modules/@ant-design/icons-vue/es/icons/SyncOutlined.js","../../src/services/tasks/TasksView.vue","../../src/apps/console/views/Tasks.vue"],"sourcesContent":["// This icon file is generated automatically.\nvar SyncOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M168 504.2c1-43.7 10-86.1 26.9-126 17.3-41 42.1-77.7 73.7-109.4S337 212.3 378 195c42.4-17.9 87.4-27 133.9-27s91.5 9.1 133.8 27A341.5 341.5 0 01755 268.8c9.9 9.9 19.2 20.4 27.8 31.4l-60.2 47a8 8 0 003 14.1l175.7 43c5 1.2 9.9-2.6 9.9-7.7l.8-180.9c0-6.7-7.7-10.5-12.9-6.3l-56.4 44.1C765.8 155.1 646.2 92 511.8 92 282.7 92 96.3 275.6 92 503.8a8 8 0 008 8.2h60c4.4 0 7.9-3.5 8-7.8zm756 7.8h-60c-4.4 0-7.9 3.5-8 7.8-1 43.7-10 86.1-26.9 126-17.3 41-42.1 77.8-73.7 109.4A342.45 342.45 0 01512.1 856a342.24 342.24 0 01-243.2-100.8c-9.9-9.9-19.2-20.4-27.8-31.4l60.2-47a8 8 0 00-3-14.1l-175.7-43c-5-1.2-9.9 2.6-9.9 7.7l-.7 181c0 6.7 7.7 10.5 12.9 6.3l56.4-44.1C258.2 868.9 377.8 932 512.2 932c229.2 0 415.5-183.7 419.8-411.8a8 8 0 00-8-8.2z\" } }] }, \"name\": \"sync\", \"theme\": \"outlined\" };\nexport default SyncOutlined;\n","import { createVNode as _createVNode } from \"vue\";\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? Object(arguments[i]) : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport SyncOutlinedSvg from \"@ant-design/icons-svg/es/asn/SyncOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar SyncOutlined = function SyncOutlined(props, context) {\n  var p = _objectSpread({}, props, context.attrs);\n\n  return _createVNode(AntdIcon, _objectSpread({}, p, {\n    \"icon\": SyncOutlinedSvg\n  }), null);\n};\n\nSyncOutlined.displayName = 'SyncOutlined';\nSyncOutlined.inheritAttrs = false;\nexport default SyncOutlined;","<template>\n  <AntForm layout=\"vertical\">\n    <AntRow :gutter=\"10\">\n      <AntCol :span=\"10\">\n        <AntFormItem label=\"Stage\">\n          <AntSelect\n            v-model:value=\"state.filters.stage\"\n            :options=\"state.filterOptions.stages\"\n            placeholder=\"All\"\n            allow-clear\n          />\n        </AntFormItem>\n      </AntCol>\n      <AntCol :span=\"6\">\n        <AntFormItem label=\"Status\">\n          <AntSelect\n            v-model:value=\"state.filters.status\"\n            :options=\"state.filterOptions.statuses\"\n            option-label=\"label\"\n            option-value=\"value\"\n            :filter=\"false\"\n            placeholder=\"All\"\n            allow-clear\n          />\n        </AntFormItem>\n      </AntCol>\n      <AntCol :span=\"8\">\n        <AntFormItem label=\"Created at date\">\n          <AntRangePicker v-model:value=\"state.filters.dateRange\" style=\"width: 100%\" />\n        </AntFormItem>\n      </AntCol>\n    </AntRow>\n  </AntForm>\n  <AntTable\n    :columns=\"getColumns()\"\n    :data-source=\"tasksJoinStages\"\n    :scroll=\"{ x: 'max-content', y: 1000 }\"\n    bordered\n    size=\"small\"\n    :pagination=\"{\n      current: state.pagination.currentIndex + 1,\n      pageSize: state.pagination.pageSize,\n      total: state.pagination.totalCount,\n    }\"\n    @change=\"handleTableChange\"\n  >\n    <template #bodyCell=\"{ column, text, record }\">\n      <template v-if=\"column.key === 'payload'\">\n        <AntTree :tree-data=\"treeData(record.payload)\" :selectable=\"false\" />\n      </template>\n      <template v-else-if=\"column.key === 'targetStageTitle'\">\n        <AntText v-if=\"record.deleted\">Not found</AntText>\n        <AntFlex v-else gap=\"small\" justify=\"center\">\n          <Component :is=\"stageIcon(record.targetStageType)\" size=\"20\" />\n          <AntLink v-if=\"editor\" :href=\"getStageLink(record.targetStageType, record.targetStageId)\">\n            {{ record.targetStageTitle }}\n          </AntLink>\n          <AntText v-else>{{ record.targetStageTitle }}</AntText>\n        </AntFlex>\n      </template>\n      <template v-else-if=\"column.dataIndex === 'status'\">\n        <AntFlex gap=\"small\" justify=\"center\">\n          <AntTag>\n            {{ capitalizeFirstLetter(String(text)) }}\n            <SyncOutlined v-if=\"text === 'started'\" :spin=\"true\" style=\"margin-left: 4px\" />\n          </AntTag>\n        </AntFlex>\n      </template>\n      <template v-else-if=\"column.dataIndex === 'actions'\">\n        <AbstraButton\n          type=\"text\"\n          size=\"small\"\n          :tooltip=\"`Copy Payload Data`\"\n          @click.stop=\"copyToClipboard(record.payload)\"\n        >\n          <PhCopy />\n        </AbstraButton>\n      </template>\n      <template v-else-if=\"isEmptyDataColumn(column)\">\n        <div style=\"min-width: 100px\" />\n      </template>\n    </template>\n    <template #footer>\n      <AntRow justify=\"end\" :gutter=\"10\">\n        <AntCol>\n          <AntSpin size=\"small\" />\n        </AntCol>\n        <AntCol>\n          <AntText> auto updating </AntText>\n        </AntCol>\n      </AntRow>\n    </template>\n  </AntTable>\n</template>\n\n<script lang=\"ts\" setup>\nimport AbstraButton from '@/components/AbstraButton.vue';\nimport { ITasksRepository } from '@/models/tasks';\nimport { PhCopy } from '@phosphor-icons/vue';\nimport {\n  Col as AntCol,\n  Flex as AntFlex,\n  Form as AntForm,\n  FormItem as AntFormItem,\n  TypographyLink as AntLink,\n  RangePicker as AntRangePicker,\n  Row as AntRow,\n  Select as AntSelect,\n  Spin as AntSpin,\n  Table as AntTable,\n  Tag as AntTag,\n  TypographyText as AntText,\n  Tree as AntTree,\n  message,\n} from 'ant-design-vue';\nimport { ColumnType, TablePaginationConfig } from 'ant-design-vue/es/table';\nimport { computed, onMounted, onUnmounted } from 'vue';\nimport { TasksController } from './tasksController';\n\nimport { stageIcon } from '@/apps/editor/views/workflow/state/metadata';\nimport { treeData } from '@/utils/ant-design';\nimport { capitalizeFirstLetter } from '@/utils/string';\nimport { SyncOutlined } from '@ant-design/icons-vue';\n\nconst props = defineProps<{\n  api: ITasksRepository;\n  stages:\n    | { id: string; stageTitle: string; stageType: 'form' | 'script' | 'hook' | 'job' }[]\n    | null;\n  editor?: boolean;\n}>();\n\nconst { setup, tearDown, state, getColumns, fetchTasks, clearAllTasks } = TasksController({\n  api: props.api,\n  poll: true,\n  stages: props.stages,\n});\n\nconst isEmptyDataColumn = (column: ColumnType) =>\n  column.dataIndex === undefined &&\n  'children' in column &&\n  Array.isArray(column.children) &&\n  column.children.length === 0;\n\nconst tasksJoinStages = computed(() => {\n  if (!props.stages) {\n    return state.tasks.map((task) => ({\n      ...task,\n      deleted: false,\n      completedAt: task.completed?.at\n        ? new Date(task.completed.at).toLocaleString()\n        : 'Not completed',\n      createdAt: new Date(task.created.at).toLocaleString(),\n    }));\n  }\n  return state.tasks.map((task) => {\n    const stage = props.stages?.find((s) => s.id === task.targetStageId);\n    if (!stage)\n      return {\n        ...task,\n        targetStageTitle: null,\n        targetStageType: null,\n        completedAt: task.completed?.at\n          ? new Date(task.completed.at).toLocaleString()\n          : 'Not completed',\n        createdAt: new Date(task.created.at).toLocaleString(),\n        deleted: true,\n      };\n    return {\n      ...task,\n      targetStageTitle: stage.stageTitle,\n      targetStageType: stage.stageType,\n      completedAt: task.completed?.at\n        ? new Date(task.completed.at).toLocaleString()\n        : 'Not completed',\n      createdAt: new Date(task.created.at).toLocaleString(),\n      deleted: false,\n    };\n  });\n});\n\nconst handleTableChange = (pag: TablePaginationConfig, _filters: unknown, _sorter: unknown) => {\n  const currentPage = pag.current ?? 1;\n  const pageSize = pag.pageSize ?? 10;\n\n  state.pagination.currentIndex = currentPage - 1;\n  state.pagination.pageSize = pageSize;\n  fetchTasks();\n};\n\nconst getStageLink = (stageType: string, stageId: string) => {\n  return `/_editor/${stageType}/${stageId}`;\n};\n\nconst copyToClipboard = (value: unknown) => {\n  if (typeof value === 'object') {\n    navigator.clipboard.writeText(JSON.stringify(value));\n  } else {\n    navigator.clipboard.writeText(String(value));\n  }\n  message.success({\n    content: 'Copied to clipboard',\n  });\n};\n\ndefineExpose({\n  clearAllTasks,\n});\n\nonMounted(() => setup());\nonUnmounted(() => tearDown());\n</script>\n","<template>\n  <AntTitle>Tasks</AntTitle>\n  <TasksTableView v-if=\"stages\" class=\"tasks\" :api=\"api\" :stages=\"stages\" />\n</template>\n\n<script setup lang=\"ts\">\nimport TasksTableView from '@/services/tasks/TasksView.vue';\nimport { RemoteTasksRepository } from '@/models/tasks';\nimport { TypographyTitle as AntTitle } from 'ant-design-vue';\nimport { useRoute } from 'vue-router';\nimport { Build, BuildSpec, ProjectModel } from '../apis/cloud';\nimport { asyncComputed } from '@/utils/asyncComputed';\nimport { computed } from 'vue';\n\nconst route = useRoute();\nconst projectId = route.params.projectId as string;\n\nconst api = new RemoteTasksRepository(projectId);\n\nconst { result } = asyncComputed(async () => {\n  const builds = await Build.list(projectId);\n  const latest = builds.find((b) => b.latest);\n  if (!latest) return null;\n\n  const [buildSpec, project] = await Promise.all([\n    BuildSpec.get(latest.id),\n    ProjectModel.get(projectId),\n  ]);\n  return { buildSpec, project };\n});\n\nconst stages = computed(() => {\n  if (!result.value) return null;\n  if (!result.value.buildSpec) return null;\n  return result.value.buildSpec.runtimes.map((runtime) => ({\n    id: runtime.id,\n    stageTitle: runtime.title,\n    stageType: runtime.type,\n  }));\n});\n</script>\n"],"names":["SyncOutlined","_objectSpread","target","i","source","ownKeys","sym","key","_defineProperty","obj","value","props","context","p","_createVNode","AntdIcon","SyncOutlinedSvg","setup","tearDown","state","getColumns","fetchTasks","clearAllTasks","TasksController","isEmptyDataColumn","column","tasksJoinStages","computed","task","stage","s","handleTableChange","pag","_filters","_sorter","currentPage","pageSize","getStageLink","stageType","stageId","copyToClipboard","message","__expose","onMounted","onUnmounted","projectId","useRoute","api","RemoteTasksRepository","result","asyncComputed","latest","Build","b","buildSpec","project","BuildSpec","ProjectModel","stages","runtime"],"mappings":"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","x_google_ignoreList":[0,1]}