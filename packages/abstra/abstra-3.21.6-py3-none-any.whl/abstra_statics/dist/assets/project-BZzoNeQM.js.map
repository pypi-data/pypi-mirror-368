{"version":3,"file":"project-BZzoNeQM.js","sources":["../../src/apps/console/apis/cloud/project.ts"],"sourcesContent":["import {\n  CloudApiConsoleProjectDuplicateResponse,\n  CloudApiConsoleWebEditorStartResponse,\n  CommonProject,\n} from '@/contracts.generated';\nimport { ActiveRecord } from '@/utils/record';\nimport { CloudApiGateway } from './gateway';\n\ntype ProjectUpdateErrorResponse = {\n  error: 'subdomain-already-in-use';\n};\n\ntype ProjectUpdateResponse = CommonProject | ProjectUpdateErrorResponse;\n\nexport type QueryReturns = {\n  fields: Record<string, any>[];\n  result: Record<string, any>[];\n};\n\nexport type ExecuteQueryResponse = {\n  errors: string[];\n  returns: QueryReturns;\n};\n\nclass SubdomainAlreadyInUseError extends Error {\n  constructor() {\n    super('Subdomain already in use');\n  }\n}\n\ntype PodStatus = 'Pending' | 'Running' | 'Succeeded' | 'Failed' | 'Unknown';\nexport type DeployStatus = { buildId: string | null; status: PodStatus };\n\nexport class ProjectAPI {\n  private urlPath = `projects`;\n\n  async create({\n    name,\n    organizationId,\n    folderId,\n  }: {\n    organizationId: string;\n    name: string;\n    folderId: string;\n  }): Promise<CommonProject> {\n    return CloudApiGateway.post(`organizations/${organizationId}/${this.urlPath}`, {\n      name,\n      folderId,\n    });\n  }\n\n  async delete(id: string): Promise<void> {\n    await CloudApiGateway.delete(`/${this.urlPath}/${id}`);\n  }\n\n  async duplicate(id: string): Promise<CloudApiConsoleProjectDuplicateResponse> {\n    await new Promise((resolve) => setTimeout(resolve, 5000));\n    return CloudApiGateway.post(`/${this.urlPath}/${id}/duplicate`, {});\n  }\n\n  async list(organizationId: string): Promise<CommonProject[]> {\n    return CloudApiGateway.get(`organizations/${organizationId}/${this.urlPath}`);\n  }\n\n  async get(id: string): Promise<CommonProject> {\n    return CloudApiGateway.get(`${this.urlPath}/${id}`);\n  }\n\n  async update(id: string, changes: Partial<CommonProject>): Promise<CommonProject> {\n    const result: ProjectUpdateResponse = await CloudApiGateway.patch(\n      `${this.urlPath}/${id}`,\n      changes,\n    );\n    if ('error' in result && result.error === 'subdomain-already-in-use') {\n      throw new SubdomainAlreadyInUseError();\n    } else if ('error' in result) {\n      throw new Error('Unknown error');\n    }\n    return result;\n  }\n\n  async checkSubdomain(id: string, subdomain: string): Promise<{ available: boolean }> {\n    return CloudApiGateway.get(`${this.urlPath}/${id}/check-subdomain/${subdomain}`);\n  }\n\n  async getStatus(id: string): Promise<DeployStatus[]> {\n    return CloudApiGateway.get(`${this.urlPath}/${id}/deploy-status`);\n  }\n\n  async startWebEditor(id: string): Promise<CloudApiConsoleWebEditorStartResponse> {\n    return CloudApiGateway.post(`${this.urlPath}/${id}/web-editor/start`, {});\n  }\n\n  async executeQuery(\n    projectId: string,\n    query: string,\n    params: unknown[],\n  ): Promise<ExecuteQueryResponse> {\n    return CloudApiGateway.post(`projects/${projectId}/execute`, { query, params });\n  }\n}\n\nconst api = new ProjectAPI();\n\nexport class ProjectModel {\n  static formatSubdomain(name: string): string {\n    const lower = name.toLowerCase();\n    const unaccented = lower.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n    const alphanumeric = /[a-z0-9]+/g;\n    const parts = unaccented.matchAll(alphanumeric);\n    const normalized = Array.from(parts)\n      .map((match) => match[0])\n      .join('-');\n    return normalized;\n  }\n  private record: ActiveRecord<CommonProject>;\n\n  private constructor(dto: CommonProject) {\n    this.record = ActiveRecord.create(api, dto);\n  }\n\n  public static async list(organizationId: string): Promise<ProjectModel[]> {\n    const dtos = await api.list(organizationId);\n    return dtos.map((dto) => new ProjectModel(dto));\n  }\n\n  static async create(s: {\n    organizationId: string;\n    name: string;\n    folderId: string;\n  }): Promise<ProjectModel> {\n    const dto = await api.create(s);\n    return new ProjectModel(dto);\n  }\n\n  get folderId(): string {\n    return this.record.get('folderId');\n  }\n\n  static async get(id: string): Promise<ProjectModel> {\n    const dto = await api.get(id);\n    return new ProjectModel(dto);\n  }\n\n  static async getStatus(id: string): Promise<DeployStatus[]> {\n    return await api.getStatus(id);\n  }\n\n  async delete(): Promise<void> {\n    await api.delete(this.id);\n  }\n\n  async duplicate(): Promise<ProjectModel> {\n    const dto = await api.duplicate(this.id);\n    return new ProjectModel(dto);\n  }\n\n  static async executeQuery(\n    projectId: string,\n    query: string,\n    params: unknown[],\n  ): Promise<ExecuteQueryResponse> {\n    return api.executeQuery(projectId, query, params);\n  }\n\n  async save(): Promise<void> {\n    return this.record.save();\n  }\n\n  resetChanges() {\n    this.record.resetChanges();\n  }\n\n  hasChanges(): boolean {\n    return this.record.hasChanges();\n  }\n\n  hasChangesDeep(key: keyof CommonProject): boolean {\n    return this.record.hasChangesDeep(key);\n  }\n\n  get id(): string {\n    return this.record.get('id');\n  }\n\n  get name(): string {\n    return this.record.get('name');\n  }\n\n  set name(value: string) {\n    this.record.set('name', value);\n  }\n\n  get organizationId(): string {\n    return this.record.get('organizationId');\n  }\n\n  get subdomain(): string {\n    return this.record.get('subdomain');\n  }\n\n  set subdomain(value: string) {\n    this.record.set('subdomain', value);\n  }\n\n  async checkSubdomain() {\n    return await api.checkSubdomain(this.id, this.subdomain);\n  }\n\n  static async startWebEditor(projectId: string) {\n    return await api.startWebEditor(projectId);\n  }\n\n  getUrl(path = '') {\n    const noSlashPath = path.startsWith('/') ? path.slice(1) : path;\n    return `https://${this.subdomain}.abstra.app/${noSlashPath}`;\n  }\n}\n"],"names":["SubdomainAlreadyInUseError","ProjectAPI","name","organizationId","folderId","CloudApiGateway","id","resolve","changes","result","subdomain","projectId","query","params","api","ProjectModel","unaccented","alphanumeric","parts","match","dto","ActiveRecord","s","key","value","path","noSlashPath"],"mappings":"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"}