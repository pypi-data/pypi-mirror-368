name: CI

on:
  push:
    branches: ["main", "master"]
  pull_request:
    branches: ["main", "master"]

permissions:
  contents: read
  actions: read
  checks: write  # Required for uploading test results

jobs:
  tests:
    name: ${{ matrix.session }} ${{ matrix.python }} / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Linting and type checking (only on latest Python/Ubuntu)
          - { python: "3.13", os: "ubuntu-latest", session: "lint" }
          # Unit tests across all Python versions and OS
          - { python: "3.13", os: "ubuntu-latest", session: "unit" }
          - { python: "3.12", os: "ubuntu-latest", session: "unit" }
          - { python: "3.11", os: "ubuntu-latest", session: "unit" }
          - { python: "3.13", os: "windows-latest", session: "unit" }
          - { python: "3.12", os: "windows-latest", session: "unit" }
          - { python: "3.11", os: "windows-latest", session: "unit" }
          - { python: "3.13", os: "macos-latest", session: "unit" }
          - { python: "3.12", os: "macos-latest", session: "unit" }
          - { python: "3.11", os: "macos-latest", session: "unit" }
          # Integration tests (only on Ubuntu for speed)
          - { python: "3.13", os: "ubuntu-latest", session: "integration" }
          - { python: "3.12", os: "ubuntu-latest", session: "integration" }
          - { python: "3.11", os: "ubuntu-latest", session: "integration" }

    env:
      NOXSESSION: ${{ matrix.session }}
      FORCE_COLOR: "1"

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4
        with:
          # Important for versioning plugins
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.8.3"
          enable-cache: true

      - name: Install nox
        run: uv tool install nox

      - name: Run nox
        run: nox --python=${{ matrix.python }}

      - name: Upload coverage data
        if: matrix.session == 'unit' && matrix.python == '3.13' && matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data
          path: .coverage
          include-hidden-files: true

  coverage:
    runs-on: ubuntu-latest
    needs: tests
    if: needs.tests.result == 'success'
    
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.8.3"
          enable-cache: true

      - name: Install nox
        run: uv tool install nox

      - name: Download coverage data
        uses: actions/download-artifact@v4
        with:
          name: coverage-data

      - name: Combine coverage data and display human readable report
        run: nox --session=coverage

      - name: Create coverage report
        run: nox --session=coverage -- xml

      - name: Upload coverage report
        uses: codecov/codecov-action@v5
        with:
          name: chimeric
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true