version: 1
disable_existing_loggers: false
formatters:
  default:
    (): "uvicorn.logging.DefaultFormatter"
    fmt: "%(asctime)s %(levelprefix)s [%(name)s] (%(process)d) %(funcName)s():%(lineno)d - %(message)s"
  access:
    (): "uvicorn.logging.AccessFormatter"
    fmt: "%(asctime)s %(levelprefix)s [%(name)s] (%(process)d) %(funcName)s():%(lineno)d - %(message)s"
handlers:
  console:
    class: logging.StreamHandler
    level: DEBUG
    formatter: default
  rotating_file:
    class: logging.handlers.TimedRotatingFileHandler
    level: DEBUG
    formatter: default
    filename: logs/studio.log
    encoding: utf-8
    when: midnight
    interval: 1
    backupCount: 365
  rotating_file_concurrency:
    class: concurrent_log_handler.ConcurrentTimedRotatingFileHandler
    level: DEBUG
    formatter: default
    filename: logs/studio.log
    encoding: utf-8
    maxBytes: 5242880
    # backupCount ... Number of backups on the same date
    backupCount: 100
loggers:
  optinist:
    level: DEBUG
  # # sql logging config
  # sqlalchemy.engine:
  #   level: INFO
  snakemake:
    level: INFO
    handlers: [rotating_file]
    propagate: false
root:
  level: INFO
  handlers: [console, rotating_file]
