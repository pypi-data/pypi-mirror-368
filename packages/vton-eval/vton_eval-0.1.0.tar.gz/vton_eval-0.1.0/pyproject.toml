[project]
name = "vton-eval"
version = "0.1.0"
description = "A comprehensive evaluation suite for Virtual Try-On (VTON) models"
authors = [{name = "Arnab Ghosh", email = "arnabghosh93@gmail.com"}]
readme = "README.md"
license = {text = "MIT"}
keywords = ["vton", "virtual-try-on", "evaluation", "computer-vision", "fashion"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Image Recognition"
]
requires-python = ">=3.9,<4.0"
dependencies = [
    "numpy>=1.26.0",
    "torch>=2.1.0",
    "torchvision>=0.16.0",
    "Pillow>=10.1.0",
    "pyyaml>=6.0.1",
    "tqdm>=4.66.1",
    "requests>=2.31.0",
    "dataclasses-json>=0.6.1",
    "opencv-python>=4.8.1.78",
    "scikit-image>=0.21.0",
    "scipy>=1.11.3",
    "torchmetrics>=1.2.0",
    "deepface>=0.0.81",
    "tensorflow>=2.15.0",
    "tf-keras>=2.15.0",
    "open-clip-torch>=2.24.0",
    "scikit-learn>=1.3.2",
    "mediapipe>=0.10.8",
    "sam2>=0.4.1",
    "segment-anything>=1.0",
    "pandas>=2.1.3",
    "matplotlib>=3.8.0",
    "seaborn>=0.13.0"
]

[project.urls]
Homepage = "https://github.com/vybe-ai/vton-eval"
Repository = "https://github.com/vybe-ai/vton-eval"
Documentation = "https://github.com/vybe-ai/vton-eval/blob/main/README.md"
Issues = "https://github.com/vybe-ai/vton-eval/issues"

[project.scripts]
vton-eval = "vton_eval.cli.main:main"
vton-validate = "vton_eval.cli.main:validate_main"
vton-setup = "vton_eval.cli.main:setup_main"

[project.optional-dependencies]
vlm = ["google-genai>=0.8.0"]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.1",
    "black>=23.7.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.5.1",
    "sphinx>=7.2.0",
    "sphinx-rtd-theme>=1.3.0",
    "autodoc-pydantic>=2.0.0",
    "notebook>=7.0.0",
    "ipykernel>=6.25.0"
]

[tool.poetry]
packages = [{include = "vton_eval"}]
include = [
    "LICENSE",
    "README.md",
    "configs/default_config.yaml"
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
skip_gitignore = true
known_first_party = ["vton_eval"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
check_untyped_defs = true
disallow_untyped_defs = false
no_implicit_optional = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = "-v --tb=short"

[tool.coverage.run]
source = ["vton_eval"]
omit = [
    "*/tests/*",
    "*/examples/*",
    "*/__init__.py",
    "*/cli/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if TYPE_CHECKING:"
]