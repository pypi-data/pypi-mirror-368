[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "tempdataset"
version = "0.1.2"
authors = [
    {name = "TempDataset Contributors", email = "saqibshaikhdz@gmail.com"},
]
description = "A lightweight Python library for generating realistic temporary datasets"
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.7"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Testing",
    "Topic :: Utilities",
]
keywords = [
    "dataset", "testing", "development", "sample-data", "mock-data",
    "csv", "json", "sales-data", "temporary", "lightweight"
]
dependencies = []

[project.optional-dependencies]
faker = ["faker>=18.0.0"]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-benchmark>=4.0.0",
    "memory-profiler>=0.60.0",
    "psutil>=5.9.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-benchmark>=4.0.0",
    "memory-profiler>=0.60.0",
    "psutil>=5.9.0",
]
performance = [
    "memory-profiler>=0.60.0",
    "psutil>=5.9.0",
    "pytest-benchmark>=4.0.0",
]

[project.urls]
Homepage = "https://github.com/dot-css/TempDataset"
Documentation = "https://tempdataset.readthedocs.io/"
Repository = "https://github.com/dot-css/TempDataset"
"Bug Tracker" = "https://github.com/dot-css/TempDataset/issues"

[project.scripts]
tempdataset = "tempdataset.cli:main"

[tool.setuptools.packages.find]
exclude = ["tests*", ".benchmarks*"]

[tool.setuptools.package-data]
tempdataset = ["py.typed"]

[tool.black]
line-length = 88
target-version = ['py37']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.7"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "performance: marks tests as performance tests",
]

[tool.coverage.run]
source = ["tempdataset"]
omit = [
    "*/tests/*",
    "*/.benchmarks/*",
    "*/setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]