# coding: utf-8

"""
    Robust Intelligence REST API

    API methods for Robust Intelligence. Users must authenticate using the `X-Firewall-Auth-Token` for all the firewall methods and `rime-api-key` for all other methods.  # noqa: E501

    OpenAPI spec version: 1.0
    Contact: dev@robustintelligence.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class GenerativefirewallPiiEntityType(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    UNSPECIFIED = "PII_ENTITY_TYPE_UNSPECIFIED"
    ABA_ROUTING_NUMBER = "PII_ENTITY_TYPE_ABA_ROUTING_NUMBER"
    AU_ABN = "PII_ENTITY_TYPE_AU_ABN"
    AU_ACN = "PII_ENTITY_TYPE_AU_ACN"
    AU_MEDICARE_NUMBER = "PII_ENTITY_TYPE_AU_MEDICARE_NUMBER"
    AU_TFN = "PII_ENTITY_TYPE_AU_TFN"
    CREDIT_CARD_NUMBER = "PII_ENTITY_TYPE_CREDIT_CARD_NUMBER"
    EMAIL = "PII_ENTITY_TYPE_EMAIL"
    IBAN_CODE = "PII_ENTITY_TYPE_IBAN_CODE"
    IP_ADDRESS = "PII_ENTITY_TYPE_IP_ADDRESS"
    MEDICAL_LICENSE_NUMBER = "PII_ENTITY_TYPE_MEDICAL_LICENSE_NUMBER"
    PHONE_NUMBER = "PII_ENTITY_TYPE_PHONE_NUMBER"
    NHS_NUMBER = "PII_ENTITY_TYPE_NHS_NUMBER"
    US_BANK_NUMBER = "PII_ENTITY_TYPE_US_BANK_NUMBER"
    US_DRIVERS_LICENSE_NUMBER = "PII_ENTITY_TYPE_US_DRIVERS_LICENSE_NUMBER"
    US_ITIN = "PII_ENTITY_TYPE_US_ITIN"
    US_PASSPORT_NUMBER = "PII_ENTITY_TYPE_US_PASSPORT_NUMBER"
    US_SSN = "PII_ENTITY_TYPE_US_SSN"
    DATETIME = "PII_ENTITY_TYPE_DATETIME"
    NRP = "PII_ENTITY_TYPE_NRP"
    LOCATION = "PII_ENTITY_TYPE_LOCATION"
    PERSON = "PII_ENTITY_TYPE_PERSON"
    ORGANIZATION = "PII_ENTITY_TYPE_ORGANIZATION"
    CUSTOM = "PII_ENTITY_TYPE_CUSTOM"
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
    }

    attribute_map = {
    }

    def __init__(self):  # noqa: E501
        """GenerativefirewallPiiEntityType - a model defined in Swagger"""  # noqa: E501
        self.discriminator = None

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GenerativefirewallPiiEntityType, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GenerativefirewallPiiEntityType):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
