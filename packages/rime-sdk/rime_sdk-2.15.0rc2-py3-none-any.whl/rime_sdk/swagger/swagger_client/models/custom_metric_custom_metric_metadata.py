# coding: utf-8

"""
    Robust Intelligence REST API

    API methods for Robust Intelligence. Users must authenticate using the `X-Firewall-Auth-Token` for all the firewall methods and `rime-api-key` for all other methods.  # noqa: E501

    OpenAPI spec version: 1.0
    Contact: dev@robustintelligence.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class CustomMetricCustomMetricMetadata(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'short_description': 'str',
        'starter_description': 'str',
        'why_it_matters_description': 'str',
        'configuration_description': 'str',
        'example_description': 'str'
    }

    attribute_map = {
        'short_description': 'shortDescription',
        'starter_description': 'starterDescription',
        'why_it_matters_description': 'whyItMattersDescription',
        'configuration_description': 'configurationDescription',
        'example_description': 'exampleDescription'
    }

    def __init__(self, short_description=None, starter_description=None, why_it_matters_description=None, configuration_description=None, example_description=None):  # noqa: E501
        """CustomMetricCustomMetricMetadata - a model defined in Swagger"""  # noqa: E501
        self._short_description = None
        self._starter_description = None
        self._why_it_matters_description = None
        self._configuration_description = None
        self._example_description = None
        self.discriminator = None
        if short_description is not None:
            self.short_description = short_description
        if starter_description is not None:
            self.starter_description = starter_description
        if why_it_matters_description is not None:
            self.why_it_matters_description = why_it_matters_description
        if configuration_description is not None:
            self.configuration_description = configuration_description
        if example_description is not None:
            self.example_description = example_description

    @property
    def short_description(self):
        """Gets the short_description of this CustomMetricCustomMetricMetadata.  # noqa: E501

        Short description.  # noqa: E501

        :return: The short_description of this CustomMetricCustomMetricMetadata.  # noqa: E501
        :rtype: str
        """
        return self._short_description

    @short_description.setter
    def short_description(self, short_description):
        """Sets the short_description of this CustomMetricCustomMetricMetadata.

        Short description.  # noqa: E501

        :param short_description: The short_description of this CustomMetricCustomMetricMetadata.  # noqa: E501
        :type: str
        """

        self._short_description = short_description

    @property
    def starter_description(self):
        """Gets the starter_description of this CustomMetricCustomMetricMetadata.  # noqa: E501

        Starter description.  # noqa: E501

        :return: The starter_description of this CustomMetricCustomMetricMetadata.  # noqa: E501
        :rtype: str
        """
        return self._starter_description

    @starter_description.setter
    def starter_description(self, starter_description):
        """Sets the starter_description of this CustomMetricCustomMetricMetadata.

        Starter description.  # noqa: E501

        :param starter_description: The starter_description of this CustomMetricCustomMetricMetadata.  # noqa: E501
        :type: str
        """

        self._starter_description = starter_description

    @property
    def why_it_matters_description(self):
        """Gets the why_it_matters_description of this CustomMetricCustomMetricMetadata.  # noqa: E501

        Why it matters description.  # noqa: E501

        :return: The why_it_matters_description of this CustomMetricCustomMetricMetadata.  # noqa: E501
        :rtype: str
        """
        return self._why_it_matters_description

    @why_it_matters_description.setter
    def why_it_matters_description(self, why_it_matters_description):
        """Sets the why_it_matters_description of this CustomMetricCustomMetricMetadata.

        Why it matters description.  # noqa: E501

        :param why_it_matters_description: The why_it_matters_description of this CustomMetricCustomMetricMetadata.  # noqa: E501
        :type: str
        """

        self._why_it_matters_description = why_it_matters_description

    @property
    def configuration_description(self):
        """Gets the configuration_description of this CustomMetricCustomMetricMetadata.  # noqa: E501

        Configuration description.  # noqa: E501

        :return: The configuration_description of this CustomMetricCustomMetricMetadata.  # noqa: E501
        :rtype: str
        """
        return self._configuration_description

    @configuration_description.setter
    def configuration_description(self, configuration_description):
        """Sets the configuration_description of this CustomMetricCustomMetricMetadata.

        Configuration description.  # noqa: E501

        :param configuration_description: The configuration_description of this CustomMetricCustomMetricMetadata.  # noqa: E501
        :type: str
        """

        self._configuration_description = configuration_description

    @property
    def example_description(self):
        """Gets the example_description of this CustomMetricCustomMetricMetadata.  # noqa: E501

        Example description.  # noqa: E501

        :return: The example_description of this CustomMetricCustomMetricMetadata.  # noqa: E501
        :rtype: str
        """
        return self._example_description

    @example_description.setter
    def example_description(self, example_description):
        """Sets the example_description of this CustomMetricCustomMetricMetadata.

        Example description.  # noqa: E501

        :param example_description: The example_description of this CustomMetricCustomMetricMetadata.  # noqa: E501
        :type: str
        """

        self._example_description = example_description

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CustomMetricCustomMetricMetadata, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CustomMetricCustomMetricMetadata):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
