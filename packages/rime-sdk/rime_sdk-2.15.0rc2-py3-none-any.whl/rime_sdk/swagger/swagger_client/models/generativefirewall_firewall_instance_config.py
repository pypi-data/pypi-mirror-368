# coding: utf-8

"""
    Robust Intelligence REST API

    API methods for Robust Intelligence. Users must authenticate using the `X-Firewall-Auth-Token` for all the firewall methods and `rime-api-key` for all other methods.  # noqa: E501

    OpenAPI spec version: 1.0
    Contact: dev@robustintelligence.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class GenerativefirewallFirewallInstanceConfig(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'firewall_server_image': 'str',
        'firewall_backend_image': 'str',
        'model_server_configs': 'list[FirewallInstanceConfigModelServerConfig]',
        'yara_server_config': 'FirewallInstanceConfigYaraServerConfig',
        'kubernetes_spec': 'GenerativefirewallFirewallInstanceDeploymentConfig'
    }

    attribute_map = {
        'firewall_server_image': 'firewallServerImage',
        'firewall_backend_image': 'firewallBackendImage',
        'model_server_configs': 'modelServerConfigs',
        'yara_server_config': 'yaraServerConfig',
        'kubernetes_spec': 'kubernetesSpec'
    }

    def __init__(self, firewall_server_image=None, firewall_backend_image=None, model_server_configs=None, yara_server_config=None, kubernetes_spec=None):  # noqa: E501
        """GenerativefirewallFirewallInstanceConfig - a model defined in Swagger"""  # noqa: E501
        self._firewall_server_image = None
        self._firewall_backend_image = None
        self._model_server_configs = None
        self._yara_server_config = None
        self._kubernetes_spec = None
        self.discriminator = None
        if firewall_server_image is not None:
            self.firewall_server_image = firewall_server_image
        if firewall_backend_image is not None:
            self.firewall_backend_image = firewall_backend_image
        if model_server_configs is not None:
            self.model_server_configs = model_server_configs
        if yara_server_config is not None:
            self.yara_server_config = yara_server_config
        if kubernetes_spec is not None:
            self.kubernetes_spec = kubernetes_spec

    @property
    def firewall_server_image(self):
        """Gets the firewall_server_image of this GenerativefirewallFirewallInstanceConfig.  # noqa: E501


        :return: The firewall_server_image of this GenerativefirewallFirewallInstanceConfig.  # noqa: E501
        :rtype: str
        """
        return self._firewall_server_image

    @firewall_server_image.setter
    def firewall_server_image(self, firewall_server_image):
        """Sets the firewall_server_image of this GenerativefirewallFirewallInstanceConfig.


        :param firewall_server_image: The firewall_server_image of this GenerativefirewallFirewallInstanceConfig.  # noqa: E501
        :type: str
        """

        self._firewall_server_image = firewall_server_image

    @property
    def firewall_backend_image(self):
        """Gets the firewall_backend_image of this GenerativefirewallFirewallInstanceConfig.  # noqa: E501


        :return: The firewall_backend_image of this GenerativefirewallFirewallInstanceConfig.  # noqa: E501
        :rtype: str
        """
        return self._firewall_backend_image

    @firewall_backend_image.setter
    def firewall_backend_image(self, firewall_backend_image):
        """Sets the firewall_backend_image of this GenerativefirewallFirewallInstanceConfig.


        :param firewall_backend_image: The firewall_backend_image of this GenerativefirewallFirewallInstanceConfig.  # noqa: E501
        :type: str
        """

        self._firewall_backend_image = firewall_backend_image

    @property
    def model_server_configs(self):
        """Gets the model_server_configs of this GenerativefirewallFirewallInstanceConfig.  # noqa: E501


        :return: The model_server_configs of this GenerativefirewallFirewallInstanceConfig.  # noqa: E501
        :rtype: list[FirewallInstanceConfigModelServerConfig]
        """
        return self._model_server_configs

    @model_server_configs.setter
    def model_server_configs(self, model_server_configs):
        """Sets the model_server_configs of this GenerativefirewallFirewallInstanceConfig.


        :param model_server_configs: The model_server_configs of this GenerativefirewallFirewallInstanceConfig.  # noqa: E501
        :type: list[FirewallInstanceConfigModelServerConfig]
        """

        self._model_server_configs = model_server_configs

    @property
    def yara_server_config(self):
        """Gets the yara_server_config of this GenerativefirewallFirewallInstanceConfig.  # noqa: E501


        :return: The yara_server_config of this GenerativefirewallFirewallInstanceConfig.  # noqa: E501
        :rtype: FirewallInstanceConfigYaraServerConfig
        """
        return self._yara_server_config

    @yara_server_config.setter
    def yara_server_config(self, yara_server_config):
        """Sets the yara_server_config of this GenerativefirewallFirewallInstanceConfig.


        :param yara_server_config: The yara_server_config of this GenerativefirewallFirewallInstanceConfig.  # noqa: E501
        :type: FirewallInstanceConfigYaraServerConfig
        """

        self._yara_server_config = yara_server_config

    @property
    def kubernetes_spec(self):
        """Gets the kubernetes_spec of this GenerativefirewallFirewallInstanceConfig.  # noqa: E501


        :return: The kubernetes_spec of this GenerativefirewallFirewallInstanceConfig.  # noqa: E501
        :rtype: GenerativefirewallFirewallInstanceDeploymentConfig
        """
        return self._kubernetes_spec

    @kubernetes_spec.setter
    def kubernetes_spec(self, kubernetes_spec):
        """Sets the kubernetes_spec of this GenerativefirewallFirewallInstanceConfig.


        :param kubernetes_spec: The kubernetes_spec of this GenerativefirewallFirewallInstanceConfig.  # noqa: E501
        :type: GenerativefirewallFirewallInstanceDeploymentConfig
        """

        self._kubernetes_spec = kubernetes_spec

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GenerativefirewallFirewallInstanceConfig, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GenerativefirewallFirewallInstanceConfig):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
