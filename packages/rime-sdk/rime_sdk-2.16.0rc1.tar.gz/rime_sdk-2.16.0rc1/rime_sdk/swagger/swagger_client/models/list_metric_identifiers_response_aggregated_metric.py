# coding: utf-8

"""
    Robust Intelligence REST API

    API methods for Robust Intelligence. Users must authenticate using the `X-Firewall-Auth-Token` for all the firewall methods and `rime-api-key` for all other methods.  # noqa: E501

    OpenAPI spec version: 1.0
    Contact: dev@robustintelligence.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class ListMetricIdentifiersResponseAggregatedMetric(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'test_case_metric_id': 'ArtifactIdentifierTestCaseMetricIdentifier',
        'category_test_metric_id': 'ArtifactIdentifierCategoryTestIdentifier',
        'excluded_transforms': 'MonitorExcludedTransforms'
    }

    attribute_map = {
        'test_case_metric_id': 'testCaseMetricId',
        'category_test_metric_id': 'categoryTestMetricId',
        'excluded_transforms': 'excludedTransforms'
    }

    def __init__(self, test_case_metric_id=None, category_test_metric_id=None, excluded_transforms=None):  # noqa: E501
        """ListMetricIdentifiersResponseAggregatedMetric - a model defined in Swagger"""  # noqa: E501
        self._test_case_metric_id = None
        self._category_test_metric_id = None
        self._excluded_transforms = None
        self.discriminator = None
        if test_case_metric_id is not None:
            self.test_case_metric_id = test_case_metric_id
        if category_test_metric_id is not None:
            self.category_test_metric_id = category_test_metric_id
        if excluded_transforms is not None:
            self.excluded_transforms = excluded_transforms

    @property
    def test_case_metric_id(self):
        """Gets the test_case_metric_id of this ListMetricIdentifiersResponseAggregatedMetric.  # noqa: E501


        :return: The test_case_metric_id of this ListMetricIdentifiersResponseAggregatedMetric.  # noqa: E501
        :rtype: ArtifactIdentifierTestCaseMetricIdentifier
        """
        return self._test_case_metric_id

    @test_case_metric_id.setter
    def test_case_metric_id(self, test_case_metric_id):
        """Sets the test_case_metric_id of this ListMetricIdentifiersResponseAggregatedMetric.


        :param test_case_metric_id: The test_case_metric_id of this ListMetricIdentifiersResponseAggregatedMetric.  # noqa: E501
        :type: ArtifactIdentifierTestCaseMetricIdentifier
        """

        self._test_case_metric_id = test_case_metric_id

    @property
    def category_test_metric_id(self):
        """Gets the category_test_metric_id of this ListMetricIdentifiersResponseAggregatedMetric.  # noqa: E501


        :return: The category_test_metric_id of this ListMetricIdentifiersResponseAggregatedMetric.  # noqa: E501
        :rtype: ArtifactIdentifierCategoryTestIdentifier
        """
        return self._category_test_metric_id

    @category_test_metric_id.setter
    def category_test_metric_id(self, category_test_metric_id):
        """Sets the category_test_metric_id of this ListMetricIdentifiersResponseAggregatedMetric.


        :param category_test_metric_id: The category_test_metric_id of this ListMetricIdentifiersResponseAggregatedMetric.  # noqa: E501
        :type: ArtifactIdentifierCategoryTestIdentifier
        """

        self._category_test_metric_id = category_test_metric_id

    @property
    def excluded_transforms(self):
        """Gets the excluded_transforms of this ListMetricIdentifiersResponseAggregatedMetric.  # noqa: E501


        :return: The excluded_transforms of this ListMetricIdentifiersResponseAggregatedMetric.  # noqa: E501
        :rtype: MonitorExcludedTransforms
        """
        return self._excluded_transforms

    @excluded_transforms.setter
    def excluded_transforms(self, excluded_transforms):
        """Sets the excluded_transforms of this ListMetricIdentifiersResponseAggregatedMetric.


        :param excluded_transforms: The excluded_transforms of this ListMetricIdentifiersResponseAggregatedMetric.  # noqa: E501
        :type: MonitorExcludedTransforms
        """

        self._excluded_transforms = excluded_transforms

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ListMetricIdentifiersResponseAggregatedMetric, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ListMetricIdentifiersResponseAggregatedMetric):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
