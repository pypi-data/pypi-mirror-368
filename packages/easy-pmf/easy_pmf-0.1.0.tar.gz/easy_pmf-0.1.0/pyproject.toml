
[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "easy-pmf"
version = "0.1.0"
authors = [
  { name="Gerrit Jan de Bruin", email="gerritjan.debruin@gmail.com" },
]
description = "An easy-to-use package for Positive Matrix Factorization (PMF) analysis of environmental data."
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.9"
keywords = ["pmf", "positive matrix factorization", "environmental", "air quality", "source apportionment"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Atmospheric Science",
    "Topic :: Scientific/Engineering :: Chemistry",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]
dependencies = [
    "matplotlib>=3.5.0",
    "numpy>=1.20.0",
    "pandas>=1.3.0",
    "seaborn>=0.11.0",
]

# ================================= ruff =================================
[tool.ruff]
show-fixes = true
preview = true  # Enable preview features for RUF022 and other advanced rules
line-length = 88
target-version = "py39"

[tool.ruff.lint]
extend-select = [
    "A",        # Prevent shadowing          https://docs.astral.sh/ruff/rules/#flake8-builtins-a
    "B",        # Bugbear: common bugs       https://docs.astral.sh/ruff/rules/#flake8-bugbear-b
    "C4",       # Comprehensions             https://docs.astral.sh/ruff/rules/#flake8-comprehensions-c4
    "D",        # pydocstyle docstring rules https://docs.astral.sh/ruff/settings/#lintpydocstyle
    "E",        # pycodestyle errors         https://docs.astral.sh/ruff/rules/#pycodestyle-e-w
    "F",        # Pyflakes                   https://docs.astral.sh/ruff/rules/#pyflakes-f
    "I",        # Sort imports               https://docs.astral.sh/ruff/rules/#isort-i
    "N",        # Naming conventions         https://docs.astral.sh/ruff/rules/#pep8-naming-n
    "PTH",      # Use Pathlib                https://docs.astral.sh/ruff/rules/#flake8-use-pathlib-pth
    "RUF",      # Ruff-specific rules        https://docs.astral.sh/ruff/rules/#ruff-specific-rules-ruf
    "S",        # Security                   https://docs.astral.sh/ruff/rules/#flake8-bandit-s
    "UP",       # Use modern syntax          https://docs.astral.sh/ruff/rules/#pyupgrade-up
    "W",        # pycodestyle warnings       https://docs.astral.sh/ruff/rules/#pycodestyle-e-w
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
# Ignore `E402` (import violations) in all `__init__.py` files, and in select subdirectories.
"__init__.py" = ["E402", "F401"]
"**/{tests,docs,tools}/*" = ["E402", "S101"]  # Allow assert statements in tests
# Scientific computing often needs these patterns
"**/data/*" = ["N999"]  # Allow any naming in data files
"**/examples/*" = ["D", "S101", "T201"]  # Relax rules for examples
"mwe.py" = ["D", "S101", "T201"]  # Minimal working example can be more relaxed
"analyze_all_datasets.py" = ["T201"]  # Allow print statements in analysis scripts
"quick_analysis.py" = ["T201"]  # Allow print statements in analysis scripts

# ================================= mypy ==================================
[[tool.mypy.overrides]]
module = ["geopandas.*"]
follow_untyped_imports = true

[[tool.mypy.overrides]]
module = ["art.*"]
ignore_missing_imports = true

[project.urls]
Homepage = "https://github.com/easy-pmf/easy-pmf"
Documentation = "https://easy-pmf.readthedocs.io"
Repository = "https://github.com/easy-pmf/easy-pmf"
"Bug Tracker" = "https://github.com/easy-pmf/easy-pmf/issues"
Changelog = "https://github.com/easy-pmf/easy-pmf/blob/main/CHANGELOG.md"

[project.scripts]
easy-pmf = "easy_pmf.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
easy_pmf = ["data/*.csv", "data/*.txt", "examples/*.py"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
addopts = "--cov=easy_pmf --cov-report=html --cov-report=term-missing"

[tool.black]
line-length = 88
target-version = ['py39']

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[dependency-groups]
dev = [
    "build>=1.2.2.post1",
    "mypy>=1.17.1",
    "pandas-stubs>=2.2.2.240807",
    "pytest>=8.3.5",
    "pytest-cov>=5.0.0",
    "ruff>=0.12.8",
    "twine>=6.1.0",
    "types-seaborn>=0.13.2.20250728",
]
docs = [
    "mkdocs>=1.4.0",
    "mkdocs-autorefs>=0.4.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.20.0",
]
