[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "md-server"
version = "0.1.1"
description = "HTTP API server for converting documents, web pages, and media to markdown"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
keywords = ["markdown", "document-conversion", "api", "server", "fastapi", "pdf", "docx"]
authors = [
    {name = "Peter Etelej", email = "peter@etelej.com"}
]
maintainers = [
    {name = "Peter Etelej", email = "peter@etelej.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Text Processing :: Markup",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]
dependencies = [
    "litestar[standard]>=2.0.0",
    "markitdown[all]>=0.0.1",
    "pydantic>=2.11.7",
    "pydantic-settings>=2.10.1",
    "crawl4ai>=0.7.0",
    "click!=8.2.2",
]

[project.urls]
Homepage = "https://github.com/peteretelej/md-server"
Repository = "https://github.com/peteretelej/md-server.git"
Issues = "https://github.com/peteretelej/md-server/issues"
Documentation = "https://github.com/peteretelej/md-server#readme"

[project.scripts]
md-server = "md_server.__main__:main"

[tool.uv]
package = true

[tool.setuptools.packages.find]
where = ["src"]

[dependency-groups]
dev = [
    "httpx>=0.28.1",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.2.1",
    "ruff>=0.12.7",
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
testpaths = ["tests"]
addopts = "--strict-markers --strict-config"
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "slow: Slow tests",
    "timeout: Tests with timeout limits"
]
filterwarnings = [
    "ignore::DeprecationWarning:pydantic._internal._config",
    "ignore::pytest.PytestCollectionWarning",
]

[tool.coverage.run]
omit = ["tests/*", "src/md_server/__main__.py"]
branch = true

[tool.coverage.report]
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"
