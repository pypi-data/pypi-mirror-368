# Slack to Google Chat Migration Configuration

# Shared Drive configuration for storing attachments
# Using a shared drive is recommended for organization-wide access
shared_drive:
  # Option 1: Specify an existing shared drive by ID
  # id: "0AInA6b6Ej1Q2Uk9PVA"  # Replace with your shared drive ID
  
  # Option 2: Specify a shared drive by name (will be created if it doesn't exist)
  name: "Imported Slack Attachments"
  
  # If neither id nor name is specified, the tool will create a new shared drive
  # with the name "Imported Slack Attachments"

# Optional: Channels to exclude from migration (by name)
exclude_channels:
  - "random"        # Example: Skip the random channel
  - "shitposting"   # Example: Skip off-topic channels
  # - "general"     # Uncomment to exclude more channels as needed

# Space mapping configuration
# The migrator uses the Google Chat API to discover existing spaces. If multiple spaces
# have the same channel name, you need to specify which space ID to use for which channel.
# 
# When duplicate spaces are found, the migrator will:
# 1. Skip those specific channels (not abort the entire migration)
# 2. Mark these channels as failed in the migration report
# 3. Log detailed information about each space to help you choose
# 4. Provide exact configuration entries to copy into this file
#
# You can then add the mappings below and re-run the migration for just those channels.
space_mapping:
  # Format: "channel_name": "space_id"  (without the "spaces/" prefix)
  # Example for channel "general" with space ID "AAAAAgcE123":
  # "general": "AAAAAgcE123"

# Optional: Override email domains for user mapping
# If not specified, emails from users.json will be used directly
# RECOMMENDED: Set this to your Google Workspace domain (e.g., "company.com")
# to ensure all mapped users are from your workspace
email_domain_override: ""  # e.g. "company.com"

# Optional: User mapping overrides
# Use this to manually map specific Slack user IDs to Google Workspace emails
# This takes precedence over the automatic mapping from users.json
# You can find Slack user IDs in the users.json file from your export
user_mapping_overrides:
  # U12345678: "user@example.com"
  # U87654321: "another_user@example.com"

# User handling options

# Whether to skip importing bot messages and reactions
# When true, all bot messages and reactions will be excluded from migration
# When false (default), bot messages will be migrated if user mappings exist
ignore_bots: true

# Error handling options

# Whether to abort the entire migration after encountering errors in a channel
# If true, migration will stop after the first channel with errors
# If false, migration will continue to process other channels even if errors occur
abort_on_error: false

# Maximum percentage of failed messages allowed before skipping a channel
# If the failure rate exceeds this percentage, the channel processing will stop
max_failure_percentage: 10

# Strategy for completing import mode when errors occur
# Options:
#   "skip_on_error" - Don't complete import mode if there were errors (default)
#   "force_complete" - Complete import mode even if there were errors
import_completion_strategy: "skip_on_error"

# Whether to delete spaces that had errors during migration
# If true, spaces with errors will be deleted during cleanup
# If false, spaces with errors will be kept (you can complete import manually)
cleanup_on_error: true

# Advanced options

# Maximum number of retry attempts for API calls
max_retries: 5

# Initial delay between retry attempts (in seconds)
retry_delay: 1.0

# Batch size for message processing
batch_size: 100