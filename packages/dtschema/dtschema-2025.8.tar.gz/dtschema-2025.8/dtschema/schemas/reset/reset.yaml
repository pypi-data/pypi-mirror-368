# SPDX-License-Identifier: BSD-2-Clause
# Copyright 2012 NVIDIA CORPORATION
# Copyright 2019 Linaro Ltd.
%YAML 1.2
---
$id: http://devicetree.org/schemas/reset/reset.yaml#
$schema: http://devicetree.org/meta-schemas/base.yaml#

title: Reset Common Properties

description: >
  This binding is intended to represent the hardware reset signals present
  internally in most IC (SoC, FPGA, ...) designs. Reset signals for whole
  standalone chips are most likely better represented as GPIOs, although there
  are likely to be exceptions to this rule.

  Hardware blocks typically receive a reset signal. This signal is generated by
  a reset provider (e.g. power management or clock module) and received by a
  reset consumer (the module being reset, or a module managing when a sub-
  ordinate module is reset). This binding exists to represent the provider and
  consumer, and provide a way to couple the two together.

  A reset signal is represented by the phandle of the provider, plus a reset
  specifier - a list of DT cells that represents the reset signal within the
  provider. The length (number of cells) and semantics of the reset specifier
  are dictated by the binding of the reset provider, although common schemes
  are described below.

  A word on where to place reset signal consumers in device tree: It is possible
  in hardware for a reset signal to affect multiple logically separate HW blocks
  at once. In this case, it would be unwise to represent this reset signal in
  the DT node of each affected HW block, since if activated, an unrelated block
  may be reset. Instead, reset signals should be represented in the DT node
  where it makes most sense to control it; this may be a bus node if all
  children of the bus are affected by the reset signal, or an individual HW
  block node for dedicated reset signals. The intent of this binding is to give
  appropriate software access to the reset signals in order to manage the HW,
  rather than to slavishly enumerate the reset signal that affects each HW
  block.

maintainers:
  - Rob Herring <robh@kernel.org>

# always select the core schema
select: true

properties:
  '#reset-cells':
    maximum: 2
    description:
      Number of cells in a reset specifier; Typically 0 for nodes with a single
      reset output and 1 for nodes with multiple reset outputs.

  resets:
    $ref: /schemas/types.yaml#/definitions/phandle-array

  reset-names:
    $ref: /schemas/types.yaml#/definitions/string-array

dependencies:
  reset-names: [ resets ]

additionalProperties: true
