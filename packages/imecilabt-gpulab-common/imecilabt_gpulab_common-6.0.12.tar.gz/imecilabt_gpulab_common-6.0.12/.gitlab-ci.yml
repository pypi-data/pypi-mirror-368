---
image: python:3.13

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# https://pip.pypa.io/en/stable/topics/caching/
cache:
  paths:
    - .cache/pip

before_script:
  - python --version ; pip --version # For debugging
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate

ruff:
  stage: test
  script:
    - pip install ruff
    - ruff check src/  $(if [ -e tests/ ]; then echo tests/; fi) --output-format=gitlab > ruff-code-quality-report.json
  artifacts:
    when: always
    paths:
      - ruff-code-quality-report.json
    reports:
      codequality: ruff-code-quality-report.json
    expire_in: 1 week
  rules:
    - if: "$CODE_QUALITY_DISABLED"
      when: never
    - if: "$CI_COMMIT_TAG || $CI_COMMIT_BRANCH"

pyright:
  stage: test
  before_script:
    # Same as global before_script
    - python --version ; pip --version # For debugging
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    #
    - pip install --editable ".[tests]"
    - apt update; apt install -y nodejs npm
    - npm i -g pyright
    - npm i -g pyright-to-gitlab-ci
  script:
    - pyright src/ --outputjson > report_raw.json
  after_script:
    - pyright-to-gitlab-ci --src report_raw.json --output pyright-code-quality-report.json --base_path .
  artifacts:
    when: always
    paths:
      - pyright-code-quality-report.json
    reports:
      codequality: pyright-code-quality-report.json
  rules:
    - if: "$CODE_QUALITY_DISABLED"
      when: never
    - if: "$CI_COMMIT_TAG || $CI_COMMIT_BRANCH"

pytest:
  stage: test
  before_script:
    # Same as global before_script
    - python --version ; pip --version # For debugging
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    #
    - pip install --editable ".[tests]"
  script:
    - pytest --junit-xml=pytest_report.xml
  artifacts:
    when: always
    reports:
      junit: pytest_report.xml
  rules:
    - if: "$TESTING_DISABLED"
      when: never
    - if: "$CI_COMMIT_TAG || $CI_COMMIT_BRANCH"

build-job:
  stage: build
  script:
    - pip install hatch
    - hatch build
  artifacts:
    paths:
      - dist
    expire_in: 1 week

deploy-job:
  stage: deploy
  dependencies:
    - build-job
  needs:
    - job: build-job
      artifacts: true
  variables: 
    HATCH_INDEX_AUTH: ${CI_JOB_TOKEN}
    HATCH_INDEX_USER: gitlab-ci-token
    HATCH_INDEX_REPO: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi"
  script:
    - pip install hatch
    - python -m hatch publish
  rules:
    - if: "$CI_COMMIT_TAG"
