"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from honeyhive.models.components import event as components_event
from honeyhive.types import BaseModel
from honeyhive.utils import FieldMetadata, PathParamMetadata
import httpx
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class GetSessionRequestTypedDict(TypedDict):
    session_id: str


class GetSessionRequest(BaseModel):
    session_id: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]


class GetSessionResponseTypedDict(TypedDict):
    content_type: str
    r"""HTTP response content type for this operation"""
    status_code: int
    r"""HTTP response status code for this operation"""
    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""
    event: NotRequired[components_event.EventTypedDict]
    r"""Session details"""


class GetSessionResponse(BaseModel):
    content_type: str
    r"""HTTP response content type for this operation"""

    status_code: int
    r"""HTTP response status code for this operation"""

    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""

    event: Optional[components_event.Event] = None
    r"""Session details"""
