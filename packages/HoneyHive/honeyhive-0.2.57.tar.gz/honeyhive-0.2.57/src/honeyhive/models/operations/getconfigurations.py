"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from honeyhive.models.components import configuration as components_configuration
from honeyhive.types import BaseModel
from honeyhive.utils import FieldMetadata, QueryParamMetadata
import httpx
from typing import List, Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class Env(str, Enum):
    r"""Environment - \"dev\", \"staging\" or \"prod\" """

    DEV = "dev"
    STAGING = "staging"
    PROD = "prod"


class GetConfigurationsRequestTypedDict(TypedDict):
    project: str
    r"""Project name for configuration like `Example Project`"""
    env: NotRequired[Env]
    r"""Environment - \"dev\", \"staging\" or \"prod\" """
    name: NotRequired[str]
    r"""The name of the configuration like `v0`"""


class GetConfigurationsRequest(BaseModel):
    project: Annotated[
        str, FieldMetadata(query=QueryParamMetadata(style="form", explode=True))
    ]
    r"""Project name for configuration like `Example Project`"""

    env: Annotated[
        Optional[Env],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Environment - \"dev\", \"staging\" or \"prod\" """

    name: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""The name of the configuration like `v0`"""


class GetConfigurationsResponseTypedDict(TypedDict):
    content_type: str
    r"""HTTP response content type for this operation"""
    status_code: int
    r"""HTTP response status code for this operation"""
    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""
    configurations: NotRequired[List[components_configuration.ConfigurationTypedDict]]
    r"""An array of configurations"""


class GetConfigurationsResponse(BaseModel):
    content_type: str
    r"""HTTP response content type for this operation"""

    status_code: int
    r"""HTTP response status code for this operation"""

    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""

    configurations: Optional[List[components_configuration.Configuration]] = None
    r"""An array of configurations"""
