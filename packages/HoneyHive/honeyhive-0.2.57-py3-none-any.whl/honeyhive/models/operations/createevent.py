"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from honeyhive.models.components import (
    createeventrequest as components_createeventrequest,
)
from honeyhive.types import BaseModel
import httpx
from typing import Optional, TypedDict
from typing_extensions import NotRequired


class CreateEventRequestBodyTypedDict(TypedDict):
    event: NotRequired[components_createeventrequest.CreateEventRequestTypedDict]


class CreateEventRequestBody(BaseModel):
    event: Optional[components_createeventrequest.CreateEventRequest] = None


class CreateEventResponseBodyTypedDict(TypedDict):
    r"""Event created"""

    event_id: NotRequired[str]
    success: NotRequired[bool]


class CreateEventResponseBody(BaseModel):
    r"""Event created"""

    event_id: Optional[str] = None

    success: Optional[bool] = None


class CreateEventResponseTypedDict(TypedDict):
    content_type: str
    r"""HTTP response content type for this operation"""
    status_code: int
    r"""HTTP response status code for this operation"""
    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""
    object: NotRequired[CreateEventResponseBodyTypedDict]
    r"""Event created"""


class CreateEventResponse(BaseModel):
    content_type: str
    r"""HTTP response content type for this operation"""

    status_code: int
    r"""HTTP response status code for this operation"""

    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""

    object: Optional[CreateEventResponseBody] = None
    r"""Event created"""
