"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from honeyhive.types import BaseModel
import httpx
import pydantic
from typing import Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class CreateDatasetResultTypedDict(TypedDict):
    inserted_id: NotRequired[str]
    r"""UUID for the created dataset"""


class CreateDatasetResult(BaseModel):
    inserted_id: Annotated[Optional[str], pydantic.Field(alias="insertedId")] = None
    r"""UUID for the created dataset"""


class CreateDatasetResponseBodyTypedDict(TypedDict):
    r"""Successful creation"""

    inserted: NotRequired[bool]
    result: NotRequired[CreateDatasetResultTypedDict]


class CreateDatasetResponseBody(BaseModel):
    r"""Successful creation"""

    inserted: Optional[bool] = None

    result: Optional[CreateDatasetResult] = None


class CreateDatasetResponseTypedDict(TypedDict):
    content_type: str
    r"""HTTP response content type for this operation"""
    status_code: int
    r"""HTTP response status code for this operation"""
    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""
    object: NotRequired[CreateDatasetResponseBodyTypedDict]
    r"""Successful creation"""


class CreateDatasetResponse(BaseModel):
    content_type: str
    r"""HTTP response content type for this operation"""

    status_code: int
    r"""HTTP response status code for this operation"""

    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""

    object: Optional[CreateDatasetResponseBody] = None
    r"""Successful creation"""
