"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from honeyhive.models.components import (
    sessionstartrequest as components_sessionstartrequest,
)
from honeyhive.types import BaseModel
import httpx
from typing import Optional, TypedDict
from typing_extensions import NotRequired


class StartSessionRequestBodyTypedDict(TypedDict):
    session: NotRequired[components_sessionstartrequest.SessionStartRequestTypedDict]


class StartSessionRequestBody(BaseModel):
    session: Optional[components_sessionstartrequest.SessionStartRequest] = None


class StartSessionResponseBodyTypedDict(TypedDict):
    r"""Session successfully started"""

    session_id: NotRequired[str]


class StartSessionResponseBody(BaseModel):
    r"""Session successfully started"""

    session_id: Optional[str] = None


class StartSessionResponseTypedDict(TypedDict):
    content_type: str
    r"""HTTP response content type for this operation"""
    status_code: int
    r"""HTTP response status code for this operation"""
    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""
    object: NotRequired[StartSessionResponseBodyTypedDict]
    r"""Session successfully started"""


class StartSessionResponse(BaseModel):
    content_type: str
    r"""HTTP response content type for this operation"""

    status_code: int
    r"""HTTP response status code for this operation"""

    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""

    object: Optional[StartSessionResponseBody] = None
    r"""Session successfully started"""
