"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from honeyhive.models.components import metric as components_metric
from honeyhive.types import BaseModel
from honeyhive.utils import FieldMetadata, QueryParamMetadata
import httpx
from typing import List, Optional, TypedDict
from typing_extensions import Annotated, NotRequired


class GetMetricsRequestTypedDict(TypedDict):
    project_name: str
    r"""Project name associated with metrics"""


class GetMetricsRequest(BaseModel):
    project_name: Annotated[
        str, FieldMetadata(query=QueryParamMetadata(style="form", explode=True))
    ]
    r"""Project name associated with metrics"""


class GetMetricsResponseTypedDict(TypedDict):
    content_type: str
    r"""HTTP response content type for this operation"""
    status_code: int
    r"""HTTP response status code for this operation"""
    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""
    metrics: NotRequired[List[components_metric.MetricTypedDict]]
    r"""A list of metrics"""


class GetMetricsResponse(BaseModel):
    content_type: str
    r"""HTTP response content type for this operation"""

    status_code: int
    r"""HTTP response status code for this operation"""

    raw_response: httpx.Response
    r"""Raw HTTP response; suitable for custom response parsing"""

    metrics: Optional[List[components_metric.Metric]] = None
    r"""A list of metrics"""
