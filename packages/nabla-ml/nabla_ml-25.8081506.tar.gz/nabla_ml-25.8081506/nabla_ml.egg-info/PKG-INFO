Metadata-Version: 2.4
Name: nabla_ml
Version: 25.8081506
Summary: Dynamic neural networks and function transformations in Python + Mojo
Author-email: TilliFe <tillmann.fehrenbach@gmail.com>
Project-URL: Homepage, https://github.com/nabla-ml/nabla
Project-URL: Repository, https://github.com/nabla-ml/nabla
Project-URL: Bug Tracker, https://github.com/nabla-ml/nabla/issues
Keywords: deep learning,machine learning,jax,autodiff,nabla,mojo,max,gpu,vmap,grad
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Operating System :: OS Independent
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: >=3.10
Description-Content-Type: text/markdown
Requires-Dist: numpy<2.0.0,>=1.22.0
Requires-Dist: modular>=25.0.0
Provides-Extra: dev
Requires-Dist: pytest>=7.0; extra == "dev"
Requires-Dist: ruff; extra == "dev"
Requires-Dist: black; extra == "dev"
Requires-Dist: mypy; extra == "dev"
Requires-Dist: build; extra == "dev"
Requires-Dist: twine; extra == "dev"
Requires-Dist: pre-commit; extra == "dev"

![alt text](assets/nablalogo.png)

Nabla is a scientific computing library in Python, featuring:

- Multidimensional array computation with strong GPU acceleration
- JAX-like composable function transformations: `grad`, `vmap`, `jit`, and other automatic differentiation tools
- Deep integration with the MAX compiler and custom Mojo ðŸ”¥ kernels

For tutorials and API reference, visit: [nablaml.com](https://nablaml.com/index.html)

## Installation

```bash
pip install nabla-ml
```

## Quick Start

```python
import nabla as nb

# Example function using Nabla's array operations
def foo(input):
    return nb.sum(input * input, axes=-1)

# Differentiate, vectorize, accelerate
foo_grads = nb.jit(nb.vmap(nb.grad(foo)))
gradients = foo_grads(nb.randn((10, 5)).to(nb.accelerator()))
```

## For Developers

1. Clone the repository
2. Create a virtual environment (recommended)
3. Install dependencies

```bash
git clone https://github.com/nabla-ml/nabla.git
cd nabla

python3 -m venv venv
source venv/bin/activate

pip install -r requirements-dev.txt
pip install -e ".[dev]"
```

## Repository Structure

<!-- ![alt text](assets/image.png) -->

```text
nabla/
â”œâ”€â”€ nabla/                     # Core Python library
â”‚   â”œâ”€â”€ core/                  # Array class and MAX compiler integration
â”‚   â”œâ”€â”€ nn/                    # Neural network modules and models
â”‚   â”œâ”€â”€ ops/                   # Mathematical operations (binary, unary, linalg, etc.)
â”‚   â”œâ”€â”€ transforms/            # Function transformations (vmap, grad, jit, etc.)
â”‚   â””â”€â”€ utils/                 # Utilities (formatting, types, MAX-interop, etc.)
â”œâ”€â”€ tests/                     # Comprehensive test suite
â”œâ”€â”€ tutorials/                 # Notebooks on Nabla usage for ML tasks
â””â”€â”€ examples/                  # Example scripts for common use cases
```

## Contributing

Contributions welcome! Discuss significant changes in Issues first. Submit PRs for bugs, docs, and smaller features.

## License

Nabla is licensed under the [Apache-2.0 license](https://github.com/nabla-ml/nabla/blob/main/LICENSE).

---

*Thank you for checking out Nabla!*

[![Development Status](https://img.shields.io/badge/status-pre--alpha-red)](https://github.com/nabla-ml/nabla)
[![PyPI version](https://badge.fury.io/py/nabla-ml.svg)](https://badge.fury.io/py/nabla-ml)
[![Python 3.12+](https://img.shields.io/badge/python-3.12+-blue.svg)](https://www.python.org/downloads/)
[![License: Apache 2.0](https://img.shields.io/badge/license-Apache%202.0-blue.svg)](https://www.apache.org/licenses/LICENSE-2.0)
