# Multi-stage build for smaller image size
# Stage 1: Builder
FROM python:3.12-slim AS builder

# Set working directory
WORKDIR /app

# Install build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc \
    python3-dev \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/*

# Install uv for package management
RUN pip install --no-cache-dir uv

# Copy only dependency files first (better caching)
COPY pyproject.toml README.md ./

# Install dependencies in a virtual environment
RUN python -m venv /app/venv
ENV PATH="/app/venv/bin:$PATH"
RUN uv pip install --no-cache .

# Copy source code
COPY src/ ./src/

# Install the package
RUN uv pip install --no-cache .

# Stage 2: Runtime (minimal image)
FROM python:3.12-slim

# Install only runtime dependencies (no gcc/dev packages)
RUN apt-get update && apt-get install -y --no-install-recommends \
    libpq5 \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean \
    && rm -rf /var/cache/apt/archives/*

# Create non-root user
RUN useradd -m -u 1000 mcpuser

# Set working directory
WORKDIR /app

# Copy virtual environment from builder
COPY --from=builder --chown=mcpuser:mcpuser /app/venv /app/venv

# Set environment to use venv
ENV PATH="/app/venv/bin:$PATH"
ENV PYTHONUNBUFFERED=1
ENV MCP_TRANSPORT="stdio"

# Switch to non-root user
USER mcpuser

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python -c "import psycopg2; print('healthy')" || exit 1

# Expose port for SSE/HTTP transports (optional)
EXPOSE 8000

# Entry point - uses the installed package command
ENTRYPOINT ["mcp-server-aact"]

# Default command
CMD []