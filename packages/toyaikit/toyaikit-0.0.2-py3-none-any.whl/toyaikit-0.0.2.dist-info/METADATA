Metadata-Version: 2.4
Name: toyaikit
Version: 0.0.2
Summary: Toolkit for building AI assistants and tool integrations.
Project-URL: Homepage, https://github.com/alexeygrigorev/toyaikit
Project-URL: Repository, https://github.com/alexeygrigorev/toyaikit
Project-URL: Issues, https://github.com/alexeygrigorev/toyaikit/issues
Author-email: Alexey Grigorev <alexey@datatalks.club>
Maintainer-email: Alexey Grigorev <alexey@datatalks.club>
License: WTFPL
Keywords: ai,assistant,integration,tools
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: Other/Proprietary License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: >=3.9
Requires-Dist: ipython
Requires-Dist: markdown
Requires-Dist: openai>=1.97.0
Description-Content-Type: text/markdown

# toyaikit

Minimalistic implementation for LLM-based chat assistants with Tool Use (function calling) and MCP



This project started from a workshop "From RAG to Agents: Build Your Own AI Assistant"

https://github.com/alexeygrigorev/rag-agents-workshop

and then later from the LLM Zoomcamp course
where we covered AI Agents and MCP

https://github.com/DataTalksClub/llm-zoomcamp

## Publishing

Build the package:
```bash
uv run hatch build
```

Publish to test PyPI:
```bash
uv run hatch publish --repo test
```

Publish to PyPI:
```bash
uv run hatch publish
```

Clean up:
```bash
rm -r dist/
```

Note: For Hatch publishing, you'll need to configure your PyPI credentials in `~/.pypirc` or use environment variables.