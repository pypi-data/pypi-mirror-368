[project]
name = "latin-rectangles"
version = "0.1.2"
description = "Count the number of one-row extensions of Latin rectangles."
readme = "README.md"
authors = [
    { name = "Ioannis Michaloliakos", email = "ioannis.michalol@ufl.edu" }
]
requires-python = ">=3.12"
dependencies = []

[project.scripts]
latin-rectangles = "latin_rectangles.__main__:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "mypy>=1.16.0",
    "pytest>=8.4.0",
    "pytest-cov>=6.1.1",
    "ruff>=0.11.13",
]

# Ruff configuration
[tool.ruff]
# Set the maximum line length to 88 (Black's default)
line-length = 88

# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # Pyflakes
    "UP",     # pyupgrade
    "B",      # flake8-bugbear
    "SIM",    # flake8-simplify
    "I",      # isort
    "N",      # pep8-naming
    "C4",     # flake8-comprehensions
    "PIE",    # flake8-pie
    "RUF",    # Ruff-specific rules
]
ignore = [
    "E501",   # line too long, handled by formatter
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.lint.isort]
known-first-party = ["latin_rectangles"]

# MyPy configuration
[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

# Pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=latin_rectangles",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80",
]
