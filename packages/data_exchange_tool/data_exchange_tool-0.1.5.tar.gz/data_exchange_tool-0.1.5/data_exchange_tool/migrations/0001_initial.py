# Generated by Django 3.0 on 2025-05-29 15:19

import cecommerce.file_mappings
import cecommerce.storage_backends
from django.db import migrations, models
import functools


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ImportJob",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("creation_timestamp", models.DateTimeField(auto_now_add=True)),
                ("update_timestamp", models.DateTimeField(auto_now=True)),
                (
                    "import_status",
                    models.CharField(
                        choices=[
                            ("CREATED", "CREATED"),
                            ("PREVIEW_IN_PROGRESS", "PREVIEW_IN_PROGRESS"),
                            ("PREVIEW_FAILED", "PREVIEW_FAILED"),
                            ("PREVIEW_SUCCEEDED", "PREVIEW_SUCCEEDED"),
                            ("IMPORT_IN_PROGRESS", "IMPORT_IN_PROGRESS"),
                            ("IMPORT_FAILED", "IMPORT_FAILED"),
                            ("IMPORT_SUCCEEDED", "IMPORT_SUCCEEDED"),
                        ],
                        default="CREATED",
                        max_length=32,
                    ),
                ),
                (
                    "uploaded_file",
                    models.FileField(
                        blank=True,
                        null=True,
                        storage=cecommerce.storage_backends.S3MediaStorage(),
                        upload_to=functools.partial(
                            cecommerce.file_mappings.StorageConfig._generate_filename,
                            *("import_jobs/upload_file",),
                            **{}
                        ),
                        verbose_name="Uploaded file",
                    ),
                ),
                (
                    "async_task_id",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Task ID"
                    ),
                ),
                (
                    "initiated_by",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Initiated by",
                    ),
                ),
                (
                    "changes_preview_file",
                    models.FileField(
                        blank=True,
                        null=True,
                        storage=cecommerce.storage_backends.S3MediaStorage(),
                        upload_to=functools.partial(
                            cecommerce.file_mappings.StorageConfig._generate_filename,
                            *("import_jobs/upload_file",),
                            **{}
                        ),
                        verbose_name="Preview changes file",
                    ),
                ),
                (
                    "total_rows",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Total rows"
                    ),
                ),
                (
                    "inserted_rows",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Inserted rows"
                    ),
                ),
                (
                    "updated_rows",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Updated rows"
                    ),
                ),
                (
                    "error_rows",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Error rows"
                    ),
                ),
                ("status_message", models.TextField()),
            ],
            options={
                "ordering": ["-initiated_by"],
            },
        ),
    ]
