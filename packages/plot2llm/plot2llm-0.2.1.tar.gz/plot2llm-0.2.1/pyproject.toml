[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "plot2llm"
version = "0.2.1"
description = "Convert figures from visualization libraries into formats optimized for Large Language Models (LLMs)"
readme = "README.md"
license = { text = "MIT" }
authors = [
    { name = "Osc2405", email = "orosero2405@gmail.com" }
]
maintainers = [
    { name = "Osc2405", email = "orosero2405@gmail.com" }
]
keywords = ["visualization", "llm", "matplotlib", "seaborn", "plotly", "data-analysis", "machine-learning"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Scientific/Engineering :: Visualization",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.19.0",
    "pandas>=1.1.0",
    "webcolors>=1.11.0",
    "scipy>=1.7.0",
    "jsonschema>=3.2.0",
]

[project.optional-dependencies]
all = [
    "matplotlib>=3.3.0",
    "seaborn>=0.11.0",
    "plotly>=4.14.0",
]
matplotlib = ["matplotlib>=3.3.0"]
seaborn = ["seaborn>=0.11.0"]
plotly = ["plotly>=4.14.0"]
dev = [
    "pytest>=6.0.0",
    "pytest-cov>=2.10.0",
    "black>=21.0.0",
    "flake8>=3.8.0",
    "mypy>=0.800",
    "isort>=5.10.0",
    "pre-commit>=2.15.0",
]
docs = [
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.15.0",
]
test = [
    "pytest>=6.0.0",
    "pytest-cov>=2.10.0",
    "matplotlib>=3.3.0",
    "seaborn>=0.11.0",
    "plotly>=4.14.0",
]

[project.urls]
Homepage = "https://github.com/Osc2405/plot2llm"
Documentation = "https://plot2llm.readthedocs.io"
Repository = "https://github.com/Osc2405/plot2llm.git"
"Bug Tracker" = "https://github.com/Osc2405/plot2llm/issues"
"Source Code" = "https://github.com/Osc2405/plot2llm"
"Download" = "https://pypi.org/project/plot2llm/#files"

[tool.hatch.build.targets.wheel]
packages = ["plot2llm"]

[tool.hatch.build.targets.sdist]
include = [
    "/plot2llm",
    "/tests",
    "/docs",
    "/examples",
    "/notebooks",
    "/schemas",
    "/scripts",
    "README.md",
    "LICENSE",
    "CHANGELOG.md",
    "CODE_OF_CONDUCT.md",
    "CONTRIBUTING.md",
    "SECURITY.md",
    "PROJECT_CHECKLIST.md",
    "LLM_ANALYSIS_GUIDE.md",
    "ADVANCED_ANALYSIS_SUMMARY.md",
    "TESTING_SUMMARY.md",
    "requirements.txt",
    "requirements-dev.txt",
    "setup.py",
    "Makefile",
    "tox.ini",
    "tox-simple.ini",
    "quick_test.py",
]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | build
    | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["plot2llm"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "matplotlib.*",
    "seaborn.*",
    "plotly.*",
    "scipy.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["plot2llm"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "docs"]
skips = ["B101", "B601"]

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["B011"]