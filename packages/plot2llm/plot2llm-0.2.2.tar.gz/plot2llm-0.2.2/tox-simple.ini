[tox]
minversion = 3.8.0
envlist = py311, lint, fast, coverage
skip_missing_interpreters = true
isolated_build = true

[testenv]
description = Run tests with pytest
deps = 
    pytest>=7.0.0
    pytest-cov>=4.0.0
    pytest-mock>=3.10.0
    matplotlib>=3.3.0
    seaborn>=0.11.0
    numpy>=1.19.0
    pandas>=1.1.0
commands = 
    pytest tests/ -v --tb=short
setenv =
    MPLBACKEND = Agg
    PLOT2LLM_LOG_LEVEL = WARNING

[testenv:coverage]
description = Run tests with coverage reporting
deps = 
    {[testenv]deps}
    coverage>=7.0.0
commands = 
    pytest tests/ -v --cov=plot2llm --cov-report=term
    coverage report --show-missing

[testenv:lint]
description = Run linting checks
deps =
    black>=22.0.0
    flake8>=5.0.0
    isort>=5.10.0
commands =
    black --check --diff plot2llm/ tests/
    isort --check-only --diff plot2llm/ tests/
    flake8 plot2llm/ tests/

[testenv:format]
description = Auto-format code
deps =
    black>=22.0.0
    isort>=5.10.0
commands =
    black plot2llm/ tests/
    isort plot2llm/ tests/

[testenv:fast]
description = Run fast unit tests
deps = {[testenv]deps}
commands =
    pytest tests/ -v -m "unit" -x --tb=short

[testenv:build]
description = Build distribution packages
deps =
    build>=0.8.0
    twine>=4.0.0
commands =
    python -m build
    twine check dist/*

[testenv:clean]
description = Clean build artifacts
commands =
    python -c "import shutil; import os; [shutil.rmtree(d, ignore_errors=True) for d in ['build', 'dist', 'plot2llm.egg-info', '.pytest_cache', 'htmlcov', '.coverage'] if os.path.exists(d)]" 