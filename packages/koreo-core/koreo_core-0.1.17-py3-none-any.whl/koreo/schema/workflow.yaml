apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: workflows.koreo.dev
spec:
  scope: Namespaced
  group: koreo.dev
  names:
    kind: Workflow
    plural: workflows
    singular: workflow
  versions:
    - name: v1beta1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              nullable: false
              properties:
                crdRef:
                  nullable: false
                  type: object
                  description: |
                    Optionally specify a Resource that will cause this Workflow
                    to run. The triggering-object is available to pass as an
                    input as `parent`.
                  properties:
                    apiGroup:
                      type: string
                      nullable: false
                    version:
                      type: string
                      nullable: false
                    kind:
                      type: string
                      nullable: false
                  required: [apiGroup, version, kind]
                steps:
                  nullable: false
                  type: array
                  maxItems: 20
                  description: |
                    A collection of Functions and Workflows (Logic) which
                    define this Workflow. The steps may be run as soon as all
                    of their dependencies have successfully evaluated. Any step
                    referencing another step must be listed after the step it
                    references, but evaluation order is not guaranteed.
                  items:
                    type: object
                    properties:
                      label:
                        type: string
                        nullable: false
                        minLength: 3
                        maxLength: 45
                        x-kubernetes-validations:
                        - rule: self.matches("^[[:word:]]+$")
                          message: must be alphanumeric + underscores
                        description: |
                          The name other steps may use to access this step's
                          return value (or to express dependence on this step).
                          This is an identifier it must be alphanumeric +
                          underscores.
                      ref:
                        type: object
                        nullable: false
                        description: |
                          The Function or Workflow to run as the Logic. No
                          default `inputs` are provided to the Logic. For
                          Workflows, `inputs` are passed as the `parent`, which
                          allows workflows to be invoked as sub-workflows or by
                          their `crdRef`.
                        properties:
                          kind:
                            type: string
                            nullable: false
                            enum: [ResourceFunction, ValueFunction, Workflow]
                          name:
                            type: string
                            nullable: false
                        required: [kind, name]
                      refSwitch:
                        type: object
                        nullable: false
                        description: |
                          Dyanmically select the Function or Workflow to run as
                          the step's Logic. No default `inputs` are provided to
                          the Logic. For Workflows, `inputs` are passed as the
                          workflow's `parent`, which allows workflows to be
                          invoked as sub-workflows or by their `crdRef`.
                        properties:
                          switchOn:
                            type: string
                            nullable: false
                            x-kubernetes-validations:
                            - rule: self.startsWith('=')
                              message: must be an expression
                          cases:
                            type: array
                            nullable: false
                            minItems: 1
                            maxItems: 10
                            x-kubernetes-list-type: map
                            x-kubernetes-list-map-keys: [case]
                            items:
                              type: object
                              properties:
                                case:
                                  type: string
                                  nullable: false
                                  x-kubernetes-validations:
                                  - rule: "!self.startsWith('=')"
                                    message: may not be an expression
                                default:
                                  type: boolean
                                  default: false
                                  nullable: false
                                kind:
                                  type: string
                                  nullable: false
                                  enum: [ResourceFunction, ValueFunction, Workflow]
                                name:
                                  type: string
                                  nullable: false
                              required: [case, kind, name]
                      skipIf:
                        type: string
                        nullable: false
                        description: |
                          Skip running this step if the Koreo Expression
                          evaluates to `true`.
                        x-kubernetes-validations:
                        - rule: self.startsWith('=')
                          message: must be an expression
                      forEach:
                        type: object
                        nullable: false
                        description: |
                          Invoke the Logic once per item in `itemIn`, passing
                          the item within `inputs` as the value of `inputKey`.
                        properties:
                          itemIn:
                            type: string
                            nullable: false
                            description: |
                              An expression that evaluates to a list of values.
                            x-kubernetes-validations:
                            - rule: self.startsWith('=')
                              message: "must be an expression (start with '=')."
                          inputKey:
                            type: string
                            nullable: false
                            description: |
                              The key within `inputs` that the item will be
                              passed under.
                        required: [itemIn, inputKey]
                      inputs:
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                        nullable: false
                        description: |
                          The inputs to be provided to the Logic. `inputs` must
                          be an object, but static values, arrays, and objects
                          are allowed. Koreo Expressions are allowed as values
                          and are indicated with a leading `=`. Note that no
                          default inputs are provided. The return values from
                          prior steps, may be referenced using the step's
                          `label` within the `steps` object. You may pass in
                          the entire value or extract sub values from prior
                          steps (`steps.prior_step.sub.value`).
                      condition:
                        nullable: false
                        type: object
                        description: |
                          Optional configuration for a Condition that will be
                          set in the triggering-object's `status.conditions`
                          list.
                        properties:
                          type:
                            type: string
                            nullable: false
                            maxLength: 40
                            x-kubernetes-validations:
                            - rule: self.matches("^[A-Z][a-zA-Z0-9]+$")
                              message: |
                                must be PascalCase and contain only alphanumeric chars
                            description: |
                              The type for a condition acts as its key. If
                              steps share type, the condition from last run
                              will be reported on the parent.
                          name:
                            type: string
                            nullable: false
                            maxLength: 60
                            x-kubernetes-validations:
                            - rule: "!self.startsWith('=')"
                              message: name may not be an expression
                            description: |
                              A short, human-meaningful description of what the
                              step does or manages. It is used within simple
                              template descriptions to describe the step's
                              outcome.
                        required: [type, name]
                      state:
                        type: object
                        nullable: false
                        maxProperties: 10
                        x-kubernetes-preserve-unknown-fields: true
                        description: |
                          Defines an object that will be set on the parent's
                          `status.state`. Useful for surfacing values for
                          informational or debugging purposes, or to act as a
                          cache. The `state` objects from all steps are merged,
                          so if steps shares keys, the values from last step to
                          run may overwrite earlier values.
                    required: [label]
                    oneOf:
                    - required: [ref]
                    - required: [refSwitch]
              required: [steps]
            status:
              x-kubernetes-preserve-unknown-fields: true
              type: object
