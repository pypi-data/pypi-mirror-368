[project]
name = "utme"
authors = [
    { name = "Karam Assany", email = "karam.assany@disroot.org" }
]
keywords = ["turing", "machine", "emulator"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Software Development :: Interpreters",
    "Topic :: System :: Emulators",
    "Typing :: Typed",
]
urls.repository = "https://codeberg.org/karam/utme"
readme = "README.md"

dynamic = ["version", "description"]

requires-python = ">=3.12"


[dependency-groups]
dev = [
    "coverage==7.10.2",
    "mypy==1.17.1",
    "pytest==8.4.1",
    "ruff==0.12.8",
]


[build-system]
build-backend = "flit_core.buildapi"
requires = ["flit_core==3.12.0"]


[tool.coverage.run]
branch = true
relative_files = true

[tool.coverage.report]
exclude_also = [
    # Exclude static type checking branches
    "if TYPE_CHECKING:",
]


[tool.mypy]
disallow_any_expr = true
disallow_any_generics = true
disallow_any_explicit = true
disallow_any_decorated = true
disallow_any_unimported = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_untyped_decorators = true
disallow_subclassing_any = true

warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_ignores = true
warn_unused_configs = true
warn_incomplete_stub = true

strict_equality = true
strict_bytes = true

implicit_reexport = false
extra_checks = true

enable_error_code = [
    "redundant-self",
    "deprecated",
    "redundant-expr",
    "possibly-undefined",
    "truthy-bool",
    "truthy-iterable",
    "ignore-without-code",
    "unused-awaitable",
    "explicit-override",
    "mutable-override",
    "unimported-reveal",
    "exhaustive-match",
]

show_error_context = true
show_column_numbers = true
show_error_code_links = true
pretty = true


[tool.ruff]
line-length = 79

[tool.ruff.format]
docstring-code-format = true
line-ending = "lf"
skip-magic-trailing-comma = true

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    # Rules that contradict other superior rules:
    "D203",  # contradicts D211
    "D212",  # contradicts D213

    # Rules that contradict the ruff formatter:
    "COM812",

    # Rules that are low-key stupid:
    "S101",
]

[tool.ruff.lint.per-file-ignores]
# No (mandatory) docstrings for tests
"tests/**/test_*.py" = ["D100", "D103"]
"tests/**/__init__.py" = ["D104"]

# Examples are not part of any package
"examples/*.py" = ["INP001"]

[tool.ruff.lint.isort]
split-on-trailing-comma = false
