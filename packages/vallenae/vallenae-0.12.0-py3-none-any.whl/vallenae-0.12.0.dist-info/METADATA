Metadata-Version: 2.4
Name: vallenae
Version: 0.12.0
Summary: Extract and analyze Acoustic Emission measurement data
Project-URL: Changelog, https://github.com/vallen-systems/pyVallenAE/blob/master/CHANGELOG.md
Project-URL: Source, https://github.com/vallen-systems/pyVallenAE
Project-URL: Issues, https://github.com/vallen-systems/pyVallenAE/issues
Author-email: Lukas Berbuer <software@vallen.de>
License: MIT License
License-File: LICENSE.txt
Keywords: acoustic emission,amsy,analysis,data acquisition,pridb,sqlite,timepicker,tradb,trfdb,vallen,waveline
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Software Development
Classifier: Topic :: Software Development :: Libraries
Requires-Python: >=3.7
Requires-Dist: numpy
Requires-Dist: pandas>=0.24
Requires-Dist: soundfile
Requires-Dist: tqdm
Requires-Dist: typing-extensions
Provides-Extra: dev
Requires-Dist: coverage[toml]>=5; extra == 'dev'
Requires-Dist: furo; extra == 'dev'
Requires-Dist: matplotlib; extra == 'dev'
Requires-Dist: mypy>=0.9; extra == 'dev'
Requires-Dist: myst-parser; extra == 'dev'
Requires-Dist: numba; extra == 'dev'
Requires-Dist: pillow; extra == 'dev'
Requires-Dist: pytest-benchmark; extra == 'dev'
Requires-Dist: pytest>=6; extra == 'dev'
Requires-Dist: ruff>=0.5; extra == 'dev'
Requires-Dist: scipy; extra == 'dev'
Requires-Dist: sphinx-autodoc-typehints; extra == 'dev'
Requires-Dist: sphinx-gallery; extra == 'dev'
Requires-Dist: sphinx>=5; extra == 'dev'
Requires-Dist: tox>=3.4; extra == 'dev'
Provides-Extra: docs
Requires-Dist: furo; extra == 'docs'
Requires-Dist: matplotlib; extra == 'docs'
Requires-Dist: myst-parser; extra == 'docs'
Requires-Dist: numba; extra == 'docs'
Requires-Dist: pillow; extra == 'docs'
Requires-Dist: scipy; extra == 'docs'
Requires-Dist: sphinx-autodoc-typehints; extra == 'docs'
Requires-Dist: sphinx-gallery; extra == 'docs'
Requires-Dist: sphinx>=5; extra == 'docs'
Provides-Extra: tests
Requires-Dist: coverage[toml]>=5; extra == 'tests'
Requires-Dist: pytest-benchmark; extra == 'tests'
Requires-Dist: pytest>=6; extra == 'tests'
Provides-Extra: tools
Requires-Dist: mypy>=0.9; extra == 'tools'
Requires-Dist: ruff>=0.5; extra == 'tools'
Requires-Dist: tox>=3.4; extra == 'tools'
Description-Content-Type: text/markdown

# Vallen AE Python Tools

[![CI](https://github.com/vallen-systems/vallenae/workflows/CI/badge.svg)](https://github.com/vallen-systems/vallenae/actions)
[![Documentation Status](https://readthedocs.org/projects/pyvallenae/badge/?version=latest)](https://pyvallenae.readthedocs.io/en/latest/?badge=latest)
[![Coverage Status](https://coveralls.io/repos/github/vallen-systems/vallenae/badge.svg?branch=master)](https://coveralls.io/github/vallen-systems/vallenae)
[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)
[![PyPI](https://img.shields.io/pypi/v/vallenae)](https://pypi.org/project/vallenae)
[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/vallenae)](https://pypi.org/project/vallenae)
[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)
[![Ruff](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/charliermarsh/ruff/main/assets/badge/v1.json)](https://github.com/charliermarsh/ruff)

**[Documentation](https://pyvallenae.readthedocs.io/) Â· [Examples](https://pyvallenae.readthedocs.io/en/stable/_examples)**

Python tools to extract and analyze Acoustic Emission measurement data.
The package includes following modules:

- vallenae.**io**: Reading (and writing) of Vallen Systeme SQLite database files (*.pridb, *.tradb, *.trfdb)
- vallenae.**features**: Extraction of Acoustic Emission features
- vallenae.**timepicker**: Timepicking algorithms for arrival time estimations

> **Note**:
> A free/lite version of the Vallen AE Suite is available since the release R2020.
> If offers the basic features for real-time data visualization and analysis with VisualAE.
> So you could write you own pridb/tradb files and have real-time visualizations with VisualAE.
>
> The Vallen AE Suite can be downloaded [here](https://www.vallen.de/downloads/).

## Installation

Install the latest version from [PyPI](https://pypi.org/project/vallenae):

```shell
$ pip install vallenae
```

If you want to run the latest version of the code, you can install from the master branch directly:

```shell
$ pip install -U git+https://github.com/vallen-systems/vallenae.git
# Or if you don't have git installed
$ pip install -U https://github.com/vallen-systems/vallenae/zipball/master
```

## Contributing

Feature requests, bug reports and fixes are always welcome!
Just [create an issue](https://github.com/vallen-systems/vallenae/issues/new) or make a pull-request.

### Development setup

```shell
# Clone this repository
$ git clone https://github.com/vallen-systems/vallenae.git
$ cd vallenae

# Install package and dependencies
$ pip install -e .[dev]

# Run the test suite with tox
$ tox

# Build the documentation with Sphinx
$ cd docs
$ make html  # on Linux
$ ./make.bat html  # on Windows
```
