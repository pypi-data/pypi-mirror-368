# .github/workflows/release.yml
name: CT Spec Release (PyPI + versioned docs)

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: read
  id-token: write   # PyPI Trusted Publishing

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout with full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build tooling
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build sdist + wheel
        run: python -m build

      - name: (Sanity) List artifacts
        run: |
          python - << 'PY'
          import zipfile, glob, os
          print("Dist files:", os.listdir("dist"))
          for whl in glob.glob("dist/*.whl"):
              with zipfile.ZipFile(whl) as z:
                  schemas = [n for n in z.namelist() if n.endswith(".schema.json")]
                  print("Schemas in wheel:", whl, "->", schemas)
          PY

      - name: Publish to PyPI (Trusted Publishing)
        uses: pypa/gh-action-pypi-publish@release/v1

  docs:
    needs: build-and-publish
    runs-on: ubuntu-latest
    permissions:
      contents: write    # <-- allow mike to push to gh-pages
    steps:
      - name: Checkout with full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install docs deps (from extras)
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[docs]"

      - name: Configure git for mike
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Ensure gh-pages branch exists locally
        run: |
          git fetch origin gh-pages:gh-pages || true

      - name: Build docs (fail fast)
        run: mkdocs build

      - name: Deploy versioned docs with Mike
        env:
          TAG: ${{ github.ref_name }}   # e.g., v0.0.1
        run: |
          VERSION="${TAG#v}"            # 0.0.1
          mike deploy --push --update-aliases latest "$VERSION"
