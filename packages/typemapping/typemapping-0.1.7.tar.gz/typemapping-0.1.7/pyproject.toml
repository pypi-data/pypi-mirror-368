[project]
name = "typemapping"
version = "0.1.7"
description = "Advanced type compatibility and checking system for Python"
authors = [
    { name = "rodbell", email = "bellirodrigo2@gmail.com" }
]
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.8"
keywords = ["typing", "type-checking", "generics", "variance", "annotations"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
    "Typing :: Typed",
]

dependencies = [
    "typing-extensions>=4.13.2"
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-cov",
    "black>=23.1.0",
    "isort>=5.11.5",
    "mypy>=1.10.0",
    "ruff>=0.11.10",
    "twine",
    "build"
]

[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["typemapping*"]

[tool.setuptools.package-data]
typemapping = ["py.typed"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
exclude = [
    "tests/*"
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311", "py312"]

[tool.isort]
profile = "black"
line_length = 88

[tool.ruff]
target-version = "py38"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long
    "B008",  # do not perform function calls in argument defaults
]