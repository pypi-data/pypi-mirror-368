[project]
    authors = [{ name = "Nate Landau", email = "github@natelandau.com" }]
    classifiers = [
        "License :: OSI Approved :: MIT License",
        "Programming Language :: Python :: 3.11",
        "Programming Language :: Python :: 3.12",
        "Programming Language :: Python :: 3.13",
    ]
    dependencies = [
        "apscheduler>=3.11.0,<4.0.0",
        "boto3>=1.40.6",
        "cappa>=0.29.1",
        "nclutils>=2.1.0",
        "pydantic-settings>=2.10.1,<3.0.0",
        "pydantic>=2.11.7,<3.0.0",
        "rich>=14.1.0",
        "whenever>=0.8.8",
    ]
    description = "A simple tool to backup and restore data as tgz files."
    license = "MIT"
    license-files = ["LICENSE"]
    name = "ezbak"
    readme = "README.md"
    requires-python = ">=3.11, <3.14"
    version = "0.11.4"

    [project.urls]
        Homepage   = "https://github.com/natelandau/ezbak"
        Repository = "https://github.com/natelandau/ezbak"

    [project.scripts]
        ezbak = "ezbak.cli:main"

[dependency-groups]
    dev = [
        "commitizen>=4.8.3",
        "coverage>=7.10.3",
        "duty>=1.6.2",
        "mypy>=1.17.1",
        "pre-commit>=4.3.0",
        "pytest-clarity>=1.0.1",
        "pytest-cov>=6.2.1",
        "pytest-mock>=3.14.1",
        "pytest-pretty-terminal>=1.1.0",
        "pytest-sugar>=1.0.0",
        "pytest>=8.4.1",
        "rich>=14.1.0",
        "ruff>=0.12.8",
        "time-machine>=2.17.0",
        "typos>=1.35.3",
        "yamllint>=1.37.1",
    ]

[build-system]
    build-backend = "hatchling.build"
    requires      = ["hatchling"]

[tool.commitizen]
    bump_message               = "bump(release): v${current_version} â†’ v${new_version}"
    changelog_merge_prerelease = true
    tag_format                 = "v${version}"
    update_changelog_on_bump   = true
    version_files              = ["src/ezbak/constants.py:__version__"]
    version_provider           = "uv"

[tool.coverage.report] # https://coverage.readthedocs.io/en/latest/config.html#report
    exclude_lines = [
        'Run\(\).running',
        'assert_never',
        'def __repr__',
        'except [\w\s\._]+ as .*:',
        'if TYPE_CHECKING:',
        'pragma: no cover',
        'time\.sleep',
    ]
    fail_under = 20
    precision = 1
    show_missing = true
    skip_covered = true
    skip_empty = true

[tool.coverage.run]
    branch       = true
    command_line = "--module pytest"
    data_file    = ".cache/.coverage"
    source       = ["src"]

[tool.coverage.xml]
    output = ".cache/coverage.xml"

[tool.mypy] # https://mypy.readthedocs.io/en/latest/config_file.html
    cache_dir                   = ".cache/mypy"
    disallow_any_unimported     = false
    disallow_subclassing_any    = false
    disallow_untyped_decorators = false
    disallow_untyped_defs       = true
    exclude                     = ["tests/"]
    follow_imports              = "normal"
    ignore_missing_imports      = true
    junit_xml                   = ".cache/mypy.xml"
    no_implicit_optional        = true
    pretty                      = false
    show_column_numbers         = true
    show_error_codes            = true
    show_error_context          = true
    strict_optional             = false
    warn_redundant_casts        = true
    warn_unreachable            = true
    warn_unused_ignores         = true

[tool.pytest.ini_options]
    addopts             = "--color=yes --doctest-modules --exitfirst --failed-first --strict-config --strict-markers --junitxml=.cache/pytest.xml"
    cache_dir           = ".cache/pytest"
    doctest_optionflags = ["IGNORE_EXCEPTION_DETAIL", "NORMALIZE_WHITESPACE"]
    filterwarnings      = ["error", "ignore::DeprecationWarning", "ignore::ResourceWarning"]
    testpaths           = ["src", "tests"]
    xfail_strict        = true

[tool.hatch.metadata]
    allow-direct-references = true

[tool.ruff] # https://github.com/charliermarsh/ruff
    exclude        = [".cache", ".dev", ".git", ".venv", "_build", "build", "dist", "tmp"]
    fix            = true
    line-length    = 100
    output-format  = "grouped"
    src            = ["src", "tests"]
    target-version = "py311"

    [tool.ruff.lint]
        ignore = [
            "ANN204", # missing return type annotation for special method `__init__`
            "B006",   # mutable-argument-default
            "B008",   # function-call-in-default-argument
            "COM812", # Trailing comma missing"
            "CPY001", # Missing copyright notice at top of file
            "D107",   # undocumented-public-init
            "D213",   # multi-line-summary-second-line
            "E501",   # line-too-long
            "FIX002", # Line contains TODO, consider resolving the issue
            "TD002",  # Missing author in TODO
            "TD003",  # Missing issue link on the line following this TODO
            "UP007",  # non-pep604-annotation
        ]
        per-file-ignores = { "tests/*.py" = [
            "A002",
            "A003",
            "ANN001",
            "ANN003",
            "ANN201",
            "ANN202",
            "ANN205",
            "ARG001",
            "ARG002",
            "ARG005",
            "D102",
            "D417",
            "DTZ001",  #datetime called without a `tzinfo` argument
            "E712",
            "ERA001",
            "F403",
            "PGH003",
            "PLC2701",
            "PLR0913",
            "PLR0917",
            "PLR2004",
            "PLR6301",
            "S101",
            "S106",    # Possible hardcoded password
            "SLF001",

        ], "duties.py" = ["ANN001"] }
        preview = true
        select = ["ALL"]
        unfixable = [
            "ERA001", # Commented out code
            "F401",   # unused-import
            "F841",   # unused-variable
        ]
        [tool.ruff.lint.mccabe]
            max-complexity = 10

        [tool.ruff.lint.pydocstyle]
            convention = "google"

        [tool.ruff.lint.pylint]
            max-args = 6

    [tool.ruff.format]
        indent-style              = "space"
        line-ending               = "auto"
        quote-style               = "double"
        skip-magic-trailing-comma = false
