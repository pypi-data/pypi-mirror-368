{
    "api_params": {
        "dataset_type":"visual_changenet",
        "actions": ["train","evaluate","export","inference","gen_trt_engine"],
        "formats":["visual_changenet_segment", "visual_changenet_classify"],
        "accepted_ds_intents": ["training", "evaluation", "testing"],
        "image":"TAO_PYTORCH",
        "spec_backend":"yaml",
        "actions_pipe":{
            "train":"train",
            "evaluate":"evaluate",
            "export":"export_with_spec",
            "inference":"inference",
            "gen_trt_engine":"gen_trt_engine"
        }
    },

    "dataset_validation": {
        "required_files": {
            "visual_changenet_classify": [
                {
                    "all_of": [
                        {"path": "images.tar.gz", "type": "file"},
                        {"path": "dataset.csv", "type": "file"}
                    ]
                }
            ],
            "visual_changenet_segment": [
                {
                    "all_of": [
                        {"path": "A.tar.gz", "type": "file"},
                        {"path": "B.tar.gz", "type": "file"},
                        {"path": "list.tar.gz", "type": "file"},
                        {"path": "label.tar.gz", "type": "file"}
                    ]
                }
            ]
        }
    },

    "data_sources": {
        "train": {
            "dataset.segment.root_dir": {
                "source": "train_datasets",
                "multiple_sources": false,
                "path": "",
                "conditional": {
                    "metadata_key": "format",
                    "equals": "visual_changenet_segment"
                }
            },
            "dataset.classify.train_dataset.images_dir": {
                "source": "train_datasets",
                "multiple_sources": false,
                "path": "images.tar.gz",
                "conditional": {
                    "metadata_key": "format",
                    "equals": "visual_changenet_classify"
                }
            },
            "dataset.classify.train_dataset.csv_path": {
                "source": "train_datasets",
                "multiple_sources": false,
                "path": "dataset.csv",
                "conditional": {
                    "metadata_key": "format",
                    "equals": "visual_changenet_classify"
                }
            },
            "dataset.classify.validation_dataset.images_dir": {
                "source": "eval_dataset",
                "multiple_sources": false,
                "path": "images.tar.gz",
                "conditional": {
                    "metadata_key": "format",
                    "equals": "visual_changenet_classify"
                }
            },
            "dataset.classify.validation_dataset.csv_path": {
                "source": "eval_dataset",
                "multiple_sources": false,
                "path": "dataset.csv",
                "conditional": {
                    "metadata_key": "format",
                    "equals": "visual_changenet_classify"
                }
            }
        },
        "evaluate": {
            "dataset.segment.root_dir": {
                "source": "train_datasets",
                "multiple_sources": false,
                "path": "",
                "conditional": {
                    "metadata_key": "format",
                    "equals": "visual_changenet_segment"
                }
            },
            "dataset.classify.validation_dataset.images_dir": {
                "source": "eval_dataset",
                "multiple_sources": false,
                "path": "images.tar.gz",
                "conditional": {
                    "metadata_key": "format",
                    "equals": "visual_changenet_classify"
                }
            },
            "dataset.classify.validation_dataset.csv_path": {
                "source": "eval_dataset",
                "multiple_sources": false,
                "path": "dataset.csv",
                "conditional": {
                    "metadata_key": "format",
                    "equals": "visual_changenet_classify"
                }
            },
            "dataset.classify.test_dataset.images_dir": {
                "source": "eval_dataset",
                "multiple_sources": false,
                "path": "images.tar.gz",
                "conditional": {
                    "metadata_key": "format",
                    "equals": "visual_changenet_classify"
                }
            },
            "dataset.classify.test_dataset.csv_path": {
                "source": "eval_dataset",
                "multiple_sources": false,
                "path": "dataset.csv",
                "conditional": {
                    "metadata_key": "format",
                    "equals": "visual_changenet_classify"
                }
            }
        },
        "inference": {
            "dataset.segment.root_dir": {
                "source": "train_datasets",
                "multiple_sources": false,
                "path": "",
                "conditional": {
                    "metadata_key": "format",
                    "equals": "visual_changenet_segment"
                }
            },
            "dataset.classify.infer_dataset.images_dir": {
                "source": "inference_dataset",
                "multiple_sources": false,
                "path": "images.tar.gz",
                "conditional": {
                    "metadata_key": "format",
                    "equals": "visual_changenet_classify"
                }
            },
            "dataset.classify.infer_dataset.csv_path": {
                "source": "inference_dataset",
                "multiple_sources": false,
                "path": "dataset.csv",
                "conditional": {
                    "metadata_key": "format",
                    "equals": "visual_changenet_classify"
                }
            }
        },
        "gen_trt_engine": {
            "dataset.segment.root_dir": {
                "source": "train_datasets",
                "multiple_sources": false,
                "path": "",
                "conditional": {
                    "metadata_key": "format",
                    "equals": "visual_changenet_segment"
                }
            },
            "gen_trt_engine.tensorrt.calibration.cal_image_dir": {
                "source": "calibration_dataset",
                "multiple_sources": false,
                "path": "images.tar.gz",
                "transform": "wrap_in_list"
            }
        }
    },

    "spec_params":{
        "train": {
            "results_dir":"output_dir",
            "encryption_key":"key",
            "train.pretrained_model_path": "ptm_if_no_resume_model",
            "model.backbone.pretrained_backbone_path": "ptm_if_no_resume_model",
            "train.resume_training_checkpoint_path": "resume_model"
        },
        "evaluate":{
            "results_dir":"output_dir",
            "evaluate.checkpoint":"parent_model",
            "evaluate.trt_engine":"parent_model",
            "encryption_key":"key"
        },
        "inference":{
            "results_dir":"output_dir",
            "inference.checkpoint":"parent_model",
            "inference.trt_engine":"parent_model",
            "encryption_key":"key"
        },
        "export":{
            "results_dir":"output_dir",
            "export.checkpoint":"parent_model",
            "export.onnx_file":"create_onnx_file",
            "encryption_key":"key"
        },
        "gen_trt_engine":{
            "results_dir":"output_dir",
            "encryption_key":"key",
            "gen_trt_engine.onnx_file":"parent_model",
            "gen_trt_engine.trt_engine":"create_engine_file",
            "gen_trt_engine.tensorrt.calibration.cal_cache_file":"create_cal_cache"
        }
    },

    "automl_spec_params":{
        "results_dir":"automl_output_dir",
        "train.pretrained_model_path":"automl_assign_ptm",
        "model.backbone.pretrained_backbone_path": "automl_assign_ptm",
        "train.resume_training_checkpoint_path":"automl_resume_model",
        "train.checkpoint_interval":"assign_const_value,train.num_epochs",
        "train.validation_interval":"assign_const_value,train.num_epochs,train.checkpoint_interval",
        "encryption_key":"key"
    },

    "metrics": {
        "available_metrics": ["val_acc"],
        "monitoring_metric": "val_acc"
    }
}