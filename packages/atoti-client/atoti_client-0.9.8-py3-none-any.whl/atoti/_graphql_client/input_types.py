# Generated by ariadne-codegen
# Source: python/atoti-client/graphql/schema.gql

from typing import List, Optional

from pydantic import Field

from .._constant import Constant
from .base_model import BaseModel
from .enums import (
    AggregateProviderFilterMembershipConditionOperator,
    AggregateProviderFilterRelationalConditionOperator,
    AggregateProviderPluginKey,
    CubeRestrictionMembershipConditionOperator,
    CubeRestrictionRelationalConditionOperator,
    DatabaseRestrictionMembershipConditionOperator,
    DatabaseRestrictionRelationalConditionOperator,
    DataType,
    FileSystemFileType,
    HierarchiesCreationMode,
    MeasuresCreationMode,
    QuantileInterpolation,
    QuantileMode,
    RelationshipOptionality,
)


class AddExternalTableInput(BaseModel):
    catalog_name: Optional[str] = Field(serialization_alias="catalogName", default=None)
    data_model_transaction_id: Optional[str] = Field(
        serialization_alias="dataModelTransactionId", default=None
    )
    local_name: Optional[str] = Field(serialization_alias="localName", default=None)
    primary_index: Optional[List[str]] = Field(
        serialization_alias="primaryIndex", default=None
    )
    schema_name: Optional[str] = Field(serialization_alias="schemaName", default=None)
    table_name: str = Field(serialization_alias="tableName")


class AggregateProviderFilterLeafConditionInput(BaseModel):
    membership: Optional["AggregateProviderFilterMembershipConditionInput"] = None
    relational: Optional["AggregateProviderFilterRelationalConditionInput"] = None


class AggregateProviderFilterMembershipConditionInput(BaseModel):
    elements: List[Constant]
    operator: AggregateProviderFilterMembershipConditionOperator
    subject: "LevelIdentifier"


class AggregateProviderFilterRelationalConditionInput(BaseModel):
    operator: AggregateProviderFilterRelationalConditionOperator
    subject: "LevelIdentifier"
    target: Constant


class AggregationMeasureDefinition(BaseModel):
    mean: Optional["MeanAggregationMeasureDefinition"] = None
    sum: Optional["SumAggregationMeasureDefinition"] = None
    max: Optional["MaxAggregationMeasureDefinition"] = None
    quantile: Optional["QuantileAggregationMeasureDefinition"] = None
    min: Optional["MinAggregationMeasureDefinition"] = None


class ColumnIdentifierInput(BaseModel):
    column_name: str = Field(serialization_alias="columnName")
    table_name: str = Field(serialization_alias="tableName")


class ConnectToExternalDatabaseInput(BaseModel):
    data_source_name: Optional[str] = Field(
        serialization_alias="dataSourceName", default=None
    )


class ConstantMeasureDefinition(BaseModel):
    value: Constant


class CreateAggregateProviderInput(BaseModel):
    cube_name: str = Field(serialization_alias="cubeName")
    data_model_transaction_id: Optional[str] = Field(
        serialization_alias="dataModelTransactionId", default=None
    )
    filter: Optional[List[List["AggregateProviderFilterLeafConditionInput"]]] = None
    level_identifiers: Optional[List["LevelIdentifier"]] = Field(
        serialization_alias="levelIdentifiers", default=None
    )
    measure_names: Optional[List[str]] = Field(
        serialization_alias="measureNames", default=None
    )
    name: str
    partitioning: Optional[str] = None
    plugin_key: AggregateProviderPluginKey = Field(serialization_alias="pluginKey")


class CreateCubeInput(BaseModel):
    application_name: Optional[str] = Field(
        serialization_alias="applicationName", default=None
    )
    catalog_names: List[str] = Field(serialization_alias="catalogNames")
    cube_name: Optional[str] = Field(serialization_alias="cubeName", default=None)
    data_model_transaction_id: Optional[str] = Field(
        serialization_alias="dataModelTransactionId", default=None
    )
    fact_table_name: str = Field(serialization_alias="factTableName")
    hierarchies: HierarchiesCreationMode = HierarchiesCreationMode.MANUAL
    id_in_cluster: Optional[str] = Field(
        serialization_alias="idInCluster", default=None
    )
    measures: MeasuresCreationMode = MeasuresCreationMode.MANUAL
    priority: Optional[int] = None


class CreateCubeRestrictionInput(BaseModel):
    condition: List[List["CubeRestrictionLeafConditionInput"]]
    cube_name: str = Field(serialization_alias="cubeName")
    data_model_transaction_id: Optional[str] = Field(
        serialization_alias="dataModelTransactionId", default=None
    )
    role: str


class CreateDatabaseRestrictionInput(BaseModel):
    condition: List[List["DatabaseRestrictionLeafConditionInput"]]
    data_model_transaction_id: Optional[str] = Field(
        serialization_alias="dataModelTransactionId", default=None
    )
    role: str


class CreateHierarchyInput(BaseModel):
    cube_name: str = Field(serialization_alias="cubeName")
    data_model_transaction_id: Optional[str] = Field(
        serialization_alias="dataModelTransactionId", default=None
    )
    definition: "HierarchyDefinition"
    hierarchy_identifier: "HierarchyIdentifier" = Field(
        serialization_alias="hierarchyIdentifier"
    )


class CreateInMemoryTableColumnInput(BaseModel):
    column_name: str = Field(serialization_alias="columnName")
    data_type: Optional[DataType] = Field(serialization_alias="dataType", default=None)
    default_value: Optional[Constant] = Field(
        serialization_alias="defaultValue", default=None
    )


class CreateInMemoryTableInput(BaseModel):
    columns: List["CreateInMemoryTableColumnInput"] = Field(default_factory=lambda: [])
    data_load: Optional["DataLoadInput"] = Field(
        serialization_alias="dataLoad", default=None
    )
    data_model_transaction_id: Optional[str] = Field(
        serialization_alias="dataModelTransactionId", default=None
    )
    is_parameter_table: bool = Field(
        serialization_alias="isParameterTable", default=False
    )
    partitioning: Optional[str] = None
    primary_index: List[str] = Field(
        serialization_alias="primaryIndex", default_factory=lambda: []
    )
    table_name: str = Field(serialization_alias="tableName")


class CreateJoinInput(BaseModel):
    data_model_transaction_id: Optional[str] = Field(
        serialization_alias="dataModelTransactionId", default=None
    )
    join_name: str = Field(serialization_alias="joinName")
    mapping_items: Optional[List["JoinMappingItemInput"]] = Field(
        serialization_alias="mappingItems", default=None
    )
    source_table_name: str = Field(serialization_alias="sourceTableName")
    target_optionality: RelationshipOptionality = Field(
        serialization_alias="targetOptionality",
        default=RelationshipOptionality.OPTIONAL,
    )
    target_table_name: str = Field(serialization_alias="targetTableName")


class CreateMeasureInput(BaseModel):
    cube_name: str = Field(serialization_alias="cubeName")
    data_model_transaction_id: Optional[str] = Field(
        serialization_alias="dataModelTransactionId", default=None
    )
    definition: "MeasureDefinition"
    measure_name: str = Field(serialization_alias="measureName")


class CreateMemberPropertyInput(BaseModel):
    column_identifier: "ColumnIdentifierInput" = Field(
        serialization_alias="columnIdentifier"
    )
    cube_name: str = Field(serialization_alias="cubeName")
    data_model_transaction_id: Optional[str] = Field(
        serialization_alias="dataModelTransactionId", default=None
    )
    level_identifier: "LevelIdentifier" = Field(serialization_alias="levelIdentifier")
    property_name: str = Field(serialization_alias="propertyName")


class CubeRestrictionLeafConditionInput(BaseModel):
    membership: Optional["CubeRestrictionMembershipConditionInput"] = None
    relational: Optional["CubeRestrictionRelationalConditionInput"] = None


class CubeRestrictionMembershipConditionInput(BaseModel):
    elements: List[Constant]
    operator: CubeRestrictionMembershipConditionOperator
    subject: "LevelIdentifier"


class CubeRestrictionRelationalConditionInput(BaseModel):
    operator: CubeRestrictionRelationalConditionOperator
    subject: "LevelIdentifier"
    target: Constant


class DataLoadInput(BaseModel):
    data_source: Optional["NamedDataSourceLoadInput"] = Field(
        serialization_alias="dataSource", default=None
    )


class DataSourceLoadInput(BaseModel):
    file_system: Optional["FileSystemDataSourceLoadInput"] = Field(
        serialization_alias="fileSystem", default=None
    )
    jdbc: Optional["JdbcDataSourceLoadInput"] = None


class DatabaseRestrictionLeafConditionInput(BaseModel):
    membership: Optional["DatabaseRestrictionMembershipConditionInput"] = None
    relational: Optional["DatabaseRestrictionRelationalConditionInput"] = None


class DatabaseRestrictionMembershipConditionInput(BaseModel):
    elements: List[Constant]
    operator: DatabaseRestrictionMembershipConditionOperator
    subject: "ColumnIdentifierInput"


class DatabaseRestrictionRelationalConditionInput(BaseModel):
    operator: DatabaseRestrictionRelationalConditionOperator
    subject: "ColumnIdentifierInput"
    target: Constant


class DeleteAggregateProviderInput(BaseModel):
    cube_name: str = Field(serialization_alias="cubeName")
    data_model_transaction_id: Optional[str] = Field(
        serialization_alias="dataModelTransactionId", default=None
    )
    name: str


class DeleteCubeRestrictionInput(BaseModel):
    cube_name: str = Field(serialization_alias="cubeName")
    data_model_transaction_id: Optional[str] = Field(
        serialization_alias="dataModelTransactionId", default=None
    )
    role: str


class DeleteDatabaseRestrictionInput(BaseModel):
    data_model_transaction_id: Optional[str] = Field(
        serialization_alias="dataModelTransactionId", default=None
    )
    role: str


class DeleteHierarchyInput(BaseModel):
    cube_name: str = Field(serialization_alias="cubeName")
    data_model_transaction_id: Optional[str] = Field(
        serialization_alias="dataModelTransactionId", default=None
    )
    hierarchy_identifier: "HierarchyIdentifier" = Field(
        serialization_alias="hierarchyIdentifier"
    )


class DeleteJoinInput(BaseModel):
    data_model_transaction_id: Optional[str] = Field(
        serialization_alias="dataModelTransactionId", default=None
    )
    join_name: str = Field(serialization_alias="joinName")
    source_table_name: str = Field(serialization_alias="sourceTableName")


class DeleteMeasureInput(BaseModel):
    cube_name: str = Field(serialization_alias="cubeName")
    data_model_transaction_id: Optional[str] = Field(
        serialization_alias="dataModelTransactionId", default=None
    )
    measure_name: str = Field(serialization_alias="measureName")


class DeleteMemberPropertyInput(BaseModel):
    cube_name: str = Field(serialization_alias="cubeName")
    data_model_transaction_id: Optional[str] = Field(
        serialization_alias="dataModelTransactionId", default=None
    )
    level_identifier: "LevelIdentifier" = Field(serialization_alias="levelIdentifier")
    property_name: str = Field(serialization_alias="propertyName")


class DeleteTableInput(BaseModel):
    data_model_transaction_id: Optional[str] = Field(
        serialization_alias="dataModelTransactionId", default=None
    )
    table_name: str = Field(serialization_alias="tableName")


class FileSystemDataSourceLoadInput(BaseModel):
    glob: str
    type: FileSystemFileType


class HierarchyDefinition(BaseModel):
    selection: Optional["SelectionHierarchyDefinition"] = None


class HierarchyIdentifier(BaseModel):
    dimension_name: str = Field(serialization_alias="dimensionName")
    hierarchy_name: str = Field(serialization_alias="hierarchyName")


class JdbcDataSourceLoadInput(BaseModel):
    parameters: List["ParameterInput"] = Field(default_factory=lambda: [])
    query: str


class JoinMappingItemInput(BaseModel):
    source_column_name: str = Field(serialization_alias="sourceColumnName")
    target_column_name: str = Field(serialization_alias="targetColumnName")


class LevelIdentifier(BaseModel):
    dimension_name: str = Field(serialization_alias="dimensionName")
    hierarchy_name: str = Field(serialization_alias="hierarchyName")
    level_name: str = Field(serialization_alias="levelName")


class LoadInMemoryTableSourcesInput(BaseModel):
    data_transaction_id: Optional[str] = Field(
        serialization_alias="dataTransactionId", default=None
    )


class MaxAggregationMeasureDefinition(BaseModel):
    value: "MeasureDefinition"


class MeanAggregationMeasureDefinition(BaseModel):
    value: "MeasureDefinition"


class MeasureDefinition(BaseModel):
    aggregation: Optional["ScopedAggregationMeasureDefinition"] = None
    constant: Optional["ConstantMeasureDefinition"] = None
    selection_field: Optional["SelectionFieldMeasureDefinition"] = Field(
        serialization_alias="selectionField", default=None
    )
    multiplication: Optional["MultiplicationMeasureDefinition"] = None


class MinAggregationMeasureDefinition(BaseModel):
    value: "MeasureDefinition"


class MultiplicationMeasureDefinition(BaseModel):
    factors: List["MeasureDefinition"]


class NamedDataSourceLoadInput(BaseModel):
    data_source_load: "DataSourceLoadInput" = Field(
        serialization_alias="dataSourceLoad"
    )
    data_source_name: str = Field(serialization_alias="dataSourceName")


class ParameterInput(BaseModel):
    name: Optional[str] = None
    value: Constant


class QuantileAggregationMeasureDefinition(BaseModel):
    interpolation: QuantileInterpolation
    mode: QuantileMode
    quantile: "MeasureDefinition"
    value: "MeasureDefinition"


class ScopedAggregationMeasureDefinition(BaseModel):
    definition: "AggregationMeasureDefinition"


class SelectionFieldIdentifier(BaseModel):
    column_name: str = Field(serialization_alias="columnName")
    join_names: List[str] = Field(serialization_alias="joinNames")


class SelectionFieldMeasureDefinition(BaseModel):
    selection_field_identifier: "SelectionFieldIdentifier" = Field(
        serialization_alias="selectionFieldIdentifier"
    )


class SelectionHierarchyDefinition(BaseModel):
    levels: List["SelectionHierarchyLevelDefinition"]


class SelectionHierarchyLevelDefinition(BaseModel):
    level_name: str = Field(serialization_alias="levelName")
    selection_field_identifier: "SelectionFieldIdentifier" = Field(
        serialization_alias="selectionFieldIdentifier"
    )


class SumAggregationMeasureDefinition(BaseModel):
    value: "MeasureDefinition"


class UnloadMembersFromDataCubeInput(BaseModel):
    branch_name: str = Field(serialization_alias="branchName")
    data_cube_id: str = Field(serialization_alias="dataCubeId")
    level_identifier: "LevelIdentifier" = Field(serialization_alias="levelIdentifier")
    members: List[Constant]
    query_cube_name: str = Field(serialization_alias="queryCubeName")


class UpdateAggregateCacheInput(BaseModel):
    capacity: Optional[int] = None
    measure_names: Optional[List[str]] = Field(
        serialization_alias="measureNames", default=None
    )


class UpdateColumnInput(BaseModel):
    column_identifier: "ColumnIdentifierInput" = Field(
        serialization_alias="columnIdentifier"
    )
    data_model_transaction_id: Optional[str] = Field(
        serialization_alias="dataModelTransactionId", default=None
    )
    default_value: Optional[Constant] = Field(
        serialization_alias="defaultValue", default=None
    )


class UpdateCubeInput(BaseModel):
    aggregate_cache: Optional["UpdateAggregateCacheInput"] = Field(
        serialization_alias="aggregateCache", default=None
    )
    cube_name: str = Field(serialization_alias="cubeName")
    data_model_transaction_id: Optional[str] = Field(
        serialization_alias="dataModelTransactionId", default=None
    )
    updateable_cells: Optional["UpdateUpdateableCellsInput"] = Field(
        serialization_alias="updateableCells", default=None
    )


class UpdateDataModelInput(BaseModel):
    database: Optional["UpdateDatabaseInput"] = None
    data_model_transaction_id: Optional[str] = Field(
        serialization_alias="dataModelTransactionId", default=None
    )


class UpdateDatabaseInput(BaseModel):
    owners: Optional[List[str]] = None
    readers: Optional[List[str]] = None


class UpdateHierarchyInput(BaseModel):
    are_members_indexed_by_name: Optional[bool] = Field(
        serialization_alias="areMembersIndexedByName", default=None
    )
    cube_name: str = Field(serialization_alias="cubeName")
    data_model_transaction_id: Optional[str] = Field(
        serialization_alias="dataModelTransactionId", default=None
    )
    folder: Optional[str] = None
    hierarchy_identifier: "HierarchyIdentifier" = Field(
        serialization_alias="hierarchyIdentifier"
    )
    viewers: Optional[List[str]] = None


class UpdateProxyInput(BaseModel):
    url: Optional[str] = None


class UpdateUpdateableCellsInput(BaseModel):
    hierarchy_identifiers: Optional[List["HierarchyIdentifier"]] = Field(
        serialization_alias="hierarchyIdentifiers", default=None
    )
    level_identifiers: Optional[List["LevelIdentifier"]] = Field(
        serialization_alias="levelIdentifiers", default=None
    )
    roles: Optional[List[str]] = None


AggregateProviderFilterLeafConditionInput.model_rebuild()
AggregateProviderFilterMembershipConditionInput.model_rebuild()
AggregateProviderFilterRelationalConditionInput.model_rebuild()
AggregationMeasureDefinition.model_rebuild()
CreateAggregateProviderInput.model_rebuild()
CreateCubeRestrictionInput.model_rebuild()
CreateDatabaseRestrictionInput.model_rebuild()
CreateHierarchyInput.model_rebuild()
CreateInMemoryTableInput.model_rebuild()
CreateJoinInput.model_rebuild()
CreateMeasureInput.model_rebuild()
CreateMemberPropertyInput.model_rebuild()
CubeRestrictionLeafConditionInput.model_rebuild()
CubeRestrictionMembershipConditionInput.model_rebuild()
CubeRestrictionRelationalConditionInput.model_rebuild()
DataLoadInput.model_rebuild()
DataSourceLoadInput.model_rebuild()
DatabaseRestrictionLeafConditionInput.model_rebuild()
DatabaseRestrictionMembershipConditionInput.model_rebuild()
DatabaseRestrictionRelationalConditionInput.model_rebuild()
DeleteHierarchyInput.model_rebuild()
DeleteMemberPropertyInput.model_rebuild()
HierarchyDefinition.model_rebuild()
JdbcDataSourceLoadInput.model_rebuild()
MaxAggregationMeasureDefinition.model_rebuild()
MeanAggregationMeasureDefinition.model_rebuild()
MeasureDefinition.model_rebuild()
MinAggregationMeasureDefinition.model_rebuild()
MultiplicationMeasureDefinition.model_rebuild()
NamedDataSourceLoadInput.model_rebuild()
QuantileAggregationMeasureDefinition.model_rebuild()
ScopedAggregationMeasureDefinition.model_rebuild()
SelectionFieldMeasureDefinition.model_rebuild()
SelectionHierarchyDefinition.model_rebuild()
SelectionHierarchyLevelDefinition.model_rebuild()
SumAggregationMeasureDefinition.model_rebuild()
UnloadMembersFromDataCubeInput.model_rebuild()
UpdateColumnInput.model_rebuild()
UpdateCubeInput.model_rebuild()
UpdateDataModelInput.model_rebuild()
UpdateHierarchyInput.model_rebuild()
UpdateUpdateableCellsInput.model_rebuild()
