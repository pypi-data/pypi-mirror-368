# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: price_index.proto
# Protobuf Python Version: 6.30.2
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    30,
    2,
    '',
    'price_index.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import marketdata_pb2 as marketdata__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x11price_index.proto\x12\x13marketdata_messages\x1a\x10marketdata.proto\"4\n\x08\x43urrency\x12\n\n\x02Id\x18\x01 \x01(\t\x12\x0c\n\x04Name\x18\x02 \x01(\t\x12\x0e\n\x06Symbol\x18\x03 \x01(\t\"\x93\x01\n\x06Market\x12\n\n\x02Id\x18\x01 \x01(\t\x12\x0f\n\x07Network\x18\x02 \x01(\t\x12\x12\n\nNetworkBid\x18\x03 \x01(\t\x12\x0c\n\x04Name\x18\x04 \x01(\t\x12\x0f\n\x07\x41\x64\x64ress\x18\x05 \x01(\t\x12\x10\n\x08Protocol\x18\x06 \x01(\t\x12\x16\n\x0eProtocolFamily\x18\x07 \x01(\t\x12\x0f\n\x07Program\x18\x08 \x01(\t\"P\n\x07\x41mounts\x12\x0c\n\x04\x42\x61se\x18\x01 \x01(\x02\x12\r\n\x05Quote\x18\x02 \x01(\x02\x12\x0b\n\x03Usd\x18\x03 \x01(\x02\x12\x1b\n\x13\x42\x61seAttributedToUsd\x18\x04 \x01(\x02\"l\n\x05Quote\x12\x34\n\rQuoteCurrency\x18\x01 \x01(\x0b\x32\x1d.marketdata_messages.Currency\x12-\n\x07\x41mounts\x18\x02 \x01(\x0b\x32\x1c.marketdata_messages.Amounts\"<\n\x0cTimeInterval\x12\x10\n\x08\x44uration\x18\x01 \x01(\r\x12\r\n\x05Start\x18\x02 \x01(\r\x12\x0b\n\x03\x45nd\x18\x03 \x01(\r\"N\n\x04Ohlc\x12\x0c\n\x04Open\x18\x01 \x01(\x02\x12\r\n\x05\x43lose\x18\x02 \x01(\x02\x12\x0c\n\x04High\x18\x03 \x01(\x02\x12\x0b\n\x03Low\x18\x04 \x01(\x02\x12\x0e\n\x06Volume\x18\x05 \x01(\x02\"\x9d\x02\n\x13PriceByTimeInterval\x12\x37\n\x0cTimeInterval\x18\x01 \x01(\x0b\x32!.marketdata_messages.TimeInterval\x12-\n\x07\x41mounts\x18\x02 \x01(\x0b\x32\x1c.marketdata_messages.Amounts\x12\x11\n\tMeanPrice\x18\x03 \x01(\x02\x12\x1b\n\x13SimpleMovingAverage\x18\x04 \x01(\x02\x12#\n\x1bWeightedSimpleMovingAverage\x18\x05 \x01(\x02\x12 \n\x18\x45xponentialMovingAverage\x18\x06 \x01(\x02\x12\'\n\x04Ohlc\x18\x07 \x01(\x0b\x32\x19.marketdata_messages.Ohlc\"\xa0\x01\n\rPriceByVolume\x12\x14\n\x0cTargetVolume\x18\x01 \x01(\x02\x12\x37\n\x0cTimeInterval\x18\x02 \x01(\x0b\x32!.marketdata_messages.TimeInterval\x12-\n\x07\x41mounts\x18\x03 \x01(\x0b\x32\x1c.marketdata_messages.Amounts\x12\x11\n\tMeanPrice\x18\x04 \x01(\x02\"(\n\x0f\x45stimatedPrices\x12\x15\n\rAdaptivePrice\x18\x01 \x01(\x02\"\xf6\x01\n\x0bPriceUpdate\x12*\n\x06Quotes\x18\x01 \x03(\x0b\x32\x1a.marketdata_messages.Quote\x12\x46\n\x14PriceByTimeIntervals\x18\x02 \x03(\x0b\x32(.marketdata_messages.PriceByTimeInterval\x12:\n\x0ePriceByVolumes\x18\x03 \x03(\x0b\x32\".marketdata_messages.PriceByVolume\x12\x37\n\tEstimates\x18\x04 \x01(\x0b\x32$.marketdata_messages.EstimatedPrices\"x\n\x0e\x43urrencyUpdate\x12/\n\x08\x43urrency\x18\x01 \x01(\x0b\x32\x1d.marketdata_messages.Currency\x12\x35\n\x0bPriceUpdate\x18\x02 \x01(\x0b\x32 .marketdata_messages.PriceUpdate\"\xa0\x01\n\x0bTokenUpdate\x12/\n\x08\x43urrency\x18\x01 \x01(\x0b\x32\x1d.marketdata_messages.Currency\x12)\n\x05Token\x18\x02 \x01(\x0b\x32\x1a.marketdata_messages.Token\x12\x35\n\x0bPriceUpdate\x18\x03 \x01(\x0b\x32 .marketdata_messages.PriceUpdate\"\xf6\x02\n\nPairUpdate\x12/\n\x08\x43urrency\x18\x01 \x01(\x0b\x32\x1d.marketdata_messages.Currency\x12\x34\n\rQuoteCurrency\x18\x02 \x01(\x0b\x32\x1d.marketdata_messages.Currency\x12)\n\x05Token\x18\x03 \x01(\x0b\x32\x1a.marketdata_messages.Token\x12.\n\nQuoteToken\x18\x04 \x01(\x0b\x32\x1a.marketdata_messages.Token\x12+\n\x06Market\x18\x05 \x01(\x0b\x32\x1b.marketdata_messages.Market\x12\x35\n\x0bPriceUpdate\x18\x06 \x01(\x0b\x32 .marketdata_messages.PriceUpdate\x12\x42\n\x18PriceUpdateInQuoteTokens\x18\x07 \x01(\x0b\x32 .marketdata_messages.PriceUpdate\"\xcd\x01\n\x11PriceIndexMessage\x12\x0c\n\x04Time\x18\x01 \x01(\x04\x12<\n\x0f\x43urrencyUpdates\x18\x02 \x03(\x0b\x32#.marketdata_messages.CurrencyUpdate\x12\x36\n\x0cTokenUpdates\x18\x03 \x03(\x0b\x32 .marketdata_messages.TokenUpdate\x12\x34\n\x0bPairUpdates\x18\x04 \x03(\x0b\x32\x1f.marketdata_messages.PairUpdateb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'price_index_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_CURRENCY']._serialized_start=60
  _globals['_CURRENCY']._serialized_end=112
  _globals['_MARKET']._serialized_start=115
  _globals['_MARKET']._serialized_end=262
  _globals['_AMOUNTS']._serialized_start=264
  _globals['_AMOUNTS']._serialized_end=344
  _globals['_QUOTE']._serialized_start=346
  _globals['_QUOTE']._serialized_end=454
  _globals['_TIMEINTERVAL']._serialized_start=456
  _globals['_TIMEINTERVAL']._serialized_end=516
  _globals['_OHLC']._serialized_start=518
  _globals['_OHLC']._serialized_end=596
  _globals['_PRICEBYTIMEINTERVAL']._serialized_start=599
  _globals['_PRICEBYTIMEINTERVAL']._serialized_end=884
  _globals['_PRICEBYVOLUME']._serialized_start=887
  _globals['_PRICEBYVOLUME']._serialized_end=1047
  _globals['_ESTIMATEDPRICES']._serialized_start=1049
  _globals['_ESTIMATEDPRICES']._serialized_end=1089
  _globals['_PRICEUPDATE']._serialized_start=1092
  _globals['_PRICEUPDATE']._serialized_end=1338
  _globals['_CURRENCYUPDATE']._serialized_start=1340
  _globals['_CURRENCYUPDATE']._serialized_end=1460
  _globals['_TOKENUPDATE']._serialized_start=1463
  _globals['_TOKENUPDATE']._serialized_end=1623
  _globals['_PAIRUPDATE']._serialized_start=1626
  _globals['_PAIRUPDATE']._serialized_end=2000
  _globals['_PRICEINDEXMESSAGE']._serialized_start=2003
  _globals['_PRICEINDEXMESSAGE']._serialized_end=2208
# @@protoc_insertion_point(module_scope)
