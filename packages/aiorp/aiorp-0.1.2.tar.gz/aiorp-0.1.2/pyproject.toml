[project]
name = "aiorp"
version = "0.1.2"
description = "A simple reverse proxy library based on aiohttp."
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "aiohttp>=3.11.12",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
  "aioresponses>=0.7.8",
  "mike>=2.1.3",
  "mkdocs>=1.6.1",
  "mkdocs-material>=9.6.12",
  "mkdocstrings-python>=1.16.10",
  "pre-commit>=4.1.0",
  "pytest>=8.3.5",
  "pytest-aiohttp>=1.1.0",
  "pytest-cov>=6.1.1",
  "pytest-xdist>=3.6.1",
]

[tool.uv]
trusted-publishing = "always"

[tool.isort]
# config compatible with Black
line_length = 88
multi_line_output = 3
default_section = "THIRDPARTY"
honor_noqa = true
include_trailing_comma = true
known_third_party = ["aiohttp", "aioresponses", "jwt", "multidict", "pytest", "src", "yarl"]
atomic = true

[tool.pylint.master]
jobs = 0

[tool.pylint.message_control]
max-line-length = 99
disable = [
  "import-error",
  "missing-module-docstring",
  "missing-function-docstring",
  "unsupported-binary-operation",
  "raise-missing-from",
  "invalid-name",
  "too-many-arguments",
  "unused-argument",
  "logging-fstring-interpolation",
  "too-few-public-methods",
  "protected-access",
  "redefined-outer-name",
]

[tool.pylint.SIMILARITIES]
ignore-imports = 'yes'
ignore-docstrings = 'yes'
ignore-comments = 'yes'

[tool.pylint.reports]
output-format = "colorized"

[tool.pylint.format]
logging-modules = ["logging", "structlog"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
python_files = ["test_*.py"]
testpaths = ["tests/unit", "tests/integration"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
filterwarnings = [
  # When handler is the as class with __call__ method it results in a false-positive warning
  "ignore:Bare functions are deprecated, use async ones:DeprecationWarning",
]
markers = [
  "current: mark test as current",
  "context: mark test as context related",
  "integration: mark test as integration related",
  "request: mark test as request related",
  "response: mark test as response related",
  "unit: mark test as unit test",
  "rewrite: mark test as rewrite related",
  "http_handler: mark test as http handler related",
  "websocket_handler: mark test as websocket handler related",
]

[tool.pyright]
venvPath = "./"
venv = ".venv"
