from .exception import *
from .lib_logger import *
import psutil
from .lib_shell_raw import local_shell as local_shell
from _typeshed import Incomplete

logger: Incomplete

class CProcess:
    @property
    def name(self): ...
    @property
    def command(self): ...
    @property
    def pid(self): ...
    @property
    def username(self): ...
    @property
    def is_running(self): ...
    def kill(self) -> None: ...
    def __init__(self, proc: psutil.Process) -> None: ...
    @staticmethod
    def collect(cmd: str, name: str = None, user: str = None): ...

class CProcess:
    class KEY:
        NAME: str
        PID: str
        STATUS: str
        USER: str
    @property
    def name(self): ...
    @property
    def command(self): ...
    @property
    def pid(self): ...
    @property
    def username(self): ...
    @property
    def is_running(self): ...
    def kill(self): ...
    def __init__(self, imgname: str, pid: str, status: str, user: str) -> None: ...
    @staticmethod
    def collect(cmd: str, name: str = None, user: str = None): ...
