from .lib_logger import *
from _typeshed import Incomplete

logger: Incomplete

class MG_LINE:
    @staticmethod
    def slope_constant(p1: tuple, p2: tuple): ...
    @staticmethod
    def intersection_point(line1: tuple, line2: tuple): ...

class MG_RECT:
    class MERGE_COND:
        EQ_LEFT: str
        EQ_RIGHT: str
    @staticmethod
    def check_validation(target: str, rect: list): ...
    @staticmethod
    def distinguish_intersected(src_rect: list, rect2: list): ...
    @staticmethod
    def calc_intersection(rect1: list, rect2: list): ...
    @staticmethod
    def is_intersection(rec1: list, rec2: list): ...
    @staticmethod
    def is_inner_point(rect: list, point: tuple): ...
    @staticmethod
    def is_include(parent: list, child: list): ...
    @staticmethod
    def max_area(rect_list: list): ...
    @staticmethod
    def merge_area(src: list, dest: list, cond: list[MERGE_COND] = ...): ...
