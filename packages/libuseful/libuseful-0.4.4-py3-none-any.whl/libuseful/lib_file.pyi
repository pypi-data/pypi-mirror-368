from .lib_logger import *
from .exception import CENullException as CENullException
from _typeshed import Incomplete

logger: Incomplete
LINE_ENDING_WINDOW: bytes
LINE_ENDING_LINUX: bytes
CODEC: str

def append_text(text: str, contents: str) -> str: ...
def create_text_file(file_path: str, contents: str) -> None: ...
def create_json_file(file_path: str, data: dict) -> None: ...
def delete_file(file_path: str) -> None: ...
def read_text_file(file_path: str, encoder: str = ...) -> list[str]: ...
def read_json_file(file_path: str, with_annotation: bool = False) -> dict: ...
def read_json(contents: str, with_annotation: bool = False, replace_str_indicator: bool = False) -> dict: ...
def write_string(contents: dict) -> str: ...
def copy_json_file(src_path: str, dest_path: str, with_annotation: bool = False) -> None: ...
