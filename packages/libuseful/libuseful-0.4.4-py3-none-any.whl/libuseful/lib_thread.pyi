import threading
from queue import Queue

__all__ = ['CThread']

class CThread(threading.Thread):
    @property
    def is_continue(self): ...
    @is_continue.setter
    def is_continue(self, value: bool): ...
    def append_queue(self, qname: str): ...
    def get_queue_list(self) -> list: ...
    def get_queue(self, qname: str) -> Queue: ...
    def append_event(self, ename: str): ...
    def get_event_list(self) -> list: ...
    def get_event(self, ename: str) -> threading.Event: ...
    def run(self) -> None: ...
    def __init__(self, name: str, func, daemon: bool = False, args: tuple = (), kwargs: dict = {}) -> None: ...
    def __del__(self) -> None: ...
