from .exception import *
from .lib_ps import CProcess as CProcess
from .lib_retry import retry as retry
from .lib_singleton import Singleton as Singleton
from _typeshed import Incomplete
from ppadb.device import Device as ADBdev

class ADB_Sync(Singleton):
    class STATE_SERVER:
        RUNNING: str
        SHOTDOWN: str
        GET_STATE: str
    class STATE_DEV:
        ON: Incomplete
        OFF: Incomplete
        NONE: Incomplete
    class FORMAT_DEV:
        INSTANCE: str
        SERIAL: str
    ADBD_IP: str
    ADBD_PORT: int
    def is_dev_online(self, dev_name: str): ...
    def activate_root(self, device: ADBdev, user: str): ...
    def get_device(self, dev_name: str, state: STATE_DEV = ...): ...
    def get_devices(self, state: STATE_DEV = ..., out_format: FORMAT_DEV = ...): ...
    def remote_connect(self, ip: str, port: int): ...
    def remote_disconnect(self, device: ADBdev): ...
    def start_server(self) -> None: ...
    def kill_server(self) -> None: ...
    def __init__(self) -> None: ...
    def __del__(self) -> None: ...
