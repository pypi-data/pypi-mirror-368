class LOG_EXCLUDES:


    # List of message prefixes to exclude.
    _excludes = [
        #'ðŸ˜ƒðŸŒ€ ', # Bespoke events.
        #' AWS_TESTS.',
        #' AWS_TESTS.SetDomain',
        #' BROKER.',
        #' BUS.',
        #' CHARGE.',
        #' CHAT',
        #' COLLECTOR.',
        #' CONFIG.',
        #' CONSUMER.',
        #' CRUD.',
        #' CRUD.WALLET.',
        #' DEPLOYER.PARSER.',
        #' DIRECTORY.',
        #' DIRECTORY.EnsureExists',
        #' DIRECTORY.GetFile',
        #' DIRECTORY.GetSubDirIconned',
        #' DYNAMO.',
        #' DOMAIN',
        #' FILE.',
        #' FILE.Delete',
        #' FILE.ReadText',
        #' FILESYSTEM.',
        #' FILESYSTEM_OBJECT.',
        #' GRAPH.',
        #' HANDLER',
        #' HOST.',
        #' INTERNET.',
        #' LAMBDA.',
        #' LAMBDA_MOCK.',
        #' LOG_BUFFER',
        #' MANIFEST.',
        #' MANIFESTER.',
        #' MESSENGER.',
        #' MESSENGER.Push',
        #' MSG',
        #' NOTIFIER.',        
        #' PARALLEL.',
        #' PARALLEL_THREAD',
        #' PARALLEL_THREAD_POOL', 
        #' PARALLEL_THREAD_WRAPPER',
        #' PARALLEL.LOG.BUFFER',
        #' PAYER.',
        #' PROMPT',
        #' PYTHON_EDITOR.FixLine',
        #' PYTHON_METHOD',
        #' PUBLISHER.',
        #' QR.',
        #' QUERY.',
        #' SELLER.',
        #' SSM.',
        #' STRUCT.',
        #' SUBSCRIBER.',
        #' SYNCAPI.',
        #' TALK.EXEC.',
        #' TALK.INDEX.',
        #' TALK.',
        #' TALKER.',
        #' UNIT_TESTS.',
        #' UTILS.',
        #' UTILS_LISTS.',
        #' UTILS.OS.',
        #' UTILS_OBJECTS.IsNoneOrEmpty',
        #' UTILS_OBJECTS',
        #' UTILS_YAML.',
        #' VAULT.',
        #' WALLET',
        #' WEB.',
        #' WEB_MOCK.'
    ]


    # List of message prefixes to exclude from Lambda.
    _excludesLambda = [
        #'ðŸ˜ƒðŸŒ€ ', # Bespoke events.
        #' BROKER.',
        #' BUS.',
        #' CHARGE.',
        #' CHAT',
        #' COLLECTOR.',
        #' CONSUMER.',
        #' CRUD.',
        #' CRUD.WALLET.',
        #' DYNAMO.',
        #' DOMAIN',
        #' GRAPH.',
        #' HANDLER',
        #' HOST.',
        #' INTERNET.',
        #' LAMBDA',
        #' MANIFEST.',
        #' MANIFESTER.',
        #' MESSENGER.Push',
        #' MSG',
        #' NOTIFIER.',        
        #' PAYER.',
        #' PROMPT',
        #' PUBLISHER.',
        #' QR.',
        #' QUERY.',
        #' SELLER.',
        ' STRUCT.',
        #' SUBSCRIBER.',
        #' SYNCAPI.',
        #' TALK.EXEC.',
        #' TALK.INDEX.',
        #' TALK.',
        #' TALKER.',
        #' UNIT_TESTS.',
        #' UTILS.OS.',
        #' UTILS.OBJ.',
        #' VAULT.',
        #' WALLET',
        #' WEB.',
    ]



    @classmethod
    def IsExcluded(cls, msg:str):
        '''ðŸ‘‰ Returns True if the message is excluded.'''
        for exclude in cls._excludes:
            if msg == exclude.strip():
                return True
        return False