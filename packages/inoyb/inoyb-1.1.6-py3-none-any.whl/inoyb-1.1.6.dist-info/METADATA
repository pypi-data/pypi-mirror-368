Metadata-Version: 2.4
Name: inoyb
Version: 1.1.6
Summary: 极其友好的地理空间AI模型服务框架 - Docker化部署，支持Gradio界面
Home-page: https://github.com/ldichen/It-is-none-of-your-business
Author: DiChen
Author-email: DiChen <ldicccccc@gmail.com>
License: MIT
Project-URL: Homepage, https://github.com/ldichen/It-is-none-of-your-business
Project-URL: Repository, https://github.com/ldichen/It-is-none-of-your-business
Project-URL: Documentation, https://github.com/ldichen/It-is-none-of-your-business#readme
Project-URL: Bug Reports, https://github.com/ldichen/It-is-none-of-your-business/issues
Project-URL: Changelog, https://github.com/ldichen/It-is-none-of-your-business/releases
Keywords: gradio,model,service,framework,ml,ai,docker,geospatial,rasterio,gdal,openGMS
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: gradio>=4.0.0
Requires-Dist: rasterio>=1.3.0
Requires-Dist: matplotlib<4.0.0,>=3.5.0
Requires-Dist: Pillow>=8.0.0
Requires-Dist: docker>=7.0.0
Requires-Dist: pathlib2>=2.3.0; python_version < "3.8"
Provides-Extra: dev
Requires-Dist: pytest>=7.0.0; extra == "dev"
Requires-Dist: black>=22.0.0; extra == "dev"
Requires-Dist: flake8>=4.0.0; extra == "dev"
Requires-Dist: mypy>=0.950; extra == "dev"
Requires-Dist: twine>=4.0.0; extra == "dev"
Requires-Dist: build>=0.8.0; extra == "dev"
Provides-Extra: gpu
Requires-Dist: torch>=1.12.0; extra == "gpu"
Requires-Dist: torchvision>=0.13.0; extra == "gpu"
Requires-Dist: torchaudio>=0.12.0; extra == "gpu"
Dynamic: author
Dynamic: home-page
Dynamic: requires-python

# inoyb

**inoyb** - 基于mc.json配置的Gradio模型服务框架

## 简介

inoyb是一个轻量级的Python框架，用于快速构建基于Gradio的机器学习模型服务。通过简单的配置文件和装饰器，您可以轻松地将模型推理代码转换为Web服务。

## 特性

- 🚀 **一键部署**: 使用`@your_turn()`装饰器即可将模型函数转换为Web服务
- 📋 **配置驱动**: 通过mc.json配置文件定义输入输出界面
- 🔧 **智能执行**: 支持隔离工作空间和并发执行
- 📁 **文件管理**: 智能大文件检测和符号链接优化
- 🎨 **美观界面**: 基于Gradio构建的现代化Web界面
- 📊 **预览支持**: 自动生成地理数据预览图
- 🗂️ **文件夹浏览**: 支持文件夹输出的在线浏览

## 快速开始

### 安装

```bash
pip install inoyb
```

### 基本使用

1. 创建模型服务文件 `gogogo.py`:

```python
from inoyb import your_turn

@your_turn()
def model_handler(*inputs):
    return [
        "python", "model/inference.py",
        "--data_files", inputs[0], inputs[1], inputs[2],
        "--config_path", "model/config.json",
        "--checkpoint", "model/Prithvi_EO_V1_100M.pt"
    ]

if __name__ == "__main__":
    model_handler.run()
```

2. 创建配置文件 `mc.json`:

```json
{
  "model_info": {
    "name": "Prithvi地理空间基础模型",
    "description": "基于卫星图像的地理空间分析模型",
    "version": "1.0.0"
  },
  "inputs": {
    "hls_data": {
      "type": "geodata",
      "label": "HLS数据文件",
      "required": true,
      "file_types": [".tif", ".tiff"]
    },
    "mask_data": {
      "type": "geodata", 
      "label": "掩码数据文件",
      "required": true,
      "file_types": [".tif", ".tiff"]
    }
  },
  "outputs": {
    "prediction": {
      "type": "geodata",
      "label": "预测结果",
      "required": true,
      "file_types": [".tif"],
      "bands": [3, 2, 1]
    }
  }
}
```

3. 运行服务:

```bash
python gogogo.py
```

### 装饰器参数

- `mc_json`: 配置文件路径 (默认: "mc.json")
- `port`: 服务端口 (默认: 从环境变量读取)
- `example_path`: 示例数据路径 (默认: "examples")
- `output_dir`: 输出目录 (默认: "outputs")

### 项目结构

```
your-project/
├── gogogo.py          # 模型服务启动文件
├── mc.json           # 配置文件
├── model/            # 模型文件夹
│   ├── inference.py  # 模型推理脚本
│   ├── config.json   # 模型配置
│   └── weights.pt    # 模型权重
├── examples/         # 示例数据(可选)
└── outputs/          # 输出目录
```

## 配置说明

### mc.json结构

- `model_info`: 模型基本信息
- `inputs`: 输入字段定义
- `outputs`: 输出字段定义

### 支持的数据类型

- `geodata`: 地理空间数据(.tif, .tiff等)
- `file`: 普通文件
- `folder`: 文件夹
- `text`: 文本输入

## 高级特性

### 大文件优化

框架自动检测大文件(>200MB)并使用符号链接优化存储空间，避免不必要的文件复制。

### 并发支持

支持多用户并发访问，每个请求在独立的工作空间中执行，互不干扰。

### 预览生成

对于地理数据输出，自动生成预览图片，支持自定义波段组合。

## 开发

### 安装开发依赖

```bash
pip install -e ".[dev]"
```

### 运行测试

```bash
pytest
```

### 代码格式化

```bash
black inoyb/
```

## 许可证

MIT License

## 贡献

欢迎提交Issue和Pull Request！

## 作者

DiChen - dichen@example.com
