# generated by datamodel-codegen:
#   filename:  Event.json

from __future__ import annotations

from enum import Enum
from typing import Any, Optional

from pydantic import BaseModel, Extra, Field


class Metadata(BaseModel):
    class Config:
        extra = Extra.forbid

    name: str
    intent: str
    tags: Optional[list[str]] = None


class Compatibility(Enum):
    backward = 'backward'
    forward = 'forward'
    full = 'full'
    none = 'none'


class Contract(BaseModel):
    class Config:
        extra = Extra.forbid

    type: str
    retention: Optional[str] = None
    partitioning: Optional[dict[str, Any]] = None
    compatibility: Optional[Compatibility] = None
    producers: Optional[list[str]] = None


class Event(BaseModel):
    class Config:
        extra = Extra.forbid

    kind: str = Field('Event', const=True)
    schema_version: str
    metadata: Metadata
    contract: Contract
