import matplotlib.pyplot as plt
import numpy as np
from matplotlib.widgets import Slider
from matplotlib.widgets import CheckButtons

#S = np.array([1,2,5,5,7])
#S = np.array([-40, -5, 10, 13, 15, 19, 26, 28, 41, 58, 78, 85, 86, 89, 89, 91, 92, 101, 101, 1053])

S = np.array([21.956, 22.207, 20.624, 26.774, 26.437, 22.789, 23.475, 20.289, 21.272, 22.636, 20.04, 19.207, 19.002, 24.057, 23.772, 22.373, 19.723, 20.653, 20.697, 22.289, 24.361, 19.457, 20.984, 22.897, 20.201, 22.674, 26.185, 19.784, 22.369, 24.696, 22.737, 24.081, 19.585, 25.6, 26.737, 22.488, 21.312, 28.306, 19.704, 25.136, 24.336, 21.72, 21.713, 24.657, 20.921, 15.568, 21.336, 25.4, 22.088, 24.953, 22.52, 24.193, 22.553, 21.257, 23.337, 23.785, 21.857, 23.097, 19.056, 25.177, 24.761, 20.825, 17.712, 19.153, 24.377, 17.034, 23.464, 21.224, 17.097, 18.719, 23.954, 18.201, 19.496, 27.432, 25.697, 22.105, 17.297, 20.281, 24.593, 24.264, 24.345, 20.72, 23.544, 24.32, 20.344, 24.384, 23.04, 20.784, 18.936, 24.737, 26.913, 24.305, 23.351, 20.845, 19.76, 26.866, 20.304, 18.785, 25.56, 21.301, 18.294, 24.314, 18.35, 25.478, 18.699, 16.824, 25.962, 25.146, 20.149, 28.372, 19.639, 19.559, 19.949, 26.113, 19.372, 19.954, 17.195, 23.267, 20.336, 20.157, 25.743, 18.891, 20.502, 19.179, 23.025, 22.365, 23.271, 18.873, 19.977, 22.502, 23.077, 21.574, 25.175, 27.797, 19.982, 14.71, 24.916, 22.955, 21.428, 26.147, 19.345, 22.825, 20.385, 20.009, 21.225, 27.257, 23.297, 26.585, 20.744, 19.72, 21.512, 14.4, 21.545, 22.432, 19.689, 26.489, 26.752, 25.209, 21.282, 20.144, 19.208, 17.76, 19.001, 27.209, 20.481, 26.162, 22.161, 22.32, 27.203, 21.897, 22.337, 20.304, 29.536, 17.912, 23.352, 20.665, 23.232, 20.474, 17.733, 18.989, 23.8, 20.249, 19.346, 17.438, 24.537, 17.16, 23.096, 23.528, 23.905, 19.296, 20.432, 19.753, 21.496, 20.328, 23.793, 22.961, 23.769, 21.81, 16.569, 18.914, 21.736, 16.665, 24.417, 20.587, 19.007, 18.523, 22.091, 26.007, 20.942, 18.524, 24.54, 23.624, 20.49, 18.039, 18.908, 20.336, 24.768, 22.257, 26.713, 16.944, 19.415, 22.281, 25.578, 21.465, 30.856, 24.154, 19.504, 23.728, 19.248, 23.657, 20.049, 17.458, 23.712, 25.081, 18.488, 19.344, 22.721, 24.889, 19.064, 21.769, 26.376, 24.61, 22.321, 19.56, 20.416, 19.233, 26.193, 25.385, 17.593, 24.257, 25.832, 17.769, 18.617, 19.913, 23.985, 27.001, 19.049, 20.409, 20.921, 21.801, 20.016, 20.145, 26.401, 20.585, 18.865, 22.832, 19.185, 22.113, 22.794, 25.322, 17.162, 22.569, 29.185, 23.489, 24.753, 22.72, 21.377, 19.513, 24.505, 23.473, 23.121, 22.713, 24.937, 19.48, 19.674, 20.977, 16.297, 18.017, 16.425, 20.217, 17.984, 18.609, 22.801, 30.993, 20.162, 23.4, 21.185, 23.082, 16.808, 24.208, 22.473, 26.034, 21.545, 22.817, 24.625, 20.562, 18.089, 17.617, 22.809, 23.297, 23.377, 21.417, 21.304, 20.377, 21.752, 19.976, 21.049, 20.263, 19.617, 21.721, 20.521, 22.729, 21.002, 21.866, 25.585, 24.113, 18.521, 21.153, 21.32, 20.809, 22.057, 19.353, 21.241, 19.977, 18.185, 21.257, 18.713, 20.377, 25.354, 18.513, 17.089, 20.681, 21.193, 18.777, 18.472, 16.305, 22.729, 19.241, 19.328, 18.297, 22.058, 20.08, 16.841, 21.728, 26.232, 14.674, 14.72, 19.224, 20.09, 23.417, 17.882, 16.653, 19.737, 23.401, 24.266, 15.305, 18.626, 16.802, 17.0, 24.186, 17.76, 18.617, 21.44, 20.465, 23.232, 23.961, 26.073, 20.672, 21.849, 18.729, 17.833, 19.672, 16.832, 18.673, 21.617, 20.881, 18.481])
S.sort()

n_init = 5
N = len(S)
print(N)
fig, ax = plt.subplots()
plt.subplots_adjust(bottom=0.25,left=0.25)

methods = [
    "inverted_cdf",
    "averaged_inverted_cdf",
    "closest_observation",
    "interpolated_inverted_cdf",
    "hazen",
    "weibull",
    "linear",
    "median_unbiased",
    "normal_unbiased",
]
plots = {}

# SLIDER
ax_slider = plt.axes((0.25,0.1,0.65,0.03))
slider = Slider(
    ax=ax_slider,
    label="n",
    valmin=1,
    valmax=N,
    valinit=n_init,
    valstep=1
)

def update(n,setup=False):
    p_values = np.linspace(0,1,401)
    sub_scores = S[:n]
    for method in methods:
        q_values = np.quantile(sub_scores,q=p_values,method=method) # type: ignore
        if setup:
            #plots[method] = ax.scatter(p_values, q_values, label=method, s=10)
            
            plots[method], = ax.plot(p_values, q_values, label=method,marker='o', linestyle='')
        
        else:
            #print(np.c_[p_values, q_values])
            plots[method].set_data(p_values,q_values)
            #plots[method].set_offsets(p_values, q_values)
    
    
    ax.relim()
    ax.autoscale_view()

    fig.canvas.draw_idle()

update(n_init,True)
slider.on_changed(update)
ax.legend()
ax.grid(True)

rax = plt.axes((0,0.1, 0.18, 0.50))

check = CheckButtons(rax,methods,[True]*len(methods))

def checked_box(label):
    plots[label].set_visible(not plots[label].get_visible())
    plt.draw()

check.on_clicked(checked_box)
plt.show()
