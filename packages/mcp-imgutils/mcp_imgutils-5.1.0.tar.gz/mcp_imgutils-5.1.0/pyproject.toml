[project]
name = "mcp-imgutils"
version = "5.1.0"
description = "MCP服务：将本地图片和网络图片发送给LLM"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "mcp>=1.2.0",
    "Pillow",
    "aiofiles",
    "anyio",
    "click",
    "httpx",
    "starlette",
    "uvicorn"
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project.scripts]
mcp-imgutils = "mcp_imgutils:main"

[tool.hatch.build.targets.wheel]
packages = ["src/mcp_imgutils"]

[tool.setuptools.packages.find]
where = ["src"]

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.3.0",
    "pre-commit>=3.6.0"
]

[tool.pytest.ini_options]
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "function"
testpaths = ["tests"]
markers = [
    "no_collect: marks test classes that should not be collected as test cases"
]
filterwarnings = [
    "ignore::pytest.PytestCollectionWarning"
]

[tool.semantic_release]
version_variables = [
    "pyproject.toml:project.version"
]
version_toml = [
    "pyproject.toml:project.version"
]
commit_parser = "conventional"
major_on_zero = false
branch = "main"
changelog_components = "semantic_release.changelog.changelog"
build_command = "uv build"

[tool.ruff]
target-version = "py311"
line-length = 88
exclude = [
    ".git",
    ".venv",
    "__pycache__",
    "build",
    "dist",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle错误
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "SIM", # flake8-simplify
    "T20", # flake8-print
]
ignore = [
    "E501",  # 行太长
    "B904",  # 在except子句中使用raise ... from err
    "T201",  # print语句 - 在日志模块中是必要的
]

[tool.ruff.lint.isort]
known-first-party = ["mcp_imgutils"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[dependency-groups]
dev = [
    "ruff>=0.11.4",
]
