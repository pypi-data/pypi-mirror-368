# copyright 2003-2024 LOGILAB S.A. (Paris, FRANCE), all rights reserved.
# contact https://www.logilab.fr/ -- mailto:contact@logilab.fr
#
# This file is part of CubicWeb.
#
# CubicWeb is free software: you can redistribute it and/or modify it under the
# terms of the GNU Lesser General Public License as published by the Free
# Software Foundation, either version 2.1 of the License, or (at your option)
# any later version.
#
# CubicWeb is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more
# details.
#
# You should have received a copy of the GNU Lesser General Public License along
# with CubicWeb.  If not, see <https://www.gnu.org/licenses/>.
"""vcard import / export"""

from logilab.common.deprecation import class_renamed

from cubicweb import _
from cubicweb.predicates import is_instance
from cubicweb_web.view import EntityView

VCARD_PHONE_TYPES = {"home": "HOME", "office": "WORK", "mobile": "CELL", "fax": "FAX"}


class VCardCWUserView(EntityView):
    """export a person information as a vcard"""

    __regid__ = "vcard"
    title = _("vcard")
    templatable = False
    content_type = "text/x-vcard"
    __select__ = is_instance("CWUser")

    def set_request_content_type(self):
        """overriden to set a .vcf filename"""
        self._cw.set_content_type(self.content_type, filename="vcard.vcf")

    def cell_call(self, row, col):
        self.vcard_header()
        self.vcard_content(self.cw_rset.complete_entity(row, col))
        self.vcard_footer()

    def vcard_header(self):
        self.w("BEGIN:vcard\n")
        self.w("VERSION:3.0\n")

    def vcard_footer(self):
        self.w("NOTE:this card has been generated by CubicWeb\n")
        self.w("END:vcard\n")

    def vcard_content(self, entity):
        who = "{} {}".format(entity.surname or "", entity.firstname or "")
        self.w("FN:%s\n", who)
        self.w("N:%s;;;;\n", entity.login)
        self.w("TITLE:%s\n", who)
        for email in entity.use_email:
            self.w("EMAIL;TYPE=INTERNET:%s\n", email.address)


VCardEuserView = VCardEUserView = class_renamed("VCardEuserView", VCardCWUserView)
