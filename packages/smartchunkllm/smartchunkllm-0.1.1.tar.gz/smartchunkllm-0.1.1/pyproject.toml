[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "smartchunkllm"
version = "0.1.1"
description = "Advanced Legal Document Semantic Chunking System"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "SmartChunkLLM Team", email = "info@smartchunkllm.com"}
]
maintainers = [
    {name = "SmartChunkLLM Team", email = "info@smartchunkllm.com"}
]
keywords = [
    "legal", "documents", "semantic", "chunking", "nlp", 
    "ai", "llm", "pdf", "turkish", "law", "embedding", 
    "clustering", "transformers", "ollama", "openai", "anthropic"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Legal Industry",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Text Processing :: Linguistic",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Office/Business",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "numpy>=1.21.0",
    "scipy>=1.7.0",
    "pandas>=1.3.0",
    "PyPDF2>=3.0.0",
    "pdfplumber>=0.7.0",
    "pymupdf>=1.23.0",
    "pdfminer.six>=20220524",
    "pytesseract>=0.3.10",
    "Pillow>=9.0.0",
    "opencv-python>=4.5.0",
    "transformers>=4.20.0",
    "sentence-transformers>=2.2.0",
    "torch>=1.12.0",
    "scikit-learn>=1.1.0",
    "hdbscan>=0.8.28",
    "umap-learn>=0.5.3",
    "openai>=1.0.0",
    "anthropic>=0.7.0",
    "ollama>=0.1.7",
    "pydantic>=2.0.0",
    "tqdm>=4.64.0",
    "click>=8.0.0",
    "rich>=12.0.0",
    "loguru>=0.6.0",
    "pyyaml>=6.0",
    "joblib>=1.1.0",
    "requests>=2.28.0",
    "httpx>=0.24.0",
    "typing-extensions>=4.0.0",
]

[project.optional-dependencies]
turkish = [
    "zeyrek>=0.1.2",
    "turkish-stemmer>=1.0.0",
]
layout = [
    "layoutparser>=0.3.4",
    "detectron2>=0.6; python_version<'3.11'",
    "torchvision>=0.13.0",
]
performance = [
    "numba>=0.56.0",
    "faiss-cpu>=1.7.0",
]
visualization = [
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "plotly>=5.0.0",
]
web = [
    "streamlit>=1.20.0",
    "fastapi>=0.95.0",
    "uvicorn>=0.20.0",
]
database = [
    "sqlalchemy>=1.4.0",
    "psycopg2-binary>=2.9.0",
]
cloud = [
    "boto3>=1.26.0",
    "azure-storage-blob>=12.14.0",
    "google-cloud-storage>=2.7.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.20.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=0.991",
    "isort>=5.10.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
]
all = [
    "zeyrek>=0.1.2",
    "turkish-stemmer>=1.0.0",
    "layoutparser>=0.3.4",
    "detectron2>=0.6",
    "torchvision>=0.13.0",
    "numba>=0.56.0",
    "faiss-cpu>=1.7.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "plotly>=5.0.0",
    "streamlit>=1.20.0",
    "fastapi>=0.95.0",
    "uvicorn>=0.20.0",
    "sqlalchemy>=1.4.0",
    "psycopg2-binary>=2.9.0",
    "boto3>=1.26.0",
    "azure-storage-blob>=12.14.0",
    "google-cloud-storage>=2.7.0",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.20.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=0.991",
    "isort>=5.10.0",
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
]

[project.scripts]
smartchunk = "smartchunkllm.cli:main"
smartchunkllm = "smartchunkllm.cli:main"

[project.urls]
Homepage = "https://github.com/smartchunkllm/smartchunkllm"
Repository = "https://github.com/smartchunkllm/smartchunkllm"
Documentation = "https://smartchunkllm.readthedocs.io/"
"Bug Reports" = "https://github.com/smartchunkllm/smartchunkllm/issues"
Changelog = "https://github.com/smartchunkllm/smartchunkllm/blob/main/CHANGELOG.md"

[tool.setuptools]
packages = ["smartchunkllm"]
include-package-data = true

[tool.setuptools.package-data]
smartchunkllm = [
    "data/*.json",
    "data/*.yaml",
    "data/*.txt",
    "templates/*.txt",
    "templates/*.json",
    "config/*.yaml",
    "config/*.json",
]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]