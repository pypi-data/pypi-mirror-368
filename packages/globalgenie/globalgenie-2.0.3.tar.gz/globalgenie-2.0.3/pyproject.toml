[project]
name = "globalgenie"
version = "2.0.3"
description = "GlobalGenie: The Complete AI Agent Framework for building intelligent, autonomous agents with memory, reasoning, and multi-modal capabilities - Now with comprehensive testing strategy and 100% validation"
requires-python = ">=3.8,<4"
readme = "README.md"
license = { text = "MPL-2.0" }
authors = [
  {name = "GlobalGenie Team", email = "team@globalgenie.com"}
]
maintainers = [
  {name = "GlobalGenie Team", email = "team@globalgenie.com"}
]
keywords = [
  "ai",
  "agents", 
  "automation",
  "multi-agent",
  "llm",
  "artificial-intelligence",
  "autonomous-agents",
  "reasoning",
  "memory",
  "knowledge-base",
  "rag",
  "framework",
  "openai",
  "anthropic",
  "google",
  "chatbot",
  "machine-learning",
  "nlp",
  "conversational-ai"
]
classifiers = [
    # Development Status
    "Development Status :: 5 - Production/Stable",
    
    # Intended Audience
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "Intended Audience :: End Users/Desktop",
    
    # License
    "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
    
    # Programming Language
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only",
    
    # Operating System
    "Operating System :: OS Independent",
    "Operating System :: POSIX",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: MacOS",
    
    # Topic
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content :: CGI Tools/Libraries",
    "Topic :: Communications :: Chat",
    "Topic :: System :: Distributed Computing",
    "Topic :: Database",
    "Topic :: Text Processing :: Linguistic",
    "Topic :: Office/Business",
    "Topic :: Education",
    
    # Environment
    "Environment :: Console",
    "Environment :: Web Environment",
    "Environment :: No Input/Output (Daemon)",
    
    # Framework
    "Framework :: AsyncIO",
    
    # Natural Language
    "Natural Language :: English",
    
    # Typing
    "Typing :: Typed"
]

dependencies = [
  "docstring-parser",
  "gitpython",
  "httpx",
  "pydantic-settings",
  "pydantic",
  "python-dotenv",
  "python-multipart",
  "pyyaml",
  "rich",
  "tomli",
  "typer",
  "typing-extensions",
]

[project.optional-dependencies]
dev = ["mypy", "pytest", "pytest-asyncio", "pytest-cov", "pytest-mock", "ruff", "timeout-decorator", "types-pyyaml", "types-aiofiles", "fastapi", "uvicorn", "arxiv"]

# Models integration test dependencies
integration-tests = [
    "exa_py",
    "duckduckgo-search",
    "yfinance",
    "sqlalchemy",
    "Pillow"
]

# Dependencies for Telemetry
opentelemetry = ["opentelemetry-sdk", "opentelemetry-exporter-otlp"]
weave = ["weave"]
openlit = ["openlit", "globalgenie[opentelemetry]"]
arize = ["arize-phoenix", "globalgenie[opentelemetry]", "opentelemetry-exporter-otlp-proto-grpc", "opentelemetry-distro"]
langfuse = ["langfuse"]

# Dependencies for Models
aws-bedrock = ["boto3", "aioboto3"]
anthropic = ["anthropic"]
azure = ["azure-ai-inference", "aiohttp"]
cerebras = ["cerebras-cloud-sdk"]
cohere = ["cohere"]
infinity = ["infinity_client"]
google = ["google-genai"]
groq = ["groq"]
ibm = ["ibm-watsonx-ai"]
litellm = ["litellm"]
lmstudio = ["lmstudio"]
meta = ["llama-api-client"]
mistral = ["mistralai"]
ollama = ["ollama"]
openai = ["openai"]
portkey = ["portkey-ai"]

# Dependencies for Tools
agentql = ["agentql"]
apify = ["apify-client"]
brave = ["brave-search"]
browserbase = ["browserbase", "playwright"]
cartesia = ["cartesia"]
confluence = ["atlassian-python-api"]
ddg = ["duckduckgo-search"]
duckdb = ["duckdb"]
elevenlabs = ["elevenlabs"]
evm = ["web3"]
exa = ["exa_py"]
fal = ["fal_client"]
firecrawl = ["firecrawl-py"]
crawl4ai= ["crawl4ai"]
github = ["PyGithub"]
gmail = ["google-api-python-client", "google-auth-httplib2", "google-auth-oauthlib"]
google_bigquery = ["google-cloud-bigquery"]
googlemaps = ["googlemaps", "google-maps-places"]
matplotlib = ["matplotlib"]
mcp = ["mcp"]
mem0 = ["mem0ai"]
newspaper = ["newspaper4k", "lxml_html_clean"]
opencv = ["opencv-python"]
psycopg2 = ["psycopg2-binary"]
todoist = ["todoist-api-python"]
valyu = ["valyu"]
webex = ["webexpythonsdk"]
yfinance = ["yfinance"]
youtube = ["youtube_transcript_api"]
zep = ["zep-cloud"]
daytona=["daytona"]
oxylabs = ["oxylabs"]

# Dependencies for Storage
sql = ["sqlalchemy"]
postgres = ["psycopg-binary", "psycopg"]
sqlite = ["sqlalchemy"]
gcs = ["google-cloud-storage"]
firestore = ["google-cloud-firestore"]
redis = ["redis"]

# Dependencies for Vector databases
pgvector = ["pgvector"]
chromadb = ["chromadb"]
lancedb = ["lancedb==0.20.0", "tantivy"]
qdrant = ["qdrant-client"]
couchbase = ["couchbase"]
cassandra = ["cassio"]
mongodb = ["pymongo[srv]"]
singlestore = ["sqlalchemy"]
weaviate = ["weaviate-client"]
milvusdb = ["pymilvus>=2.5.10"]
clickhouse = ["clickhouse-connect"]
pinecone = ["pinecone==5.4.2"]
surrealdb = ["surrealdb>=1.0.4"]

# Dependencies for Knowledge
pdf = ["pypdf", "rapidocr_onnxruntime"]
docx = ["python-docx"]
text = ["aiofiles"]
csv = ["aiofiles"]
markdown = ["unstructured", "markdown", "aiofiles"]

# Dependencies for AG-UI integration
agui = ["ag-ui-protocol"]

# Dependencies for Embedders
huggingface = [
    "huggingface-hub",
]

# Dependencies for Performance
performance = ["memory_profiler"]

# Dependencies for Running readygenie
readygenies = ["inquirer", "email_validator"]

# Dependencies for Docker
docker = ["globalgenie-docker"]

# Dependencies for AWS
aws = ["globalgenie-aws", "globalgenie-docker"]

# All models
models = [
  "globalgenie[aws-bedrock]",
  "globalgenie[anthropic]",
  "globalgenie[azure]",
  "globalgenie[cerebras]",
  "globalgenie[cohere]",
  "globalgenie[infinity]",
  "globalgenie[google]",
  "globalgenie[groq]",
  "globalgenie[ibm]",
  "globalgenie[litellm]",
  "globalgenie[meta]",
  "globalgenie[mistral]",
  "globalgenie[ollama]",
  "globalgenie[openai]",
  "globalgenie[portkey]"
]

# All tools
tools = [
  "globalgenie[apify]",
  "globalgenie[brave]",
  "globalgenie[exa]",
  "globalgenie[cartesia]",
  "globalgenie[ddg]",
  "globalgenie[duckdb]",
  "globalgenie[newspaper]",
  "globalgenie[youtube]",
  "globalgenie[firecrawl]",
  "globalgenie[crawl4ai]",
  "globalgenie[github]",
  "globalgenie[gmail]",
  "globalgenie[googlemaps]",
  "globalgenie[todoist]",
  "globalgenie[matplotlib]",
  "globalgenie[elevenlabs]",
  "globalgenie[evm]",
  "globalgenie[fal]",
  "globalgenie[webex]",
  "globalgenie[mcp]",
  "globalgenie[browserbase]",
  "globalgenie[agentql]",
  "globalgenie[opencv]",
  "globalgenie[valyu]",
#  "globalgenie[yfinance]",  # Broken right now
  "globalgenie[confluence]",
  "globalgenie[oxylabs]",
  "globalgenie[zep]",
  "globalgenie[mem0]",
  "globalgenie[google_bigquery]",
  "globalgenie[psycopg2]",
]

# All storage
storage = [
  "globalgenie[sql]",
  "globalgenie[postgres]",
  "globalgenie[sqlite]",
  "globalgenie[gcs]",
  "globalgenie[firestore]",
  "globalgenie[redis]",
]

# All vector databases
vectordbs = [
  "globalgenie[pgvector]",
  "globalgenie[chromadb]",
  "globalgenie[lancedb]",
  "globalgenie[qdrant]",
  "globalgenie[couchbase]",
  "globalgenie[cassandra]",
  "globalgenie[mongodb]",
  "globalgenie[singlestore]",
  "globalgenie[weaviate]",
  "globalgenie[milvusdb]",
  "globalgenie[clickhouse]",
  "globalgenie[pinecone]",
  "globalgenie[surrealdb]"
]

# All knowledge
knowledge = [
  "globalgenie[pdf]",
  "globalgenie[docx]",
  "globalgenie[text]",
  "globalgenie[csv]",
  "globalgenie[markdown]"
]

# All embedders
embedders = [
  "globalgenie[huggingface]"
]

# All libraries for testing
tests = [
    "globalgenie[dev]",
    "globalgenie[models]",
    "globalgenie[tools]",
    "globalgenie[storage]",
    "globalgenie[vectordbs]",
    "globalgenie[knowledge]",
    "globalgenie[embedders]",
    "globalgenie[performance]",
    "globalgenie[readygenies]",
    "globalgenie[agui]",
    "twine",
    "build",
]

[project.scripts]
gg = "globalgenie.cli.entrypoint:globalgenie_cli"
globalgenie = "globalgenie.cli.entrypoint:globalgenie_cli"

[project.urls]
homepage = "https://github.com/RahulEdward/global-genie"
documentation = "https://github.com/RahulEdward/global-genie/wiki"
repository = "https://github.com/RahulEdward/global-genie"
changelog = "https://github.com/RahulEdward/global-genie/releases"
issues = "https://github.com/RahulEdward/global-genie/issues"
discussions = "https://github.com/RahulEdward/global-genie/discussions"
support = "https://github.com/RahulEdward/global-genie/discussions"
source = "https://github.com/RahulEdward/global-genie"
tracker = "https://github.com/RahulEdward/global-genie/issues"
"Bug Reports" = "https://github.com/RahulEdward/global-genie/issues"
"Feature Requests" = "https://github.com/RahulEdward/global-genie/discussions"

"Funding" = "https://github.com/sponsors/RahulEdward"

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
include = ["globalgenie*"]

[tool.setuptools.package-data]
globalgenie = ["py.typed"]
include = ["LICENSE"]

[tool.pytest.ini_options]
log_cli = true
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.ruff]
line-length = 120
target-version = "py39"
# Ignore `F401` (import violations) in all `__init__.py` files
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
check_untyped_defs = true
no_implicit_optional = true
warn_unused_configs = true
disable_error_code = ["override"]
plugins = ["pydantic.mypy"]
exclude = ["tests*"]

[[tool.mypy.overrides]]
module = [
  "gg_ui.*",
  "agentql.*",
  "aioboto3.*",
  "aiofiles.*",
  "altair.*",
  "anthropic.*",
  "apify_client.*",
  "arxiv.*",
  "atlassian.*",
  "azure.ai.inference.*",
  "azure.core.*",
  "boto3.*",
  "botocore.*",
  "bs4.*",
  "bson.*",
  "brave.*",
  "browserbase.*",
  "cassio.*",
  "cerebras.*",
  "cerebras_cloud_sdk.*",
  "chonkie.*",
  "chromadb.*",
  "clickhouse_connect.*",
  "clip.*",
  "cohere.*",
  "crawl4ai.*",
  "daytona.*",
  "daytona_api_client.*",
  "discord.*",
  "docker.*",
  "docx.*",
  "duckdb.*",
  "duckduckgo_search.*",
  "email_validator.*",
  "e2b_code_interpreter.*",
  "eth_account.*",
  "exa_py.*",
  "fastapi.*",
  "fastembed.*",
  "filetype.*",
  "firecrawl.*",
  "github.*",
  "google.*",
  "googlemaps.*",
  "google_maps_places.*",
  "google_auth_oauthlib.*",
  "googleapiclient.*",
  "googlesearch.*",
  "groq.*",
  "hexbytes.*",
  "huggingface_hub.*",
  "ibm_watsonx_ai.*",
  "imghdr.*",
  "infinity_client.*",
  "jira.*",
  "kubernetes.*",
  "lancedb.*",
  "langchain_core.*",
  "langchain.*",
  "llama_index.*",
  "llama_api_client.*",
  "linkup.*",
  "litellm.*",
  "matplotlib.*",
  "mem0.*",
  "mcp.*",
  "memory_profiler.*",
  "mistralai.*",
  "mlx_whisper.*",
  "nest_asyncio.*",
  "newspaper.*",
  "numpy.*",
  "ollama.*",
  "openai.*",
  "cv2.*",
  "openbb.*",
  "pandas.*",
  "pgvector.*",
  "PIL.*",
  "pinecone_text.*",
  "pinecone.*",
  "portkey_ai.*",
  "playwright.sync_api.*",
  "psycopg.*",
  "psycopg2.*",
  "pyarrow.*",
  "pycountry.*",
  "pymongo.*",
  "pypdf.*",
  "pytz.*",
  "qdrant_client.*",
  "rapidocr_onnxruntime.*",
  "redis.*",
  "replicate.*",
  "requests.*",
  "scrapegraph_py.*",
  "sentence_transformers.*",
  "serpapi.*",
  "setuptools.*",
  "simplejson.*",
  "slack_sdk.*",
  "spider.*",
  "sqlalchemy.*",
  "starlette.*",
  "streamlit.*",
  "tantivy.*",
  "tavily.*",
  "textract.*",
  "timeout_decorator.*",
  "tiktoken.*",
  "torch.*",
  "todoist_api_python.*",
  "tweepy.*",
  "twilio.*",
  "tzlocal.*",
  "upstash_vector.*",
  "urllib3.*",
  "uvicorn.*",
  "valyu.*",
  "vertexai.*",
  "voyageai.*",
  "weaviate.*",
  "web3.*",
  "webexpythonsdk.*",
  "wikipedia.*",
  "yaml.*",
  "yfinance.*",
  "youtube_transcript_api.*",
  "couchbase.*",
  "acouchbase.*",
  "zep_cloud.*",
  "oxylabs.*",
  "surrealdb.*"
]
ignore_missing_imports = true
