Metadata-Version: 2.4
Name: hacs-core
Version: 0.4.0
Summary: Core models and base classes for Healthcare Agent Communication Standard
Project-URL: Homepage, https://github.com/solanovisitor/hacs-ai
Project-URL: Documentation, https://github.com/solanovisitor/hacs-ai/blob/main/docs/
Project-URL: Repository, https://github.com/solanovisitor/hacs-ai
Project-URL: Issues, https://github.com/solanovisitor/hacs-ai/issues
Project-URL: Changelog, https://github.com/solanovisitor/hacs-ai/blob/main/CHANGELOG.md
Author-email: Solano Todeschini <solanovisitor@gmail.com>
Maintainer-email: Solano Todeschini <solanovisitor@gmail.com>
License: MIT
Keywords: actor,agents,ai,base-classes,core,evidence,healthcare,memory,models
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Healthcare Industry
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Scientific/Engineering :: Medical Science Apps.
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Typing :: Typed
Requires-Python: >=3.11
Requires-Dist: hacs-infrastructure>=0.4.0
Requires-Dist: hacs-models>=0.4.0
Requires-Dist: pydantic<3.0.0,>=2.11.7
Requires-Dist: pyjwt>=2.8.0
Provides-Extra: all
Requires-Dist: cryptography>=41.0.0; extra == 'all'
Provides-Extra: auth
Requires-Dist: cryptography>=41.0.0; extra == 'auth'
Provides-Extra: dev
Requires-Dist: black>=23.0.0; extra == 'dev'
Requires-Dist: mypy>=1.8.0; extra == 'dev'
Requires-Dist: pytest-cov>=4.0.0; extra == 'dev'
Requires-Dist: pytest>=7.0.0; extra == 'dev'
Requires-Dist: ruff>=0.4.0; extra == 'dev'
Description-Content-Type: text/markdown

# HACS Core

**Foundation models for Healthcare Agent Communication Standard**

Core Pydantic models and base classes that define the healthcare AI communication protocol.

## üè• **Healthcare Models**

Essential healthcare data structures optimized for AI agent communication:

- **Patient** - Demographics, contact info, clinical context
- **Observation** - Clinical measurements, lab results, vital signs
- **Encounter** - Healthcare visits, episodes of care
- **Actor** - Healthcare providers with role-based permissions
- **MemoryBlock** - Structured memory for AI clinical reasoning
- **Evidence** - Clinical guidelines, research, decision support

## üéØ **Key Features**

- **FHIR Compatible** - Full alignment with healthcare standards
- **AI Optimized** - Structured for LLM processing and tool calling
- **Validation Built-in** - Healthcare-specific validation rules
- **Actor Security** - Role-based access control for clinical data
- **Memory System** - Episodic, procedural, and executive memory types

## üì¶ **Installation**

```bash
pip install hacs-core
```

## üöÄ **Quick Start**

```python
from hacs_core import Patient, Observation, Actor, MemoryBlock

# Healthcare provider
physician = Actor(
    name="Dr. Sarah Chen",
    role="PHYSICIAN",
    organization="Mount Sinai Health System"
)

# Patient record
patient = Patient(
    full_name="Maria Rodriguez",
    birth_date="1985-03-15",
    gender="female",
    active=True
)

# Clinical observation
bp_reading = Observation(
    code_text="Blood Pressure",
    value="145/90",
    unit="mmHg",
    status="final",
    patient_id=patient.id
)

# Clinical memory
memory = MemoryBlock(
    content="Patient presents with elevated BP, discussed lifestyle modifications",
    memory_type="episodic",
    importance_score=0.8
)
```

## üîó **Integration**

HACS Core models work seamlessly with:
- **MCP Tools** - 25+ healthcare tools via Model Context Protocol
- **LangGraph** - AI agent workflows with clinical memory
- **PostgreSQL** - Persistent storage with pgvector
- **FHIR Systems** - Healthcare standards compliance

## üìÑ **License**

Apache-2.0 License - see [LICENSE](../../LICENSE) for details.
