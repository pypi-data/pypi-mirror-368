[build-system]
requires = ["hatchling >= 1.26"]
build-backend = "hatchling.build"

[project]
name = "fsio"
version = "1.3.6"  # https://packaging.python.org/en/latest/discussions/versioning/
dependencies = []
requires-python = ">=3.12"
authors = [
  { name="Charlie Collier", email="collier.p.charlie@gmail.com" }
]
maintainers = [
  { name="Charlie Collier", email="collier.p.charlie@gmail.com" }
]
description = "Python package containing useful file system operations"
readme = "README.md"
license = "MIT"
license-files = ["LICEN[CS]E*"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
    "Framework :: Hatch"
]

[project.optional-dependencies]
# These will install if installing the subproject, e.g. "pip install .[name]"
test = [
    # for testing
    "pytest",
    "pytest-cov",
    "mypy",
    "ruff",
    # pre-commit hooks
    "pre-commit",
    # code requirements
    "pyarrow"
]
docs = [
    "mkdocs",
    "mkdocstrings[python]",
    "mkdocs-material"
]
cli = [
    "typer"
]

[project.scripts]
fsio = "fsio.cli.program:app"

[project.urls]
Documentation = "https://collier-p-charlie.github.io/fsio"
Repository = "https://github.com/collier-p-charlie/fsio"
Issues = "https://github.com/collier-p-charlie/fsio/issues"
Changelog = "https://github.com/collier-p-charlie/fsio/blob/main/CHANGELOG.md"

[tool.hatch.build.targets.wheel]
sources = ["src"]

[tool.hatch.build.targets.sdist]
include = [
  "**.py",
  "/tests"
]
exclude = []

[tool.pytest.ini_options]
minversion = "6.0"
pythonpath = "src"
testpaths = [
    "tests"
]
addopts = [
  "--verbosity=3",
  "--cache-clear",
  "-p", "no:warnings",
  "--cov"
]

[tool.setuptools.package-data]
"fsio" = ["py.typed"]

[tool.mypy]
mypy_path = "src"
files = "src/"
explicit_package_bases = true

[tool.coverage.run]
source = [
    "src/"
]
omit = [
    "tests/**",
    "**/__init__.py"
]

[tool.coverage.report]
show_missing = true
skip_covered = true

# Exclude these lines from coverage report
exclude_lines = [
    "pragma: no cover",
    "if __name__ == .__main__.:",
    "def __str__",
    "def __repr__"
]

# Fail if total coverage is below the threshold
fail_under = 90

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = ["ALL"]  # See all rules here: https://docs.astral.sh/ruff/rules/
ignore = [
    "D100",
    "D104",
    "D205",
    "E501"  # Ignore line length errors
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
    "ANN001",  # missing type
    "D101",  # missing docstring in test class
    "D102",  # missing docstring in test method
    "D103",  # missing docstring in test public function
    "S101",  # using `assert` for test; recommended with PyTest
]
