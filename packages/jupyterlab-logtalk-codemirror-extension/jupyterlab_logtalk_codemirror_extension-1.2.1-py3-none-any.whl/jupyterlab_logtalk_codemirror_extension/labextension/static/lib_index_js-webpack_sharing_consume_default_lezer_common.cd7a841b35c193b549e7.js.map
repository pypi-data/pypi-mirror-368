{"version":3,"file":"lib_index_js-webpack_sharing_consume_default_lezer_common.cd7a841b35c193b549e7.js","mappings":"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","sources":["webpack://jupyterlab_logtalk_codemirror_extension/./src/index.ts"],"sourcesContent":["\nimport { JupyterFrontEnd, JupyterFrontEndPlugin} from '@jupyterlab/application';\nimport { IEditorLanguageRegistry} from '@jupyterlab/codemirror';\nimport { ICommandPalette } from '@jupyterlab/apputils';\nimport { ILauncher } from '@jupyterlab/launcher';\nimport { IFileBrowserFactory } from '@jupyterlab/filebrowser';\nimport { LabIcon } from '@jupyterlab/ui-components';\nimport { StreamLanguage, StreamParser, LanguageSupport, indentUnit, indentOnInput } from '@codemirror/language';\nimport { keymap } from '@codemirror/view';\nimport { indentWithTab } from '@codemirror/commands';\nimport { Prec } from '@codemirror/state';\n\n// Comprehensive Logtalk stream parser for CodeMirror 6\n// Based on the official Logtalk language support from LogtalkDotOrg/logtalk3\nconst logtalkStreamParser: StreamParser<any> = {\n  startState() {\n    return {\n      inComment: false,\n      inString: false,\n      stringDelim: null,\n      stringType: null,  // 'atom' for quoted atoms, 'string' for double-quoted terms\n      inRule: false,     // Track if we're inside a rule (after :- and before .)\n      lastLine: '',      // Track the last processed line for indentation context\n      currentLine: ''    // Track the current line being processed\n    };\n  },\n\n  token(stream, state) {\n    // Track line changes for indentation context\n    if (stream.sol()) {\n      // Start of line - update lastLine with previous line content\n      state.lastLine = state.currentLine || '';\n      state.currentLine = '';\n    }\n\n    // Accumulate current line content\n    if (!state.currentLine) {\n      state.currentLine = '';\n    }\n\n    // Handle block comments\n    if (state.inComment) {\n      if (stream.match(/\\*\\//)) {\n        state.inComment = false;\n        return \"comment\";\n      }\n      stream.next();\n      return \"comment\";\n    }\n\n    // Handle strings and quoted atoms\n    if (state.inString) {\n      if (stream.match(state.stringDelim)) {\n        state.inString = false;\n        const returnType = state.stringType === 'atom' ? 'atom' : 'string';\n        state.stringDelim = null;\n        state.stringType = null;\n        return returnType;\n      }\n\n      // Control character escape sequences\n      if (stream.match(/\\\\[abfnrtv\\\\'\"]/)) {\n        // Standard escape sequences: \\a \\b \\f \\n \\r \\t \\v \\\\ \\' \\\"\n        return \"string.escape\";\n      }\n      if (stream.match(/\\\\[0-7]+\\\\/)) {\n        // Octal escape sequences: \\123\\\n        return \"string.escape\";\n      }\n      if (stream.match(/\\\\x[0-9a-fA-F]+\\\\/)) {\n        // Hexadecimal escape sequences: \\x1F\\\n        return \"string.escape\";\n      }\n      if (stream.match(/\\\\u[0-9a-fA-F]{4}/)) {\n        // Unicode escape sequences: \\u1234\n        return \"string.escape\";\n      }\n      if (stream.match(/\\\\U[0-9a-fA-F]{8}/)) {\n        // Extended Unicode escape sequences: \\U12345678\n        return \"string.escape\";\n      }\n      if (stream.match(/\\\\\\s/)) {\n        // Line continuation (backslash followed by whitespace)\n        return \"string.escape\";\n      }\n\n      stream.next();\n      return state.stringType === 'atom' ? 'atom' : 'string';\n    }\n\n    // Start of block comment\n    if (stream.match(/\\/\\*/)) {\n      state.inComment = true;\n      return \"comment\";\n    }\n\n    // Line comment\n    if (stream.match(/%.*$/)) {\n      return \"comment\";\n    }\n\n    // Quoted atom\n    if (stream.match(/'/)) {\n      state.inString = true;\n      state.stringDelim = \"'\";\n      state.stringType = 'atom';\n      return \"atom\";\n    }\n\n    // Double-quoted term\n    if (stream.match(/\"/)) {\n      state.inString = true;\n      state.stringDelim = '\"';\n      state.stringType = 'string';\n      return \"string\";\n    }\n\n    // Entity opening directives\n    if (stream.match(/:-\\s(?:object|protocol|category|module)(?=\\()/)) {\n      return \"meta\";\n    }\n\n    // End entity directives\n    if (stream.match(/:-\\send_(?:object|protocol|category)(?=\\.)/)) {\n      return \"meta\";\n    }\n\n    // Entity relations\n    if (stream.match(/\\b(?:complements|extends|instantiates|imports|implements|specializes)(?=\\()/)) {\n      return \"meta\";\n    }\n\n    // Other directives\n    if (stream.match(/:-\\s(?:else|endif|built_in|dynamic|synchronized|threaded)(?=\\.)/)) {\n      return \"meta\";\n    }\n    if (stream.match(/:-\\s(?:calls|coinductive|elif|encoding|ensure_loaded|export|if|include|initialization|info|reexport|set_(?:logtalk|prolog)_flag|uses)(?=\\()/)) {\n      return \"meta\";\n    }\n    if (stream.match(/:-\\s(?:alias|info|dynamic|discontiguous|meta_(?:non_terminal|predicate)|mode|multifile|public|protected|private|op|uses|use_module|synchronized)(?=\\()/)) {\n      return \"meta\";\n    }\n\n    // Message sending operator\n    if (stream.match(/::/)) {\n      return \"operator\";\n    }\n\n    // Explicit module qualification\n    if (stream.match(/:/)) {\n      return \"operator\";\n    }\n\n    // External call operators\n    if (stream.match(/[{}]/)) {\n      return \"operator\";\n    }\n\n    // Mode operators\n    if (stream.match(/[?@]/)) {\n      return \"operator\";\n    }\n\n    // Comparison operators\n    if (stream.match(/@(?:=<|<|>|>=)|==|\\\\==/)) {\n      return \"operator\";\n    }\n    if (stream.match(/=<|[<>]=?|=:=|=\\\\=/)) {\n      return \"operator\";\n    }\n\n    // Bitwise operators\n    if (stream.match(/<<|>>|\\/\\\\|\\\\\\/|\\\\/)) {\n      return \"operator\";\n    }\n\n    // Arithmetic operators\n    if (stream.match(/\\*\\*|[+\\-*\\/]|\\/\\//)) {\n      return \"operator\";\n    }\n\n    // Evaluable functions\n    if (stream.match(/\\b(?:e|pi|div|mod|rem)\\b(?![_!(^~])/)) {\n      return \"operator\";\n    }\n\n    // Clause neck operator (rule indicator)\n    if (stream.match(/:-/)) {\n      // Check if this is a directive (starts at beginning of line) or a rule neck\n      if (stream.column() === 2) {\n        // This is likely a directive like :-object(...), don't set inRule\n      } else {\n        // This is a rule neck operator, set inRule to true\n        state.inRule = true;\n      }\n      return \"operator\";\n    }\n\n    // Period (clause terminator)\n    if (stream.match(/\\./)) {\n      // If we were in a rule, we're no longer in one\n      if (state.inRule) {\n        state.inRule = false;\n      }\n      return \"operator\";\n    }\n\n    // Other misc operators\n    if (stream.match(/!|\\\\+|[,;]|-->|->|=|\\\\=|\\.\\.|\\^|\\bas\\b|\\bis\\b/)) {\n      return \"operator\";\n    }\n\n    // Built-in predicates - evaluable functions\n    if (stream.match(/\\b(?:abs|acos|asin|atan|atan2|ceiling|cos|div|exp|float(?:_(?:integer|fractional)_part)?|floor|log|max|min|mod|rem|round|sign|sin|sqrt|tan|truncate|xor)(?=\\()/)) {\n      return \"builtin\";\n    }\n\n    // Control predicates\n    if (stream.match(/\\b(?:true|fail|false|repeat|(?:instantiation|system)_error)\\b(?![_!(^~])/)) {\n      return \"builtin\";\n    }\n    if (stream.match(/\\b(?:uninstantiation|type|domain|consistency|existence|permission|representation|evaluation|resource|syntax)_error(?=\\()/)) {\n      return \"builtin\";\n    }\n    if (stream.match(/\\b(?:call|catch|ignore|throw|once)(?=\\()/)) {\n      return \"builtin\";\n    }\n\n    // Event handlers\n    if (stream.match(/\\b(after|before)(?=\\()/)) {\n      return \"builtin\";\n    }\n    \n    // Message forwarding handler\n    if (stream.match(/\\bforward(?=\\()/)) {\n      return \"builtin\";\n    }\n    // Execution-context methods\n    if (stream.match(/\\b(context|parameter|this|se(lf|nder))(?=\\()/)) {\n      return \"builtin\";\n    }\n    // Reflection\n    if (stream.match(/\\b(current_predicate|predicate_property)(?=\\()/)) {\n      return \"builtin\";\n    }\n    // DCGs and term expansion\n    if (stream.match(/\\b(expand_(goal|term)|(goal|term)_expansion|phrase)(?=\\()/)) {\n      return \"builtin\";\n    }\n\n    // Entity creation and destruction\n    if (stream.match(/\\b(abolish|c(reate|urrent))_(object|protocol|category)(?=\\()/)) {\n      return \"builtin\";\n    }\n\n    // Entity properties\n    if (stream.match(/\\b(object|protocol|category)_property(?=\\()/)) {\n      return \"builtin\";\n    }\n\n    // Entity relations\n    if (stream.match(/\\bco(mplements_object|nforms_to_protocol)(?=\\()/)) {\n      return \"builtin\";\n    }\n    if (stream.match(/\\bextends_(object|protocol|category)(?=\\()/)) {\n      return \"builtin\";\n    }\n    if (stream.match(/\\bimp(lements_protocol|orts_category)(?=\\()/)) {\n      return \"builtin\";\n    }\n    if (stream.match(/\\b(instantiat|specializ)es_class(?=\\()/)) {\n      return \"builtin\";\n    }\n\n    // Events\n    if (stream.match(/\\b(current_event|(abolish|define)_events)(?=\\()/)) {\n      return \"builtin\";\n    }\n\n    // Flags\n    if (stream.match(/\\b(create|current|set)_logtalk_flag(?=\\()/)) {\n      return \"builtin\";\n    }\n\n    // Compiling, loading, and library paths\n    if (stream.match(/\\blogtalk_(compile|l(ibrary_path|oad|oad_context)|make(_target_action)?)(?=\\()/)) {\n      return \"builtin\";\n    }\n    if (stream.match(/\\blogtalk_make\\b/)) {\n      return \"builtin\";\n    }\n\n    // Database\n    if (stream.match(/\\b(clause|retract(all)?)(?=\\()/)) {\n      return \"builtin\";\n    }\n    if (stream.match(/\\ba(bolish|ssert(a|z))(?=\\()/)) {\n      return \"builtin\";\n    }\n\n    // All solutions\n    if (stream.match(/\\b((bag|set)of|f(ind|or)all)(?=\\()/)) {\n      return \"builtin\";\n    }\n\n    // Multi-threading predicates\n    if (stream.match(/\\bthreaded(_(ca(ll|ncel)|once|ignore|exit|peek|wait|notify))?(?=\\()/)) {\n      return \"builtin\";\n    }\n\n    // Engine predicates\n    if (stream.match(/\\bthreaded_engine(_(create|destroy|self|next|next_reified|yield|post|fetch))?(?=\\()/)) {\n      return \"builtin\";\n    }\n\n    // Term unification\n    if (stream.match(/\\b(subsumes_term|unify_with_occurs_check)(?=\\()/)) {\n      return \"builtin\";\n    }\n\n    // Term creation and decomposition\n    if (stream.match(/\\b(functor|arg|copy_term|numbervars|term_variables)(?=\\()/)) {\n      return \"builtin\";\n    }\n\n    // Stream selection and control\n    if (stream.match(/\\b(curren|se)t_(in|out)put(?=\\()/)) {\n      return \"builtin\";\n    }\n    if (stream.match(/\\b(open|close)(?=[(])(?=\\()/)) {\n      return \"builtin\";\n    }\n    if (stream.match(/\\bflush_output(?=[(])(?=\\()/)) {\n      return \"builtin\";\n    }\n    if (stream.match(/\\b(at_end_of_stream|flush_output)\\b/)) {\n      return \"builtin\";\n    }\n    if (stream.match(/\\b(stream_property|at_end_of_stream|set_stream_position)(?=\\()/)) {\n      return \"builtin\";\n    }\n\n    // Character and byte input/output\n    if (stream.match(/\\b(?:(?:get|peek|put)_(?:char|code|byte)|nl)(?=\\()/)) {\n      return \"builtin\";\n    }\n    if (stream.match(/\\bnl\\b/)) {\n      return \"builtin\";\n    }\n\n    // Term input/output\n    if (stream.match(/\\bread(_term)?(?=\\()/)) {\n      return \"builtin\";\n    }\n    if (stream.match(/\\bwrite(q|_(canonical|term))?(?=\\()/)) {\n      return \"builtin\";\n    }\n      if (stream.match(/\\b(current_)?op(?=\\()/)) {\n      return \"builtin\";\n    }\n    if (stream.match(/\\b(current_)?char_conversion(?=\\()/)) {\n      return \"builtin\";\n    }\n\n    // Atom/term processing\n    if (stream.match(/\\b(?:atom_(?:length|chars|concat|codes)|sub_atom|char_code|number_(?:char|code)s)(?=\\()/)) {\n      return \"builtin\";\n    }\n\n    // Term testing\n    if (stream.match(/\\b(?:var|atom(ic)?|integer|float|callable|compound|nonvar|number|ground|acyclic_term)(?=\\()/)) {\n      return \"builtin\";\n    }\n\n    // Term comparison\n    if (stream.match(/\\bcompare(?=\\()/)) {\n      return \"builtin\";\n    }\n\n    // Sorting\n    if (stream.match(/\\b(key)?sort(?=\\()/)) {\n      return \"builtin\";\n    }\n\n    // Implementation defined hooks functions\n    if (stream.match(/\\b(se|curren)t_prolog_flag(?=\\()/)) {\n      return \"builtin\";\n    }\n    if (stream.match(/\\bhalt\\b/)) {\n      return \"builtin\";\n    }\n    if (stream.match(/\\bhalt(?=\\()/)) {\n      return \"builtin\";\n    }\n\n    // Numbers\n    if (stream.match(/\\b(?:0b[01]+|0o[0-7]+|0x[0-9a-fA-F]+)\\b/)) {\n      return \"number\";\n    }\n    if (stream.match(/(?<=^|\\s)0'(?:\\\\.|.)/)) {\n      return \"number\";\n    }\n    if (stream.match(/\\b\\d+\\.?\\d*(?:[eE][+-]?\\d+)?\\b/)) {\n      return \"number\";\n    }\n\n    // Variables\n    if (stream.match(/\\b[A-Z_][A-Za-z0-9_]*\\b/)) {\n      return \"variable\";\n    }\n\n    // Skip atoms that aren't keywords or builtins\n    if (stream.match(/\\b[a-z][A-Za-z0-9_]*\\b/)) {\n      return null;\n    }\n\n    // Skip whitespace\n    if (stream.match(/\\s+/)) {\n      return null;\n    }\n\n    // Default: consume one character\n    const char = stream.next();\n\n    // Track current line content for indentation\n    if (char && !stream.eol()) {\n      state.currentLine += char;\n    }\n\n    return null;\n  },\n};\n\n// Custom Enter key handler that uses our indentation service\nfunction logtalkEnterHandler(view: any) {\n  //console.log('=== Custom Enter handler called ===');\n\n  const { state } = view;\n  const pos = state.selection.main.head;\n  const doc = state.doc;\n  const line = doc.lineAt(pos);\n\n  // Calculate indentation for the new line by looking at current line\n  let newIndent = '';\n  const tabSize = state.tabSize || 4;\n  const currentIndentColumn = line.text.match(/^(\\t*)/)?.[1]?.length || 0;\n\n  //console.log('Current line:', `\"${line.text}\"`);\n  //console.log('Current indent level:', currentIndentColumn);\n\n  // Check if current line should cause indentation or de-indentation\n  if (/^:-\\s(?:object|protocol|category|module)\\(/.test(line.text.trim())) {\n    newIndent = '\\t'.repeat(currentIndentColumn + 1);\n    //console.log('Indenting after entity opening directive');\n  } else if (/:-\\s*$/.test(line.text.trim()) || /:-(?![^(]*\\)).*[^.]$/.test(line.text.trim())) {\n    newIndent = '\\t'.repeat(currentIndentColumn + 1);\n    //console.log('Indenting after clause neck operator');\n  } else if (/[(\\[{]\\s*$/.test(line.text)) {\n    newIndent = '\\t'.repeat(currentIndentColumn + 1);\n    //console.log('Indenting after opening bracket');\n  } else if (/.*\\.$/.test(line.text.trim()) && currentIndentColumn > 0) {\n    // Check if this is the end of a rule by looking for :- in previous lines\n    let isEndOfRule = false;\n\n    // Look back through previous lines to see if we're in a rule\n    for (let i = line.number - 1; i >= 1; i--) {\n      const prevLine = doc.line(i);\n      const prevText = prevLine.text.trim();\n\n      // If we find a period, we've reached the end of a previous clause\n      if (prevText.endsWith('.')) {\n        break;\n      }\n\n      // If we find :- that's not a directive, we're ending a rule\n      if (/:-/.test(prevText) && !/^:-\\s(?:object|protocol|category|module|end_|else|endif|built_in|dynamic|synchronized|threaded|calls|coinductive|elif|encoding|ensure_loaded|export|if|include|initialization|info|reexport|set_|uses|alias|discontiguous|meta_|mode|multifile|public|protected|private|op|use_module)/.test(prevText)) {\n        isEndOfRule = true;\n        break;\n      }\n    }\n\n    if (isEndOfRule) {\n      // De-indent after rule termination (period at end of line)\n      newIndent = '\\t'.repeat(Math.max(0, currentIndentColumn - 1));\n      //console.log('De-indenting after rule termination');\n    } else {\n      // This is a fact, maintain current indentation\n      newIndent = '\\t'.repeat(currentIndentColumn);\n      //console.log('Maintaining indentation after fact');\n    }\n  } else if (/^:-\\send_(?:object|protocol|category)\\.$/.test(line.text.trim()) && currentIndentColumn > 0) {\n    // De-indent after entity closing directives\n    newIndent = '\\t'.repeat(Math.max(0, currentIndentColumn - 1));\n    //console.log('De-indenting after entity closing directive');\n  } else {\n    newIndent = '\\t'.repeat(currentIndentColumn);\n    //console.log('Maintaining current indentation');\n  }\n\n  //console.log('New indent:', `\"${newIndent}\"`);\n\n  // Insert newline with calculated indentation\n  view.dispatch({\n    changes: {\n      from: pos,\n      insert: '\\n' + newIndent\n    },\n    selection: { anchor: pos + 1 + newIndent.length }\n  });\n\n  return true;\n}\n\n// Create the Logtalk language definition for JupyterLab 4\nconst logtalkLanguage = {\n  name: 'logtalk',\n  displayName: 'Logtalk',\n  mime: ['text/x-logtalk'],\n  extensions: ['lgt', 'logtalk'],\n  load: async (): Promise<LanguageSupport> => {\n    const streamLanguage = StreamLanguage.define(logtalkStreamParser);\n    return new LanguageSupport(streamLanguage, [\n      indentUnit.of('\\t'), // Use tabs for indentation\n      indentOnInput(), // Enable automatic re-indentation on input\n      Prec.high(keymap.of([\n        { key: \"Enter\", run: logtalkEnterHandler },\n        indentWithTab\n      ])),\n      streamLanguage.data.of({\n        commentTokens: { line: \"%\", block: { open: \"/*\", close: \"*/\" } },\n        closeBrackets: { brackets: [\"(\", \"[\", \"{\", \"'\", '\"'] },\n        indentOnInput: /(?:^:-\\s(?:object|protocol|category|module)\\(.*$|^:-\\send_(?:object|protocol|category)\\.$|\\s*.*\\s:-$|.*\\.$)/\n      })\n    ]);\n  }\n};\n\nconst plugin: JupyterFrontEndPlugin<void> = {\n  id: 'jupyterlab_logtalk_codemirror_extension:plugin',\n  description: 'A JupyterLab extension for Logtalk syntax highlighting.',\n  autoStart: true,\n  requires: [IEditorLanguageRegistry, ILauncher, IFileBrowserFactory, ICommandPalette],\n  activate: (\n    app: JupyterFrontEnd,\n    languages: IEditorLanguageRegistry,\n    launcher: ILauncher,\n    browserFactory: IFileBrowserFactory,\n    palette: ICommandPalette\n  ) => {\n    // Register the Logtalk language\n    languages.addLanguage(logtalkLanguage);\n    // Add a launcher item for Logtalk files\n    const { commands } = app;\n    const commandID = 'logtalk:create-file';    \n    const logtalkTextIcon = new LabIcon({\n      name: 'logtalk-text-icon',\n      svgstr: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <text x=\"12\" y=\"20\" font-family=\"monospace\" font-size=\"24\" text-anchor=\"middle\" fill=\"CanvasText\">⊨</text>\n      </svg>`\n    });\n    commands.addCommand(commandID, {\n      label: args =>\n        args['isPalette']\n          ? 'New Logtalk File'\n          : 'Logtalk File',\n      caption: 'Create a new Logtalk file',\n      icon: logtalkTextIcon,\n      execute: async () => {\n        const model = await commands.execute('docmanager:new-untitled', {\n          path: browserFactory.tracker.currentWidget?.model.path,\n          type: 'file',\n          ext: 'lgt'\n        });\n        return commands.execute('docmanager:open', {\n          path: model.path,\n          factory: 'Editor'\n        });\n      }\n    });\n    launcher.add({\n      command: commandID,\n      category: 'Other',\n      rank: 1\n    });\n    palette.addItem({\n      command: commandID,\n      args: { isPalette: true },\n      category: 'Other'\n    });\n\n    console.log('JupyterLab extension jupyterlab_logtalk_codemirror_extension is activated!');\n  }\n};\n\nexport default plugin;\n"],"names":[],"sourceRoot":""}