[project]
name = "stockula"
# x-release-please-start-version
version = "0.15.7"
# x-release-please-end
description = ""
authors = [
    {name = "Mitchell Murphy", email = "mitch.murphy@gmail.com"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.11"
# Note: Removed unused packages (August 2025):
# - alpaca-py, httpx (no broker integration implemented)
# - prophet, pyql (not used in forecasting)
# - matplotlib, mplfinance (no plotting functionality)
# - jupyter, jupyterlab (keep notebook file but not core dependency)
dependencies = [
    "pandas>=2.3.1",
    "numpy>=2.1.0",
    "scikit-learn>=1.5.0",
    "finta>=1.3",
    "backtesting>=0.6.4",
    "yfinance>=0.2.65",
    "pydantic-settings>=2.10.1",
    "pyyaml>=6.0.2",
    "dependency-injector>=4.48.1",
    "alembic==1.16.4",
    "sqlalchemy>=2.0.41",
    "sqlmodel>=0.0.22",
    "rich>=14.1.0",
    "typer>=0.16.0",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.12.5",
    "pytest>=8.4.1",
]
forecasting = [
    # AutoGluon requires Python < 3.13 due to Ray dependency
    "autogluon-timeseries>=1.2.0; python_version<'3.13'",
]
gpu = [
    # GPU-accelerated machine learning packages for AutoGluon
    # Note: These require CUDA toolkit and drivers to be installed
    "torch>=2.0.0",  # PyTorch for neural network models
    "xgboost>=2.0.0",  # XGBoost with GPU support
    "lightgbm>=4.0.0",  # LightGBM with GPU support
    # Note: TensorFlow and related packages currently don't support Python 3.13
    # They are commented out but documented for Python 3.12 users
    # "tensorflow>=2.15.0; python_version<'3.13'",  # TensorFlow for deep learning models
    # "tensorflow-probability>=0.23.0; python_version<'3.13'",  # TensorFlow Probability
    # "mxnet-cu112>=1.9.0; python_version<'3.13'",  # MXNet with CUDA 11.2 support
    # "gluonts>=0.14.0; python_version<'3.13'",  # GluonTS for advanced time series models
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/stockula", "utils"]

[tool.uv]
dev-dependencies = [
    "ruff>=0.12.5",
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.6.16",
    "pytest-xdist>=3.8.0",
    "pre-commit>=4.2.0",
    "mypy>=1.17.1",
    "types-pyyaml>=6.0.12.20250516",
    "types-requests>=2.32.0",
]

[tool.coverage.run]
omit = [
    "src/stockula/backtesting/strategies.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Longer line length to accommodate complex expressions and docstrings
line-length = 120
indent-width = 4

# Assume Python 3.11 (minimum supported version)
target-version = "py311"

[tool.ruff.lint]
# Enable pyflakes, pycodestyle, and isort
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
]

# Enable automatic removal of unused variables and imports
extend-select = [
    "F401",  # unused-import
    "F841",  # unused-variable
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Ignore specific rules in specific files
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402"]  # Module level import not at top of file
"src/stockula/main.py" = ["E402"]  # Add this
"tests/conftest.py" = ["E402"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.lint.isort]
known-first-party = ["stockula"]

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["tests"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true
exclude = ["tests/", "alembic/", "migrations/"]

[project.scripts]
lint = "utils.lint:main"
format-yaml = "utils.format_yaml:main"
format-md = "utils.format_markdown:main"
validate-docker = "utils.validate_docker:main"
verify-gpu = "utils.verify_gpu:main"
check-python = "utils.check_python:main"
docker-verify = "utils.verify_docker:main"
verify-build = "utils.verify_build:main"
