name: Test
on:
  push:
    branches:
      - main
  pull_request:
  # Run on any pull request
env:
  UV_CACHE_DIR: /tmp/.uv-cache
jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      - name: Restore uv cache
        uses: actions/cache@v4
        with:
          path: /tmp/.uv-cache
          key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
            uv-${{ runner.os }}
      - name: Install dependencies
        run: uv sync --all-extras --dev
      - name: Run linting
        run: |
          uv run ruff check src tests
          uv run ruff format --check src tests
      - name: Minimize uv cache
        run: uv cache prune --ci
  unit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      - name: Restore uv cache
        uses: actions/cache@v4
        with:
          path: /tmp/.uv-cache
          key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
            uv-${{ runner.os }}
      - name: Install dependencies
        run: uv sync --all-extras --dev
      - name: Run unit tests
        run: |
          uv run pytest tests/unit
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        # Token not required when using Codecov GitHub App
        # with:
        #   token: ${{ secrets.CODECOV_TOKEN }}
      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        # Token not required when using Codecov GitHub App
        # with:
        #   token: ${{ secrets.CODECOV_TOKEN }}
      - name: Minimize uv cache
        run: uv cache prune --ci

# integration:
#   runs-on: ubuntu-latest
#   steps:
#     - name: Checkout repository
#       uses: actions/checkout@v4

#     - name: Set up Python
#       uses: actions/setup-python@v5
#       with:
#         python-version: '3.13'

#     - name: Install uv
#       uses: astral-sh/setup-uv@v5
#       with:
#         enable-cache: true
#         cache-dependency-glob: "uv.lock"

#     - name: Restore uv cache
#       uses: actions/cache@v4
#       with:
#         path: /tmp/.uv-cache
#         key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
#         restore-keys: |
#           uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
#           uv-${{ runner.os }}

#     - name: Install dependencies
#       run: uv sync --all-extras --dev

#     - name: Run integration tests
#       env:
#         DATABASE_URL: sqlite:///./test_stockula.db
#         STOCKULA_ENV: test
#       run: |
#         uv run pytest tests/integration -v --cov=stockula --cov-report=xml --cov-report=term-missing

#     - name: Upload coverage to Codecov
#       uses: codecov/codecov-action@v5
#       with:
#         token: ${{ secrets.CODECOV_TOKEN }}
#         file: ./coverage.xml
#         flags: integration
#         name: integration-tests
#         fail_ci_if_error: false

#     - name: Minimize uv cache
#       run: uv cache prune --ci
