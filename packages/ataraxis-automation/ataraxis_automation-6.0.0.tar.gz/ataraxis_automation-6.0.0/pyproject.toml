# Defines the build system used for the project.
[build-system]
requires = ["hatchling==1.27.0"]
build-backend = "hatchling.build"

# Project metadata section. Provides the general ID information about the project.
[project]
name = "ataraxis-automation"
version = "6.0.0"
description = "Provides tools that support tox-based development automation pipelines used by other Sun (NeuroAI) lab projects."
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.11"
authors = [
    { name = "Ivan Kondratyev" },
]
maintainers = [
    { name = "Ivan Kondratyev", email = "ik278@cornell.edu" },
]

# The list of keywords that describe the project
keywords = ["automation", "tox", "development-tools", "ataraxis", "sunlab"]

# Additional classifiers used by PIP to group repositories.
classifiers = [
    # Development status
    "Development Status :: 5 - Production/Stable",
    # Intended audience and project topic
    "Intended Audience :: Developers",
    "Topic :: Software Development",
    # License
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    # Supported Python Versions
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    # Supported Operating Systems
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS :: MacOS X",
    # Typing
    "Typing :: Typed"
]

# Runtime project dependencies. This list includes both the dependencies necessary to run the ataraxis-automation CLIs
# and support all Sun lab tox environments (tasks). Therefore, each 'tox' task in every Sun lab project can include
# the ataraxis-automation as the sole dependency and work as expected.
dependencies = [
    # Automation Logic
    "click>=8,<9",  # Since click is a common dependency for many packages, pins to the major version
    "tomli==2.2.1",

    # Tox
    "tox==4.28.4",
    "uv==0.8.8",
    "tox-uv==1.27.0",

    # Testing
    "pytest==8.4.1",
    "pytest-cov==6.2.1",
    "pytest-xdist==3.8.0",

    # Coverage Reports
    "coverage==7.10.2",
    "junitparser==4.0.2",

    # Documentation
    "sphinx==8.2.3",
    "importlib_metadata==8.7.0",
    "sphinx-rtd-theme==3.0.2",
    "sphinx-click==6.0.0",
    "sphinx-autodoc-typehints==3.2.0",
    "sphinx-rtd-dark-mode==1.3.0",

    # Linting and Stub Generation
    "mypy==1.17.1",
    "ruff==0.12.8",

    # Building
    "build==1.3.0",
    "hatchling==1.27.0",

    # C-Extension Project Support
    "cibuildwheel[uv]==3.1.3",
    "nanobind==2.8.0",
    "scikit-build-core==0.11.5",
    "breathe==4.36.0",

    # Distribution
    "twine==6.1.0",
]

[project.urls]
Homepage = "https://github.com/Sun-Lab-NBB/ataraxis-automation"
Documentation = "https://ataraxis-automation-api-docs.netlify.app/"

# Specifies additional dependencies that can be installed alongside the main library.
[project.optional-dependencies]

# Dependencies that support developing this project.
dev = [
    # With ataraxis-automation 6.0.0, this section in all other projects typically includes ataraxis-automation
    # dependency and optional stub (type) libraries for project dependencies.
]

# CLI interfaces.
[project.scripts]
automation-cli = "ataraxis_automation.cli:cli"

# Specifies files that should not be included in the source-code distribution but are also not part of gitignore.
[tool.hatch.build.targets.sdist]
exclude = [".github", "recipe"]

# Specifies the library structure.
[tool.hatch.build.targets.wheel]
packages = ["src/ataraxis_automation"]

# Ruff Configuration.
[tool.ruff]
line-length = 120         # Deviates from the commonly used '80' standard.
indent-width = 4          # Same as black, indents are 4 spaces
target-version = "py311"  # Targets the lowest supported version of python
src = ["src"]             # The name of the root source code directory

# Excludes 'service' .py files, such as the sphinx configuration file, from linting.
extend-exclude = ["conf.py"]

# Checks for all potential violations and uses the exclusions below to target-disable specific ones.
lint.select = ["ALL"]

# General ignore directives
lint.ignore = [
    "COM812",  # Conflicts with the formatter
    "ISC001",  # Conflicts with the formatter
    "PT001",   # https://github.com/astral-sh/ruff/issues/8796#issuecomment-1825907715
    "PT023",   # https://github.com/astral-sh/ruff/issues/8796#issuecomment-1825907715
    "D107",    # Project-specific, __init__ is documented inside the main class docstring where applicable
    "D205",    # Bugs out for file descriptions
    "PLW0603", # While global statement usage is not ideal, it greatly streamlines certain development patterns
]

# Additional formatting configurations
[tool.ruff.format]
quote-style = "double"             # Uses double quotes for strings
indent-style = "space"             # Uses space for indents
skip-magic-trailing-comma = false  # Like black, ignores trailing commas
line-ending = "auto"               # Automatically detects and standardizes line-ending character

# Docstrings and comments' line length
[tool.ruff.lint.pycodestyle]
max-doc-length = 120  # Maximum documentation line length, the same as code

# Docstrings style
[tool.ruff.lint.pydocstyle]
convention = "google"

# Additional, file-specific 'ignore' directives
[tool.ruff.lint.per-file-ignores]
"**/__init__.py" = [
    "F401", # Imported but unused
    "F403", # Wildcard imports
]

[tool.ruff.lint.isort]
case-sensitive = true              # Takes case into account when sorting imports
combine-as-imports = true          # Combines multiple "as" imports for the same package
force-wrap-aliases = true          # Wraps "as" imports so that each uses a separate line (after combining for package)
force-sort-within-sections = true  # Forces "as" and "from" imports for the same package to be close
length-sort = true                 # Places shorter imports first


[tool.ruff.lint.flake8-unused-arguments]
ignore-variadic-names = true       # Ignores unused *args and **kwargs

# MyPy configuration section.
[tool.mypy]
disallow_untyped_defs = true # Enforces function annotation
warn_unused_ignores = true   # Warns against using 'type: ignore' for packages that have type stubs available.
exclude = [
    "ataraxis-automation-\\d+", # Ignores temporary folder created by setuptools when building the sdist
    "venv.*/",                  # Ignores virtual environments
    "build/",                   # Ignores the sdist directory
    "dist/",                    # Ignores the wheel directory
    "docs/",                    # Ignores the sphinx / doxygen directory
    "stubs/",                   # Ignores stubs directory (stubgen output target)
    "recipe/",                  # Ignores recipe directory (grayskull output target)
    "tests/",                   # Ignores the test directory.
]

# This is used by the 'test' tox tasks to aggregate coverage data produced during pytest runtimes.
[tool.coverage.paths]

# Maps coverage measured in site-packages to source files in src
source = ["src/", ".tox/*/lib/python*/site-packages/"]

# Same as above, specifies the output directory for the coverage .html report
[tool.coverage.html]
directory = "reports/coverage_html"
