"use strict";(self.webpackChunkteamized_reactapp=self.webpackChunkteamized_reactapp||[]).push([[376],{221:(e,a,n)=>{n.d(a,{A:()=>i});var t=n(4848),l=n(9336),s=n(6540);function i({title:e,className:a="",children:n}){const i=(0,s.useRef)(null);return(0,s.useEffect)(()=>{const e=new l.m_(i.current);return()=>e.dispose()},[]),(0,t.jsx)("abbr",{className:a,title:e,"data-bs-toggle":"tooltip",ref:i,children:n})}},1818:(e,a,n)=>{n.d(a,{A:()=>s});var t=n(4848),l=n(1820);const s={Column:function({className:e="",size:a=12,sizes:n={},grow:l=!1,children:s}){let i=`dashboard-column d-flex flex-column ${e} col-${a}`;for(const e of Object.keys(n))i+=` col-${e}-${n[e]}`;return l&&(i+=" flex-grow-1"),(0,t.jsx)("div",{className:i,children:s})},Page:function({loading:e=!1,title:a=null,subtitle:n=null,text:l=null,children:s}){return(0,t.jsxs)("div",{className:"dashboard p-0 w-100 h-100 d-flex flex-column",children:[a&&(0,t.jsx)("h4",{className:"dashboard-title pt-3 mx-3 text-bold",children:a}),n&&(0,t.jsx)("h5",{className:"dashboard-subtitle mt-2 mx-3",children:n}),l&&(0,t.jsx)("p",{className:"dashboard-text mt-2 mx-3",children:l}),e?(0,t.jsxs)("div",{className:"w-100 flex-grow-1 d-flex flex-column align-items-center justify-content-center",children:[(0,t.jsx)("div",{className:"spinner-border mb-3",role:"status",children:(0,t.jsx)("span",{className:"visually-hidden",children:"Laden..."})}),(0,t.jsx)("p",{children:"Seiteninhalt wird geladen..."})]}):(0,t.jsx)("div",{className:"dashboard-row row w-100 g-0 ms-0 px-2 pt-2",children:s})]})},Row:function({className:e="",grow:a=!1,children:n}){let l=`dashboard-row row w-100 g-0 ${e}`;return a&&(l+=" flex-grow-1"),(0,t.jsx)("div",{className:l,children:n})},Tile:function({title:e=null,help:a=null,grow:n=!1,className:s="",children:i=null,loading:r=!1,ref:c=null}){let u=`dashboard-tile row border border-dark rounded mx-2 mb-3 mt-0 flex-column ${s}`;return n&&(u+=" flex-grow-1"),(0,t.jsxs)("div",{className:u,ref:c,children:[e&&(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)("h5",{className:"dashboard-tile-title pt-2 text-bold",style:{flexBasis:0},children:[e,a&&(0,t.jsx)(l.A,{className:"ms-2 small",title:a})]}),(0,t.jsx)("hr",{className:"m-0"})]}),(0,t.jsx)("div",{className:"p-2 w-100 overflow-auto flex-grow-1",children:r?(0,t.jsxs)("div",{className:"text-center my-5",children:[(0,t.jsx)("i",{className:"fa-solid fa-spinner fa-spin"}),(0,t.jsx)("span",{className:"ms-2",children:"Daten werden geladen..."})]}):i})]})}}},1820:(e,a,n)=>{n.d(a,{A:()=>s});var t=n(4848),l=n(221);function s({title:e,icon:a="fa-solid fa-info-circle",className:n=""}){return(0,t.jsx)(l.A,{className:n,title:e,children:(0,t.jsx)("i",{className:a})})}},3335:(e,a,n)=>{n.d(a,{A:()=>i});var t=n(4848);function l({show:e=!0,noTopBorder:a=!1,children:n}){return e?(0,t.jsx)("tfoot",{className:a?"border-top-0":"",children:(0,t.jsx)("tr",{children:(0,t.jsx)("td",{colSpan:100,className:"border-bottom-0",children:(0,t.jsx)("div",{className:"w-100 d-inline-flex justify-content-end gap-2",children:n})})})}):null}var s=n(6540);const i={VerticalDataTable:function({items:e,children:a}){const n={head:null,foot:null};return s.Children.forEach(a,e=>{if(s.isValidElement(e))switch(e.type){case"thead":n.head=e;break;case"tfoot":case l:n.foot=e;break;default:console.warn("VerticalDataTable: Unsupported child type",e.type)}}),(0,t.jsxs)("table",{className:"table mb-0",children:[n.head,(0,t.jsx)("tbody",{children:e.map((e,a)=>({item:e,index:a})).filter(({item:e})=>!e.hide).map(({item:e,index:a})=>(0,t.jsxs)("tr",{className:e.isDebugId?"debug-id":"",children:[(0,t.jsxs)("th",{scope:"row",className:e.limitWidth?"pe-3":"",style:{width:e.limitWidth?"1px":void 0},children:[e.label,":"]}),(0,t.jsx)("td",{children:e.value})]},a))}),n.foot]})},ButtonFooter:l,SimpleTable:function({className:e="",children:a}){const n=`table mb-0 ${e}`;return(0,t.jsx)("table",{className:n,children:a})},Th:function({className:e="",children:a,noWrapFlex:n=!1}){return n?(0,t.jsx)("th",{className:"text-nowrap {className}",children:(0,t.jsx)("div",{className:"d-flex flex-nowrap gap-1",children:a})}):(0,t.jsx)("th",{className:e,children:a})}}},6780:(e,a,n)=>{n.d(a,{A:()=>l});var t=n(4848);function l({text:e,preserveLineBreaks:a=!0}){const n=/((?:https?:\/\/|www\.)[^\s/$.?#].\S*)/gi,l=e.split(n);return(0,t.jsx)("span",{style:{whiteSpace:a?"pre-wrap":"normal"},children:l.map((e,a)=>{if(e.match(n)){const n=e.startsWith("http")?e:`https://${e}`;return(0,t.jsx)("a",{href:n,target:"_blank",rel:"noopener noreferrer",children:e},a)}return e})})}},8826:(e,a,n)=>{n.d(a,{EM:()=>x,wE:()=>f,xV:()=>m,dM:()=>u,Ry:()=>_,_l:()=>w,eA:()=>p,el:()=>y,Vz:()=>b,tU:()=>h,zl:()=>o,V5:()=>g,sM:()=>d,rQ:()=>B,Ok:()=>N});var t=n(4692),l=n.n(t),s=n(5687),i=n(5206),r=n(855),c=n(8811);async function u(e){return await(0,r.rP)({title:"Verein erstellen",html:'\n          <label class="swal2-input-label" for="swal-input-name">Name:</label>\n          <input type="text" id="swal-input-name" class="swal2-input" placeholder="Dein Verein">\n          <label class="swal2-input-label" for="swal-input-description">Beschreibung:</label>\n          <textarea id="swal-input-description" class="swal2-textarea" placeholder="Infos über deinen Verein"></textarea>\n          <label class="swal2-input-label" for="swal-input-slug">Slug:</label>\n          <input type="text" id="swal-input-slug" class="swal2-input" placeholder="dein-verein">\n        ',focusConfirm:!1,showCancelButton:!0,confirmButtonText:"Erstellen",cancelButtonText:"Abbrechen",preConfirm:async()=>{const a=l()("#swal-input-name").val(),n=l()("#swal-input-description").val(),t=l()("#swal-input-slug").val();return a&&n&&t?t.match(/^[0-9a-z\-_]+$/)?(r.YU.showLoading(),await async function(e,a){return await async function(e,a){return await s.n.post(`teams/${e}/create-club`,a)}(e,a).then(async a=>(c.c(e).team.club=a.club,a.club))}(e.id,{name:a,slug:t,description:n})):(r.YU.showValidationMessage("Der Slug darf nur aus Kleinbuchstaben, Zahlen und Bindestrichen bestehen!"),!1):(r.YU.showValidationMessage("Bitte fülle alle Felder aus!"),!1)}})}async function o(e){return await(0,r.rP)({title:"Verein bearbeiten",html:`\n      <p>Verein: ${e.club.name}</p><hr />\n      <label class="swal2-input-label" for="swal-input-name">Name:</label>\n      <input type="text" id="swal-input-name" class="swal2-input" placeholder="${e.club.name}" value="${e.club.name}">\n      <label class="swal2-input-label" for="swal-input-description">Beschreibung:</label>\n      <textarea id="swal-input-description" class="swal2-textarea" placeholder="${e.club.description}">${e.club.description}</textarea>\n    `,focusConfirm:!1,showCancelButton:!0,confirmButtonText:"Aktualisieren",cancelButtonText:"Abbrechen",preConfirm:async()=>{const a=l()("#swal-input-name").val(),n=l()("#swal-input-description").val();return a&&n?(r.YU.showLoading(),await async function(e,a){return await async function(e,a){return await s.n.put(`teams/${e}/club`,a)}(e,a).then(async a=>(c.c(e).team.club=a.club,a.club))}(e.id,{name:a,description:n})):(r.YU.showValidationMessage("Bitte fülle alle Felder aus!"),!1)}})}async function p(e){return await(0,r.U_)(`Willst du den Verein '${e.club.name}' wirklich löschen und somit den Vereinsmodus im Team '${e.name}' deaktivieren?`,async()=>await async function(e){return await async function(e){return await s.n.delete(`teams/${e}/club`)}(e).then(async()=>{const a=c.c(e);a.team.club=null,a.club_members={}})}(e.id))}async function d(e){const a=await c.zV(e,i.T.CLUB_MEMBERS);return c.c(e).team.club.membercount=a.length,a}async function m(e){return await(0,r.rP)({title:"Vereinsmitglied hinzufügen",html:'\n      <label class="swal2-input-label" for="swal-input-first_name">Vorname:</label>\n      <input type="text" id="swal-input-first_name" class="swal2-input" placeholder="Max">\n      <label class="swal2-input-label" for="swal-input-last_name">Nachname:</label>\n      <input type="text" id="swal-input-last_name" class="swal2-input" placeholder="Mustermann">\n      <label class="swal2-input-label" for="swal-input-email">E-Mail:</label>\n      <input type="email" id="swal-input-email" class="swal2-input" placeholder="max.mustermann@example.com">\n      <label class="swal2-input-label" for="swal-input-birth_date">Geburtsdatum:</label>\n      <input type="date" id="swal-input-birth_date" class="swal2-input">\n    ',focusConfirm:!1,showCancelButton:!0,confirmButtonText:"Hinzufügen",cancelButtonText:"Abbrechen",preConfirm:async()=>{const a=l()("#swal-input-first_name").val(),n=l()("#swal-input-last_name").val(),t=l()("#swal-input-email").val(),i=l()("#swal-input-birth_date").val();return a&&n&&t?(r.YU.showLoading(),await async function(e,a){return await async function(e,a){return await s.n.post(`teams/${e}/club/members`,a)}(e,a).then(async a=>{const n=c.c(e);return n.club_members[a.member.id]=a.member,n.team.club.membercount+=1,a.member})}(e.id,{first_name:a,last_name:n,email:t,birth_date:i})):(r.YU.showValidationMessage("Namen und E-Mail-Adresse sind Pflichtfelder!"),!1)}})}async function b(e,a){return await(0,r.rP)({title:"Vereinsmitglied bearbeiten",html:`\n      <label class="swal2-input-label" for="swal-input-first_name">Vorname:</label>\n      <input type="text" id="swal-input-first_name" class="swal2-input" placeholder="${a.first_name}" value="${a.first_name}">\n      <label class="swal2-input-label" for="swal-input-last_name">Nachname:</label>\n      <input type="text" id="swal-input-last_name" class="swal2-input" placeholder="${a.last_name}" value="${a.last_name}">\n      <label class="swal2-input-label" for="swal-input-email">E-Mail:</label>\n      <input type="email" id="swal-input-email" class="swal2-input" placeholder="${a.email}" value="${a.email}">\n      <label class="swal2-input-label" for="swal-input-birth_date">Geburtsdatum:</label>\n      <input type="date" id="swal-input-birth_date" class="swal2-input" value="${a.birth_date}">\n    `,focusConfirm:!1,showCancelButton:!0,confirmButtonText:"Aktualisieren",cancelButtonText:"Abbrechen",preConfirm:async()=>{const n=l()("#swal-input-first_name").val(),t=l()("#swal-input-last_name").val(),i=l()("#swal-input-email").val(),u=l()("#swal-input-birth_date").val();return n&&t&&i?(r.YU.showLoading(),await async function(e,a,n){return await async function(e,a,n){return await s.n.put(`teams/${e}/club/members/${a}`,n)}(e,a,n).then(n=>(c.c(e).club_members[a]=n.member,n.member))}(e.id,a.id,{first_name:n,last_name:t,email:i,birth_date:u})):(r.YU.showValidationMessage("Namen und E-Mail-Adresse sind Pflichtfelder!"),!1)}})}async function w(e,a){return await(0,r.U_)(`Willst du das Vereinsmitglied '${a.first_name} ${a.last_name}' im Verein '${e.club.name}' wirklich löschen? Dabei werden auch alle zugehörigen Daten wie Portfolios und Gruppenzugehörigkeiten gelöscht!`,async()=>await async function(e,a){return await async function(e,a){return await s.n.delete(`teams/${e}/club/members/${a}`)}(e,a).then(async()=>{const n=c.c(e);delete n.club_members[a],n.team.club.membercount-=1;for(const e of Object.values(n.club_groups))e.memberids.includes(a)&&n.club_groups[e.id].memberids.splice(n.club_groups[e.id].memberids.indexOf(a),1)})}(e.id,a.id))}async function h(e,a){return await(0,r.rP)({title:`${a.first_name} ${a.last_name}: Portfolio bearbeiten`,html:"Portfolio laden...",focusConfirm:!1,showCancelButton:!0,confirmButtonText:"Aktualisieren",cancelButtonText:"Abbrechen",didOpen:async()=>{r.YU.showLoading(),r.YU.disableButtons();const n=r.YU.getHtmlContainer(),t=await async function(e,a){return await async function(e,a){return await s.n.get(`teams/${e}/club/members/${a}/portfolio`)}(e,a).then(e=>e.portfolio)}(e.id,a.id);r.YU.hideLoading(),r.YU.enableButtons(),n.innerHTML=`\n                    <label class="swal2-checkbox d-flex" for="swal-input-visible">\n                        <input type="checkbox" id="swal-input-visible" ${t.visible?"checked":""}>\n                        <span>Portfolio sichtbar?</span>\n                    </label>\n                    <label class="swal2-input-label" for="swal-input-image1_url">Bild 1:</label>\n                    <input type="text" id="swal-input-image1_url" class="swal2-input" placeholder="https://example.com/image1.jpg" value="${t.image1_url}">\n                    <label class="swal2-input-label" for="swal-input-image2_url">Bild 2:</label>\n                    <input type="text" id="swal-input-image2_url" class="swal2-input" placeholder="https://example.com/image2.jpg" value="${t.image2_url}">\n                    <label class="swal2-input-label" for="swal-input-member_since">Mitglied seit:</label>\n                    <input type="number" id="swal-input-member_since" class="swal2-input" placeholder="1994" value="${t.member_since}">\n                    <label class="swal2-input-label" for="swal-input-hobby_since">Hobby seit:</label>\n                    <input type="number" id="swal-input-hobby_since" class="swal2-input" placeholder="1994" value="${t.hobby_since}">\n                    <label class="swal2-input-label" for="swal-input-role">Rolle:</label>\n                    <input type="text" id="swal-input-role" class="swal2-input" placeholder="Vorstand" value="${t.role}">\n                    <label class="swal2-input-label" for="swal-input-profession">Beruf:</label>\n                    <input type="text" id="swal-input-profession" class="swal2-input" placeholder="Softwareentwickler" value="${t.profession}">\n                    <label class="swal2-input-label" for="swal-input-hobbies">Hobbies:</label>\n                    <textarea id="swal-input-hobbies" class="swal2-textarea">${t.hobbies}</textarea>\n                    <label class="swal2-input-label" for="swal-input-highlights">Highlights:</label>\n                    <textarea id="swal-input-highlights" class="swal2-textarea">${t.highlights}</textarea>\n                    <label class="swal2-input-label" for="swal-input-biography">Biografie:</label>\n                    <textarea id="swal-input-biography" class="swal2-textarea">${t.biography}</textarea>\n                    <label class="swal2-input-label" for="swal-input-contact_email">Kontakt-E-Mail:</label>\n                    <input type="email" id="swal-input-contact_email" class="swal2-input" placeholder="example@tpto.ch" value="${t.contact_email}">\n                `},preConfirm:async()=>{const n=l()("#swal-input-visible").prop("checked"),t=l()("#swal-input-image1_url").val(),i=l()("#swal-input-image2_url").val(),c=l()("#swal-input-member_since").val(),u=l()("#swal-input-hobby_since").val(),o=l()("#swal-input-role").val(),p=l()("#swal-input-profession").val(),d=l()("#swal-input-hobbies").val(),m=l()("#swal-input-highlights").val(),b=l()("#swal-input-biography").val(),w=l()("#swal-input-contact_email").val();return r.YU.showLoading(),await async function(e,a,n){return await async function(e,a,n){return await s.n.put(`teams/${e}/club/members/${a}/portfolio`,n)}(e,a,n).then(e=>e.portfolio)}(e.id,a.id,{visible:n,image1_url:t,image2_url:i,member_since:c,hobby_since:u,role:o,profession:p,hobbies:d,highlights:m,biography:b,contact_email:w})}})}async function f(e,a){return await async function(e,a){return await s.n.post(`teams/${e}/club/members/${a}/create-magic-link`)}(e,a).then(async e=>e.url)}async function g(e){return await c.zV(e,i.T.CLUB_GROUPS)}async function x(e){return await(0,r.rP)({title:"Gruppe erstellen",html:`\n      <p>Verein: ${e.club.name}</p><hr />\n      <label class="swal2-input-label" for="swal-input-name">Name:</label>\n      <input type="text" id="swal-input-name" class="swal2-input" placeholder="Name">\n      <label class="swal2-input-label" for="swal-input-description">Beschreibung:</label>\n      <textarea id="swal-input-description" class="swal2-textarea" placeholder="Beschreibung"></textarea>\n    `,focusConfirm:!1,showCancelButton:!0,confirmButtonText:"Erstellen",cancelButtonText:"Abbrechen",preConfirm:async()=>{const a=l()("#swal-input-name").val(),n=l()("#swal-input-description").val();return a?(r.YU.showLoading(),await async function(e,a){return await async function(e,a){return await s.n.post(`teams/${e}/club/groups`,a)}(e,a).then(async a=>(c.c(e).club_groups[a.group.id]=a.group,a.group))}(e.id,{name:a,description:n})):(r.YU.showValidationMessage("Bitte gib einen Namen ein!"),!1)}})}async function y(e,a){return await(0,r.rP)({title:"Gruppe bearbeiten",html:`\n      <p>Gruppe: ${a.name}</p><hr />\n      <label class="swal2-input-label" for="swal-input-name">Name:</label>\n      <input type="text" id="swal-input-name" class="swal2-input" placeholder="${a.name}" value="${a.name}">\n      <label class="swal2-input-label" for="swal-input-description">Beschreibung:</label>\n      <textarea id="swal-input-description" class="swal2-textarea" placeholder="${a.description}">${a.description}</textarea>\n    `,focusConfirm:!1,showCancelButton:!0,confirmButtonText:"Aktualisieren",cancelButtonText:"Abbrechen",preConfirm:async()=>{const n=l()("#swal-input-name").val(),t=l()("#swal-input-description").val();return n?(r.YU.showLoading(),await async function(e,a,n){return await async function(e,a,n){return await s.n.put(`teams/${e}/club/groups/${a}`,n)}(e,a,n).then(n=>(c.c(e).club_groups[a]=n.group,n.group))}(e.id,a.id,{name:n,description:t})):(r.YU.showValidationMessage("Bitte gib einen Namen ein!"),!1)}})}async function _(e,a){return await(0,r.ZX)(`Willst du die Gruppe '${a.name}' wirklich löschen? Die Mitglieder dieser Gruppe werden nicht gelöscht, sondern nur aus der Gruppe entfernt.`,async()=>await async function(e,a){return await async function(e,a){return await s.n.delete(`teams/${e}/club/groups/${a}`)}(e,a).then(async()=>{delete c.c(e).club_groups[a]})}(e.id,a.id))}async function $(e,a,n){return await async function(e,a,n){return await s.n.post(`teams/${e}/club/members/${a}/membership/${n}`)}(e,a,n).then(async()=>{c.c(e).club_groups[n].memberids.push(a)})}async function v(e,a,n){return await async function(e,a,n){return await s.n.delete(`teams/${e}/club/members/${a}/membership/${n}`)}(e,a,n).then(async()=>{const t=c.c(e);t.club_groups[n].memberids.splice(t.club_groups[n].memberids.indexOf(a),1)})}async function N(e,a){const n=c.c(e.id),t=Object.values(n.club_groups),s=Object.values(t).filter(e=>e.memberids.includes(a.id)).map(e=>e.id);return await(0,r.rP)({title:"Gruppenzuordnung",html:`\n          <p>Vereinsmitglied: ${a.first_name} ${a.last_name}</p><hr />\n          <label class="swal2-input-label" for="swal-input-groups">Gruppen:</label>\n          <select id="swal-input-groups" class="swal2-input h-auto py-3" multiple size="${t.length}"></select>\n        `,focusConfirm:!1,showCancelButton:!0,confirmButtonText:"Aktualisieren",cancelButtonText:"Abbrechen",didOpen:()=>{const e=l()("#swal-input-groups");e.html(t.map(e=>`<option value="${e.id}">${e.name}</option>`).join("")),e.val(s)},preConfirm:async()=>{const n=l()("#swal-input-groups").val();r.YU.showLoading();const t=[];for(const l of n)s.includes(l)||t.push($(e.id,a.id,l));for(const l of s)n.includes(l)||t.push(v(e.id,a.id,l));return await Promise.all(t),(0,r.Sv)("Die Gruppenzuordnung wurde aktualisiert.","Gruppenzuordnung aktualisiert"),!0}})}async function B(e){return await(0,r.rP)({title:"Mitgliederportfolios exportieren",html:`\n            Über folgende URL können die Mitgliederportfolios der Gruppe "${e.name}"\n            im JSON-Format abgerufen werden:\n            <input class="swal2-input" type="text" readonly value="${e.shared_url}">\n          `,showCancelButton:!0,showConfirmButton:!1,cancelButtonText:"Schliessen"})}}}]);