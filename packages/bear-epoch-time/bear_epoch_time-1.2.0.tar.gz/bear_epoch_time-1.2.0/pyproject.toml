[project]
name = "bear-epoch-time"
dynamic = ["version"]
description = "Elegant epoch timestamp handling with timezone-aware operations, fluent API, and smart defaults for Python developers who hate datetime complexity."
readme = "README.md"
authors = [{ name = "chaz", email = "bright.lid5647@fastmail.com" }]
requires-python = ">=3.11"
dependencies = [
    "python-dateutil>=2.9.0.post0",
    "pytz>=2025.2",
    "rich>=14.0.0",
    "tzlocal>=5.3.1",
]

[project.scripts]
bear_epoch_time_version = "bear_epoch_time._internal.cli:get_version"
bear_epoch_time_bump = "bear_epoch_time._internal.cli:bump_version"

[build-system]
requires = ["hatchling", "uv-dynamic-versioning"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "uv-dynamic-versioning"

[tool.uv-dynamic-versioning]
vcs = "git"
style = "semver"
metadata = false
format = "{base}"

[tool.hatch.build.hooks.version]
path = "src/bear_epoch_time/_internal/_version.py"
template = '''
__version__ = "{version}"
'''


[dependency-groups]
maintain = [
    "git-changelog>=2.5",
    "yore>=0.3.3",
    "griffe>=1.7.3",
    "pytest-asyncio>=1.0.0",
]
ci = [
    "ruff>=0.4",
    "pytest>=8.2",
    "pytest-cov>=5.0",
    "pytest-randomly>=3.15",
    "pytest-xdist>=3.6",
    "pyright>=1.1",
    "types-markdown>=3.6",
    "types-pyyaml>=6.0",
    "nox>=2025.5.1",
    "twine>=6.1.0",
]

[tool.uv]
default-groups = ["maintain", "ci"]

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]
addopts = "-v"
asyncio_mode = "auto"
filterwarnings = [
    "ignore::PendingDeprecationWarning",
    "ignore::ImportWarning",
    "ignore::ResourceWarning",
    "ignore::UserWarning",
]

[tool.pyright]
pythonVersion = "3.11"
typeCheckingMode = "standard"
include = ["src"]
exclude = ["**/__pycache__"]
venvPath = "."
venv = ".venv"
reportMissingImports = true
reportMissingTypeStubs = false
