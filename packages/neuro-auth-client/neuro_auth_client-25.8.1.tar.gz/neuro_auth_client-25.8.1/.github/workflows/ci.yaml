name: CI

on:
  push:
    branches: [master]
    tags: [v*.*.*]
  pull_request:
    branches: [master]
  schedule:
  - cron: 0 4 * * *


jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
    - name: Checkout commit
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 0
    - name: Install python
      uses: actions/setup-python@v5
      with:
        python-version: 3.11
    - name: Cache packages
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-py-3.11-${{ hashFiles('requirements-dev.txt') }}-${{
          hashFiles('setup.py') }}
    - name: Install dependencies
      run: make setup
    - name: Lint
      run: |
        echo "::add-matcher::.github/actionlint-matcher.json"
        make lint
      env:
        CI_LINT_RUN: 1
    - name: Run unit tests
      run: make test
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: .coverage.xml
        name: codecov-unit

  approve:
    name: Approve bot PR
    runs-on: ubuntu-latest
    if: endsWith(github.actor, '[bot]')
    needs: test
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: metadata
        id: metadata
        if: github.actor == 'dependabot[bot]'
        uses: dependabot/fetch-metadata@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Enable auto-merge for bot PRs
        run: gh pr merge --auto --squash --delete-branch "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
    - name: Checkout commit
      uses: actions/checkout@v4
    - name: Install python
      uses: actions/setup-python@v5
      with:
        python-version: 3.11
    - name: Install dependencies
      run: |
        python -m pip install twine build
    - name: Make dist
      run: |
        python -m build
    - name: Upload package
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        TWINE_NON_INTERACTIVE: 1
      run: |
        twine upload dist/*
