[build-system]
requires = ["setuptools>=68", "wheel", "uv>=0.2"]
build-backend = "setuptools.build_meta"

[project]
name = "meridian-runtime"
version = "1.1.2"
description = "A minimal, reusable graph runtime for Python with bounded edges, fairness, and observability."
readme = "README.md"
requires-python = ">=3.11"
license = { text = "BSD-3-Clause" }
authors = [{ name = "GhostWeasel", email = "devnull@ghostweasel.net" }]
keywords = [
  "graph",
  "runtime",
  "scheduler",
  "asyncio",
  "observability",
  "python",
]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "License :: OSI Approved :: BSD License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3 :: Only",
  "Intended Audience :: Developers",
  "Topic :: Software Development :: Libraries",
  "Topic :: System :: Distributed Computing",
  "Typing :: Typed",
]
dependencies = [
    "jupytext>=1.17.2",
    "mkdocs>=1.6.1",
 "mkdocs-material>=9.6.16",
]

[project.urls]
Homepage = "https://ghostweasellabs.github.io/meridian-runtime-docs"
Repository = "https://github.com/ghostweasellabs/meridian-runtime.git"
Changelog = "https://github.com/ghostweasellabs/meridian-runtime/blob/main/CHANGELOG.md"
Documentation = "https://ghostweasellabs.github.io/meridian-runtime-docs"

[project.optional-dependencies]
dev = [
  "ruff>=0.5.0,<1.0.0",
  "black>=24.4.0,<25.0.0",
  "mypy>=1.10.0,<2.0.0",
  "pytest>=8.2.0,<9.0.0",
  "pytest-cov>=5.0.0,<6.0.0",
  "types-setuptools>=75.0.0.0",
  "types-toml>=0.10.8.20240310",
]
notebooks = [
    "jupyter>=1.0.0",
    "ipywidgets>=8.0.0",
    "matplotlib>=3.5.0",
    "plotly>=5.0.0",
    "pandas>=1.5.0",
    "seaborn>=0.11.0",
    "networkx>=2.8.0",
    "graphviz>=0.20.0",
]

[tool.setuptools]
package-dir = { "" = "src" }

[tool.setuptools.packages.find]
where = ["src"]
include = ["meridian*"]
namespaces = false

# ----------------------------
# Ruff (lint)
# ----------------------------
[tool.ruff]
line-length = 100
target-version = "py311"
extend-exclude = [
  "build",
  "dist",
  ".venv",
  ".uv",
  ".mypy_cache",
  ".ruff_cache",
  ".pytest_cache",
  "docs/**/generated",
  "notebooks/**",
]
lint.select = [
  "E",  # pycodestyle
  "F",  # pyflakes
  "I",  # isort
  "UP", # pyupgrade
  "B",  # flake8-bugbear
]
lint.ignore = [
  "E203", # whitespace before ':' (Black compatible)
]

[tool.ruff.lint.isort]
known-first-party = ["meridian"]

# ----------------------------
# Black (format)
# ----------------------------
[tool.black]
line-length = 100
target-version = ["py311"]
include = "\\.pyi?$"
extend-exclude = """
(
  /(
      \\.venv
    | \\.uv
    | build
    | dist
    | \\.mypy_cache
    | \\.ruff_cache
    | \\.pytest_cache
  )/
)
"""

# ----------------------------
# MyPy (types)
# ----------------------------
[tool.mypy]
python_version = "3.11"
plugins = []
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true
warn_redundant_casts = true
no_implicit_optional = true
strict_equality = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_any_generics = true
check_untyped_defs = true
pretty = true
show_error_codes = true
strict_optional = true
namespace_packages = true
explicit_package_bases = true

# Apply stricter rules to source, relaxed in tests


# ----------------------------
# Pytest (tests)
# ----------------------------
[tool.pytest.ini_options]
testpaths = ["tests"]
# Enforce 80% coverage in CI; local runs omit coverage flags for convenience.
addopts = "-q"
pythonpath = ["src", "."]
markers = [
  "unit: unit tests",
  "integration: integration tests",
  "stress: stress tests",
  "soak: long-running soak tests",
  "benchmark: micro/macro benchmarks",
]

# ----------------------------
# Coverage (optional local tuning)
# ----------------------------
[tool.coverage.run]
source = ["src"]
branch = true
parallel = true

[tool.coverage.report]
# Show which lines are missing to guide contributors toward meaningful tests.
show_missing = true
# Keep reporting uncovered files rather than hiding them; helps avoid blind spots.
skip_covered = false
# Enforce 80% coverage floor across reports; CI mirrors this threshold.
fail_under = 80

[dependency-groups]
dev = [
  "black>=24.10.0",
  "mypy>=1.17.1",
  "pytest>=8.4.1",
  "pytest-cov>=5.0.0",
  "ruff>=0.12.7",
]

# ----------------------------
# Note:
# Dev tools are invoked via `uvx` (no dependency groups).
# Examples:
#   uvx ruff check .
#   uvx black --check .
#   uvx mypy src
#   uvx pytest
# ----------------------------
