from .client import Client
from _typeshed import Incomplete
from radkit_common.access.oauth import OAuthConnectResponse
from radkit_common.domains import Domain
from radkit_common.identities import EndpointID
from radkit_common.types import OAuthProvider
from typing_extensions import Self

__all__ = ['create_context', 'ContextAlreadyCreatedError', 'NoContextCreatedError', 'Context', 'sso_login', 'access_token_login', 'list_clients']

class Context:
    client: Incomplete
    def __enter__(self) -> Self: ...
    def __exit__(self, *_: object) -> None: ...

def create_context(max_clients: int = ...) -> Context: ...

class ContextAlreadyCreatedError(Exception): ...
class NoContextCreatedError(Exception): ...

def sso_login(identity: EndpointID | None = None, domain: Domain | str | None = None, open_browser: bool | None = None, provider: OAuthProvider | None = None, oauth_connect_response: OAuthConnectResponse | None = None) -> Client: ...
def access_token_login(access_token: str, domain: Domain | str | None = None, provider: OAuthProvider | None = None) -> Client: ...
def list_clients() -> object: ...
