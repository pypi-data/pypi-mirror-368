# coding: utf-8

"""
    Robust Intelligence REST API

    API methods for Robust Intelligence. Users must authenticate using the `rime-api-key` header.

    The version of the OpenAPI document: 1.0
    Contact: dev@robustintelligence.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import unittest

from ri.apiclient.models.securitydb_file_scan_result import SecuritydbFileScanResult

class TestSecuritydbFileScanResult(unittest.TestCase):
    """SecuritydbFileScanResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SecuritydbFileScanResult:
        """Test SecuritydbFileScanResult
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SecuritydbFileScanResult`
        """
        model = SecuritydbFileScanResult()
        if include_optional:
            return SecuritydbFileScanResult(
                file_security_reports = [
                    ri.apiclient.models.securitydb/file_security_report.securitydb.FileSecurityReport(
                        creation_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        dependencies = [
                            ri.apiclient.models.dependency.Dependency(
                                description = '', 
                                name = '', 
                                severity = 'SEVERITY_NONE', )
                            ], 
                        filepath = '', 
                        last_modified_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        sha256 = '', 
                        size = 56, 
                        unsafe_dependencies = [
                            ri.apiclient.models.dependency.Dependency(
                                description = '', 
                                name = '', )
                            ], )
                    ],
                result_update_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                scanned_file_paths = [
                    ''
                    ],
                severity = 'SEVERITY_NONE'
            )
        else:
            return SecuritydbFileScanResult(
        )
        """

    def testSecuritydbFileScanResult(self):
        """Test SecuritydbFileScanResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()