# coding: utf-8

"""
    Robust Intelligence REST API

    API methods for Robust Intelligence. Users must authenticate using the `rime-api-key` header.

    The version of the OpenAPI document: 1.0
    Contact: dev@robustintelligence.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import unittest

from ri.apiclient.models.get_model_response import GetModelResponse

class TestGetModelResponse(unittest.TestCase):
    """GetModelResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetModelResponse:
        """Test GetModelResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetModelResponse`
        """
        model = GetModelResponse()
        if include_optional:
            return GetModelResponse(
                model = ri.apiclient.models.model_with_owner_details.ModelWithOwnerDetails(
                    model = ri.apiclient.models.model.Model(
                        creation_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        creator_id = ri.apiclient.models.id.ID(
                            uuid = '', ), 
                        external_id = '', 
                        integration_id = ri.apiclient.models.id.ID(
                            uuid = '', ), 
                        model_endpoint_integration_id = , 
                        model_id = , 
                        model_info = ri.apiclient.models.model_info.ModelInfo(
                            hugging_face = ri.apiclient.models.hugging_face_model_info.HuggingFaceModelInfo(
                                kwargs = '', 
                                model_uri = '', ), 
                            model_path = ri.apiclient.models.model_path_info.ModelPathInfo(
                                path = '', ), ), 
                        name = '', 
                        project_ids = [
                            
                            ], 
                        user_metadata = ri.apiclient.models.metadata.Metadata(
                            extra_info = '', 
                            tags = [
                                ''
                                ], ), 
                        validity_status = 'VALIDITY_STATUS_UNSPECIFIED', 
                        validity_status_message = '', ), 
                    owner_details = ri.apiclient.models.owner_details_returns_a_limited_details_about_a_user
to_provide_identity_of_the_owner_of_the_project.OwnerDetails returns a limited details about a user
to provide identity of the owner of the Project(
                        email = '', 
                        name = '', ), )
            )
        else:
            return GetModelResponse(
        )
        """

    def testGetModelResponse(self):
        """Test GetModelResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()