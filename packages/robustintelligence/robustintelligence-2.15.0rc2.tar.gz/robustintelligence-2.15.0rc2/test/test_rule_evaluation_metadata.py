# coding: utf-8

"""
    Robust Intelligence Firewall REST API

    API methods for Robust Intelligence. Users must authenticate using the `X-Firewall-Auth-Token` header. Your AI Firewall Agent domain forms the base of the URL for REST API calls. To find the Agent domain in the Robust Intelligence UI, click AI Firewall: Settings icon: Firewall Settings. Find your agent in the Firewall Agent Status: Agents Setup page, and copy its URL from the table.

    The version of the OpenAPI document: 1.0
    Contact: dev@robustintelligence.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import unittest

from ri.fwclient.models.rule_evaluation_metadata import RuleEvaluationMetadata

class TestRuleEvaluationMetadata(unittest.TestCase):
    """RuleEvaluationMetadata unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RuleEvaluationMetadata:
        """Test RuleEvaluationMetadata
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RuleEvaluationMetadata`
        """
        model = RuleEvaluationMetadata()
        if include_optional:
            return RuleEvaluationMetadata(
                evaluation_models = {
                    'key' : ri.fwclient.models.model_info.ModelInfo(
                        chunk_scores = [
                            ri.fwclient.models.raw_model_prediction.RawModelPrediction(
                                classification_pred = ri.fwclient.models.text_classification_pred.TextClassificationPred(
                                    scores = [
                                        1.337
                                        ], ), )
                            ], 
                        model_version = '', )
                    },
                yara_info = ri.fwclient.models.yara_info.YaraInfo(
                    action = 'FIREWALL_ACTION_UNSPECIFIED', 
                    is_decisive_match = True, 
                    matched_by_rules = [
                        ''
                        ], 
                    version_info = ri.fwclient.models.yara_version_info.YaraVersionInfo(
                        git_ref = '', 
                        latest_commit_hash = '', ), )
            )
        else:
            return RuleEvaluationMetadata(
        )
        """

    def testRuleEvaluationMetadata(self):
        """Test RuleEvaluationMetadata"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()