# coding: utf-8

"""
    Robust Intelligence REST API

    API methods for Robust Intelligence. Users must authenticate using the `rime-api-key` header.

    The version of the OpenAPI document: 1.0
    Contact: dev@robustintelligence.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import unittest

from ri.apiclient.models.get_feature_result_response import GetFeatureResultResponse

class TestGetFeatureResultResponse(unittest.TestCase):
    """GetFeatureResultResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetFeatureResultResponse:
        """Test GetFeatureResultResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetFeatureResultResponse`
        """
        model = GetFeatureResultResponse()
        if include_optional:
            return GetFeatureResultResponse(
                feature_result = ri.apiclient.models.test_feature_result.TestFeatureResult(
                    display = ri.apiclient.models.test_feature_result/display.TestFeatureResult.Display(
                        summary_details = 'YQ==', 
                        table_columns_to_show = [
                            ri.apiclient.models.table_column.TableColumn(
                                description = '', 
                                name = '', 
                                type = 'TABLE_COLUMN_TYPE_UNSPECIFIED', )
                            ], ), 
                    drift_statistic = ri.apiclient.models.named_double.NamedDouble(
                        name = '', 
                        value = 1.337, ), 
                    failing_rows_html = '', 
                    failing_tests = [
                        ''
                        ], 
                    feature_infos = [
                        ''
                        ], 
                    feature_name = '', 
                    feature_type = 'FEATURE_TYPE_UNSPECIFIED', 
                    model_impact = ri.apiclient.models.named_double.NamedDouble(
                        name = '', 
                        value = 1.337, ), 
                    num_failing_rows = '', 
                    severity = 'SEVERITY_UNSPECIFIED', 
                    summary_counts = ri.apiclient.models.result_summary_counts.ResultSummaryCounts(
                        fail = '', 
                        pass = '', 
                        skip = '', 
                        total = '', 
                        warning = '', ), 
                    url_safe_feature_id = '', )
            )
        else:
            return GetFeatureResultResponse(
        )
        """

    def testGetFeatureResultResponse(self):
        """Test GetFeatureResultResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()