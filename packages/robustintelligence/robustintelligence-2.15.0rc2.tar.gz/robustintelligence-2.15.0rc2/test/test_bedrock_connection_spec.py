# coding: utf-8

"""
    Robust Intelligence REST API

    API methods for Robust Intelligence. Users must authenticate using the `rime-api-key` header.

    The version of the OpenAPI document: 1.0
    Contact: dev@robustintelligence.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import unittest

from ri.apiclient.models.bedrock_connection_spec import BedrockConnectionSpec

class TestBedrockConnectionSpec(unittest.TestCase):
    """BedrockConnectionSpec unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BedrockConnectionSpec:
        """Test BedrockConnectionSpec
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BedrockConnectionSpec`
        """
        model = BedrockConnectionSpec()
        if include_optional:
            return BedrockConnectionSpec(
                additional_config = ri.apiclient.models.the_additional_configuration_parameters_associated_with_the_model.The additional configuration parameters associated with the model(),
                assume_role_arn = '',
                aws_access_key = ri.apiclient.models.aws_access_key.AWSAccessKey(
                    access_key_id = '', 
                    secret_access_key = '', ),
                body_template = ri.apiclient.models.template:_:1:_function_"prompt"_not_defined.template: :1: function "prompt" not defined(),
                inference_config = ri.apiclient.models.bedrock_inference_config.BedrockInferenceConfig(
                    max_tokens = 56, 
                    stop_sequences = [
                        ''
                        ], 
                    temperature = 1.337, 
                    top_p = 1.337, ),
                model_id = '',
                region = 'AWS_REGION_UNSPECIFIED',
                response_json_path = ''
            )
        else:
            return BedrockConnectionSpec(
        )
        """

    def testBedrockConnectionSpec(self):
        """Test BedrockConnectionSpec"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()