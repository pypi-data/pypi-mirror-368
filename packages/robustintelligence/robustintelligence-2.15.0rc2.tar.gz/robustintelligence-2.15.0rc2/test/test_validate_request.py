# coding: utf-8

"""
    Robust Intelligence Firewall REST API

    API methods for Robust Intelligence. Users must authenticate using the `X-Firewall-Auth-Token` header. Your AI Firewall Agent domain forms the base of the URL for REST API calls. To find the Agent domain in the Robust Intelligence UI, click AI Firewall: Settings icon: Firewall Settings. Find your agent in the Firewall Agent Status: Agents Setup page, and copy its URL from the table.

    The version of the OpenAPI document: 1.0
    Contact: dev@robustintelligence.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import unittest

from ri.fwclient.models.validate_request import ValidateRequest

class TestValidateRequest(unittest.TestCase):
    """ValidateRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ValidateRequest:
        """Test ValidateRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ValidateRequest`
        """
        model = ValidateRequest()
        if include_optional:
            return ValidateRequest(
                config = ri.fwclient.models.rule_config.RuleConfig(
                    custom_config = ri.fwclient.models.individual_rules_config.IndividualRulesConfig(
                        pii_detection_input = ri.fwclient.models.pii_detection_rule_config.PiiDetectionRuleConfig(
                            custom_entities = [
                                ri.fwclient.models.custom_pii_entity.CustomPiiEntity(
                                    context_words = [
                                        ''
                                        ], 
                                    name = '', 
                                    patterns = [
                                        ''
                                        ], )
                                ], 
                            entity_types = [
                                'PII_ENTITY_TYPE_UNSPECIFIED'
                                ], ), 
                        pii_detection_output = ri.fwclient.models.pii_detection_rule_config.PiiDetectionRuleConfig(), 
                        prompt_injection_input = ri.fwclient.models.prompt_injection_rule_config.PromptInjectionRuleConfig(
                            scan_contexts = True, 
                            sensitivity = 'RULE_SENSITIVITY_UNSPECIFIED', ), 
                        toxicity_input = ri.fwclient.models.toxicity_rule_config.ToxicityRuleConfig(), 
                        toxicity_output = ri.fwclient.models.toxicity_rule_config.ToxicityRuleConfig(), ), 
                    language = 'LANGUAGE_EN', 
                    selected_rules = [
                        'RULE_TYPE_UNSPECIFIED'
                        ], ),
                firewall_instance_id = None,
                output_text = '',
                user_input_text = ''
            )
        else:
            return ValidateRequest(
        )
        """

    def testValidateRequest(self):
        """Test ValidateRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()