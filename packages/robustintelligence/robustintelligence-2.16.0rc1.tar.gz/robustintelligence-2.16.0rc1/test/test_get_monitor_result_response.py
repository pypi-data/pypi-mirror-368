# coding: utf-8

"""
    Robust Intelligence REST API

    API methods for Robust Intelligence. Users must authenticate using the `rime-api-key` header.

    The version of the OpenAPI document: 1.0
    Contact: dev@robustintelligence.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import unittest

from ri.apiclient.models.get_monitor_result_response import GetMonitorResultResponse

class TestGetMonitorResultResponse(unittest.TestCase):
    """GetMonitorResultResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetMonitorResultResponse:
        """Test GetMonitorResultResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetMonitorResultResponse`
        """
        model = GetMonitorResultResponse()
        if include_optional:
            return GetMonitorResultResponse(
                data_points = [
                    ri.apiclient.models.monitor_data_point.MonitorDataPoint(
                        monitor_value = 1.337, 
                        time_interval = ri.apiclient.models.time_interval.TimeInterval(
                            end_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), )
                    ],
                description_html = '',
                long_description_tabs = [
                    ri.apiclient.models.long_description_tab.LongDescriptionTab(
                        contents = '', 
                        title = '', )
                    ],
                metric_name = '',
                monitor_id = ri.apiclient.models.id.ID(
                    uuid = '', ),
                monitor_name = '',
                threshold = ri.apiclient.models.thresholds_defined_for_the_monitor.Thresholds defined for the Monitor(
                    high = 1.337, 
                    low = 1.337, 
                    type = 'TYPE_UNSPECIFIED', )
            )
        else:
            return GetMonitorResultResponse(
        )
        """

    def testGetMonitorResultResponse(self):
        """Test GetMonitorResultResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()