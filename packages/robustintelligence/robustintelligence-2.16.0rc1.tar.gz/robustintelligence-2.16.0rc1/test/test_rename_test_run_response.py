# coding: utf-8

"""
    Robust Intelligence REST API

    API methods for Robust Intelligence. Users must authenticate using the `rime-api-key` header.

    The version of the OpenAPI document: 1.0
    Contact: dev@robustintelligence.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import unittest

from ri.apiclient.models.rename_test_run_response import RenameTestRunResponse

class TestRenameTestRunResponse(unittest.TestCase):
    """RenameTestRunResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RenameTestRunResponse:
        """Test RenameTestRunResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RenameTestRunResponse`
        """
        model = RenameTestRunResponse()
        if include_optional:
            return RenameTestRunResponse(
                test_run = ri.apiclient.models.test_run_detail.TestRunDetail(
                    bin_time_interval = ri.apiclient.models.time_interval.TimeInterval(
                        end_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                    eval_data_id = '', 
                    eval_data_sampling_pct = 1.337, 
                    metrics = ri.apiclient.models.test_run_metrics.TestRunMetrics(
                        average_prediction = 1.337, 
                        category_summary_metrics = [
                            ri.apiclient.models.category_summary_metric.CategorySummaryMetric(
                                category_id = '', 
                                name = '', 
                                test_category = 'TEST_CATEGORY_TYPE_UNSPECIFIED', 
                                value = 1.337, )
                            ], 
                        duration_millis = '', 
                        model_perf = {
                            'key' : ri.apiclient.models.model_perf_metric.ModelPerfMetric(
                                eval_metric = 1.337, 
                                ref_metric = 1.337, )
                            }, 
                        num_failing_inputs = '', 
                        num_inputs = '', 
                        risk_scores = [
                            ri.apiclient.models.risk_score.RiskScore(
                                score = 1.337, 
                                severity = 'SEVERITY_UNSPECIFIED', 
                                type = 'RISK_CATEGORY_TYPE_UNSPECIFIED', )
                            ], 
                        severity_counts = ri.apiclient.models.severity_counts.SeverityCounts(
                            num_high_severity = '', 
                            num_low_severity = '', 
                            num_none_severity = '', ), 
                        summary_counts = ri.apiclient.models.result_summary_counts.ResultSummaryCounts(
                            fail = '', 
                            pass = '', 
                            skip = '', 
                            total = '', 
                            warning = '', ), ), 
                    model_id = ri.apiclient.models.id.ID(
                        uuid = '', ), 
                    model_task = 'MODEL_TASK_UNSPECIFIED', 
                    name = '', 
                    progress = '', 
                    project_id = ri.apiclient.models.id.ID(
                        uuid = '', ), 
                    ref_data_id = '', 
                    ref_data_sampling_pct = 1.337, 
                    rime_version = '', 
                    schedule_id = , 
                    status = 'TEST_TASK_STATUS_UNSPECIFIED', 
                    test_categories = [
                        'TEST_CATEGORY_TYPE_UNSPECIFIED'
                        ], 
                    test_run_id = '', 
                    testing_type = 'TEST_TYPE_STRESS_TESTING_UNSPECIFIED', 
                    upload_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    web_app_url = ri.apiclient.models.safe_url.SafeURL(
                        url = '', ), )
            )
        else:
            return RenameTestRunResponse(
        )
        """

    def testRenameTestRunResponse(self):
        """Test RenameTestRunResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()