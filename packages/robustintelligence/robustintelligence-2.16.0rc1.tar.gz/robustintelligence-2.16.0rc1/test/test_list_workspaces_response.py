# coding: utf-8

"""
    Robust Intelligence REST API

    API methods for Robust Intelligence. Users must authenticate using the `rime-api-key` header.

    The version of the OpenAPI document: 1.0
    Contact: dev@robustintelligence.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import unittest

from ri.apiclient.models.list_workspaces_response import ListWorkspacesResponse

class TestListWorkspacesResponse(unittest.TestCase):
    """ListWorkspacesResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListWorkspacesResponse:
        """Test ListWorkspacesResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListWorkspacesResponse`
        """
        model = ListWorkspacesResponse()
        if include_optional:
            return ListWorkspacesResponse(
                has_more = True,
                next_page_token = '',
                workspaces = [
                    ri.apiclient.models.workspace.Workspace(
                        agent_ids = [
                            ri.apiclient.models.id.ID(
                                uuid = '', )
                            ], 
                        default_agent_id = ri.apiclient.models.id.ID(
                            uuid = '', ), 
                        description = '', 
                        name = '', 
                        results_retention_in_days = 56, 
                        workspace_id = , )
                    ]
            )
        else:
            return ListWorkspacesResponse(
        )
        """

    def testListWorkspacesResponse(self):
        """Test ListWorkspacesResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()