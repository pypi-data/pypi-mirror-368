# coding: utf-8

"""
    Robust Intelligence REST API

    API methods for Robust Intelligence. Users must authenticate using the `rime-api-key` header.

    The version of the OpenAPI document: 1.0
    Contact: dev@robustintelligence.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import unittest

from ri.apiclient.models.pred_info import PredInfo

class TestPredInfo(unittest.TestCase):
    """PredInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PredInfo:
        """Test PredInfo
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PredInfo`
        """
        model = PredInfo()
        if include_optional:
            return PredInfo(
                connection_info = ri.apiclient.models.connection_info.ConnectionInfo(
                    data_collector = ri.apiclient.models.data_collector_info.DataCollectorInfo(
                        data_stream_id = ri.apiclient.models.id.ID(
                            uuid = '', ), ), 
                    data_file = ri.apiclient.models.data_file_info.DataFileInfo(
                        data_type = 'DATA_TYPE_UNSPECIFIED', 
                        path = '', ), 
                    data_loading = ri.apiclient.models.data_loading_info.DataLoadingInfo(
                        data_endpoint_integration_id = ri.apiclient.models.id.ID(
                            uuid = '', ), 
                        load_func_name = '', 
                        loader_kwargs_json = '', 
                        path = '', ), 
                    databricks = ri.apiclient.models.databricks_info.DatabricksInfo(
                        table_name = '', ), 
                    hugging_face = ri.apiclient.models.hugging_face_data_info.HuggingFaceDataInfo(
                        dataset_uri = '', 
                        loading_params_json = '', 
                        split_name = '', ), ),
                pred_params = ri.apiclient.models.prediction_params.PredictionParams(
                    experimental_fields = {
                        'key' : None
                        }, 
                    pred_col = '', 
                    timestamp_col = '', )
            )
        else:
            return PredInfo(
        )
        """

    def testPredInfo(self):
        """Test PredInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()